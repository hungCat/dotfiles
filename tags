!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	2	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
$ alpha$	.vim/bundle/vimtex/test/feature/error-messages/input with spaces.tex	/^\\section{$\\alpha$}$/;"	s
$ alpha$	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{Test sub section 1}$/;"	s
$ alpha$	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsection{Test sub section 1}$/;"	s
.align 	.vim/bundle/vim-css3-syntax/test/test.css	/^.align {$/;"	c
.animations 	.vim/bundle/vim-css3-syntax/test/test.css	/^.animations {$/;"	c
.background 	.vim/bundle/vim-css3-syntax/test/test.css	/^.background {$/;"	c
.box 	.vim/bundle/vim-css3-syntax/test/test.css	/^.box {$/;"	c
.break 	.vim/bundle/vim-css3-syntax/test/test.css	/^.break {$/;"	c
.cascade-3 	.vim/bundle/vim-css3-syntax/test/test.css	/^.cascade-3 {$/;"	c
.cascade-4 	.vim/bundle/vim-css3-syntax/test/test.css	/^.cascade-4 {$/;"	c
.colors 	.vim/bundle/vim-css3-syntax/test/test.css	/^.colors {$/;"	c
.compositing 	.vim/bundle/vim-css3-syntax/test/test.css	/^.compositing {$/;"	c
.conditional 	.vim/bundle/vim-css3-syntax/test/test.css	/^  .conditional {$/;"	c
.content 	.vim/bundle/vim-css3-syntax/test/test.css	/^.content {$/;"	c
.counter-style 	.vim/bundle/vim-css3-syntax/test/test.css	/^.counter-style {$/;"	c
.display 	.vim/bundle/vim-css3-syntax/test/test.css	/^.display {$/;"	c
.exclusions 	.vim/bundle/vim-css3-syntax/test/test.css	/^.exclusions {$/;"	c
.flexbox 	.vim/bundle/vim-css3-syntax/test/test.css	/^.flexbox {$/;"	c
.fonts 	.vim/bundle/vim-css3-syntax/test/test.css	/^.fonts {$/;"	c
.foo	.vim/bundle/vim-css3-syntax/test/test.css	/^.scping:host(.foo),$/;"	c
.gcpm::footnote-call	.vim/bundle/vim-css3-syntax/test/test.css	/^.gcpm::footnote-call,$/;"	c
.gcpm::footnote-marker 	.vim/bundle/vim-css3-syntax/test/test.css	/^.gcpm::footnote-marker {$/;"	c
.grid 	.vim/bundle/vim-css3-syntax/test/test.css	/^.grid {$/;"	c
.html5-elements	.vim/bundle/vim-css3-syntax/test/test.css	/^.html5-elements,$/;"	c
.images 	.vim/bundle/vim-css3-syntax/test/test.css	/^.images {$/;"	c
.inline 	.vim/bundle/vim-css3-syntax/test/test.css	/^.inline {$/;"	c
.line-grid 	.vim/bundle/vim-css3-syntax/test/test.css	/^.line-grid {$/;"	c
.lists::marker 	.vim/bundle/vim-css3-syntax/test/test.css	/^.lists::marker {$/;"	c
.masking 	.vim/bundle/vim-css3-syntax/test/test.css	/^.masking {$/;"	c
.multicol 	.vim/bundle/vim-css3-syntax/test/test.css	/^.multicol {$/;"	c
.overflow 	.vim/bundle/vim-css3-syntax/test/test.css	/^.overflow {$/;"	c
.page 	.vim/bundle/vim-css3-syntax/test/test.css	/^.page {$/;"	c
.page-floats-3 	.vim/bundle/vim-css3-syntax/test/test.css	/^.page-floats-3 {$/;"	c
.positioning 	.vim/bundle/vim-css3-syntax/test/test.css	/^.positioning {$/;"	c
.pseudo::grammer-error	.vim/bundle/vim-css3-syntax/test/test.css	/^.pseudo::grammer-error,$/;"	c
.pseudo::selection	.vim/bundle/vim-css3-syntax/test/test.css	/^.pseudo::selection,$/;"	c
.pseudo::spelling-error	.vim/bundle/vim-css3-syntax/test/test.css	/^.pseudo::spelling-error,$/;"	c
.pseuod::placeholder 	.vim/bundle/vim-css3-syntax/test/test.css	/^.pseuod::placeholder {$/;"	c
.regions:region 	.vim/bundle/vim-css3-syntax/test/test.css	/^.regions:region {$/;"	c
.round-display-1 	.vim/bundle/vim-css3-syntax/test/test.css	/^  .round-display-1 {$/;"	c
.ruby 	.vim/bundle/vim-css3-syntax/test/test.css	/^.ruby {$/;"	c
.scoping 	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	c
.scoping 	.vim/bundle/vim-css3-syntax/test/test.css	/^@scope .scoping {$/;"	c
.scoping::content	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping::content,$/;"	c
.scoping::shadow	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping::shadow,$/;"	c
.scoping:host	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping:host,$/;"	c
.scoping:host-context	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping:host-context,$/;"	c
.scoping:scope-context div	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping:scope-context div,$/;"	c
.scping:host	.vim/bundle/vim-css3-syntax/test/test.css	/^.scping:host(.foo),$/;"	c
.selectors3:checked	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:checked,$/;"	c
.selectors3:disabled	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:disabled,$/;"	c
.selectors3:empty	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:empty,$/;"	c
.selectors3:enabled	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:enabled,$/;"	c
.selectors3:first-of-type	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:first-of-type,$/;"	c
.selectors3:indeterminate	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:indeterminate,$/;"	c
.selectors3:last-child	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:last-child,$/;"	c
.selectors3:last-of-type	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:last-of-type,$/;"	c
.selectors3:matches	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	c
.selectors3:not	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:not([DISABLED]) {$/;"	c
.selectors3:nth-child	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-child(2n+1),$/;"	c
.selectors3:nth-last-child	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-child(-n+2),$/;"	c
.selectors3:nth-last-of-type	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-of-type(n+2),$/;"	c
.selectors3:nth-of-type	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-of-type(2n+1),$/;"	c
.selectors3:only-child	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:only-child,$/;"	c
.selectors3:only-of-type	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:only-of-type,$/;"	c
.selectors3:root	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:root,$/;"	c
.selectors3:target	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:target,$/;"	c
.selectors4 	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4 | h1,$/;"	c
.selectors4:active-drop-target	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:active-drop-target,$/;"	c
.selectors4:any-link	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:any-link,$/;"	c
.selectors4:blank	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:blank,$/;"	c
.selectors4:column	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	c
.selectors4:current	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	c
.selectors4:current	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current,$/;"	c
.selectors4:default	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:default,$/;"	c
.selectors4:dir	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:dir(ltr),$/;"	c
.selectors4:future	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:future,$/;"	c
.selectors4:in-range	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:in-range,$/;"	c
.selectors4:invalid	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:invalid,$/;"	c
.selectors4:invalid-drop-target	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:invalid-drop-target,$/;"	c
.selectors4:local-link	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link(0),$/;"	c
.selectors4:local-link	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link,$/;"	c
.selectors4:nth-column	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-column(2n+1),$/;"	c
.selectors4:nth-last-column	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-column(-n+2),$/;"	c
.selectors4:nth-last-match	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-match(-n+2),$/;"	c
.selectors4:nth-match	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-match(2n+1),$/;"	c
.selectors4:optional	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:optional,$/;"	c
.selectors4:out-of-range	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:out-of-range,$/;"	c
.selectors4:past	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:past,$/;"	c
.selectors4:placeholder-shown	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:placeholder-shown,$/;"	c
.selectors4:read-only	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:read-only,$/;"	c
.selectors4:read-write	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:read-write,$/;"	c
.selectors4:required	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:required,$/;"	c
.selectors4:scope	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:scope,$/;"	c
.selectors4:user-error	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:user-error,$/;"	c
.selectors4:valid	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:valid,$/;"	c
.selectors4:valid-drop-target	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:valid-drop-target,$/;"	c
.shapes 	.vim/bundle/vim-css3-syntax/test/test.css	/^.shapes {$/;"	c
.sizing 	.vim/bundle/vim-css3-syntax/test/test.css	/^.sizing {$/;"	c
.snappoints 	.vim/bundle/vim-css3-syntax/test/test.css	/^.snappoints {$/;"	c
.speech 	.vim/bundle/vim-css3-syntax/test/test.css	/^.speech {$/;"	c
.text-3 	.vim/bundle/vim-css3-syntax/test/test.css	/^.text-3 {$/;"	c
.text-4 	.vim/bundle/vim-css3-syntax/test/test.css	/^.text-4 {$/;"	c
.text-decor-3 	.vim/bundle/vim-css3-syntax/test/test.css	/^.text-decor-3 {$/;"	c
.transforms 	.vim/bundle/vim-css3-syntax/test/test.css	/^.transforms {$/;"	c
.transitions 	.vim/bundle/vim-css3-syntax/test/test.css	/^.transitions {$/;"	c
.ui-3 	.vim/bundle/vim-css3-syntax/test/test.css	/^.ui-3 {$/;"	c
.ui-4 	.vim/bundle/vim-css3-syntax/test/test.css	/^.ui-4 {$/;"	c
.values 	.vim/bundle/vim-css3-syntax/test/test.css	/^.values {$/;"	c
.variables 	.vim/bundle/vim-css3-syntax/test/test.css	/^.variables {$/;"	c
.will-change 	.vim/bundle/vim-css3-syntax/test/test.css	/^.will-change {$/;"	c
.writing-modes 	.vim/bundle/vim-css3-syntax/test/test.css	/^.writing-modes {$/;"	c
0	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:local-link(0),$/;"	s
10G	.vim/bundle/vim-submode/t/expr.vim	/^    normal! 10G$/;"	m
2n+1	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-child(2n+1),$/;"	s
2n+1	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-of-type(2n+1),$/;"	s
2n+1	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-column(2n+1),$/;"	s
2n+1	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-match(2n+1),$/;"	s
<BS>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><BS> neocomplcache#smart_close_popup()."\\<C-h>"$/;"	m
<BS>	.vim/conf.d/plugins/neocomplete.vim	/^	inoremap <expr><BS> neocomplete#smart_close_popup()."\\<C-h>"$/;"	m
<C-c>	.vim/conf.d/plugins/vim-quickrun.vim	/^	nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\\<C-c>"$/;"	m
<C-e>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><C-e>  neocomplcache#cancel_popup()$/;"	m
<C-g>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><C-g>     neocomplcache#undo_completion()$/;"	m
<C-g>	.vim/conf.d/plugins/neocomplete.vim	/^	inoremap <expr><C-g>     neocomplete#undo_completion()$/;"	m
<C-h>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><C-h> neocomplcache#smart_close_popup()."\\<C-h>"$/;"	m
<C-h>	.vim/conf.d/plugins/neocomplete.vim	/^	inoremap <expr><C-h> neocomplete#smart_close_popup()."\\<C-h>"$/;"	m
<C-k>	.vim/conf.d/plugins/neosnippet.vim	/^	imap <C-k> <Plug>(neosnippet_expand_or_jump)$/;"	m
<C-l>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><C-l>     neocomplcache#complete_common_string()$/;"	m
<C-l>	.vim/conf.d/plugins/neocomplete.vim	/^	inoremap <expr><C-l>     neocomplete#complete_common_string()$/;"	m
<C-x><C-o>	.vim/conf.d/plugins/vim-marching.vim	/^	imap <buffer> <C-x><C-o> <Plug>(marching_start_omni_complete)$/;"	m
<C-y>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <expr><C-y>  neocomplcache#close_popup()$/;"	m
<CR>	.vim/conf.d/keymapping/misc.keymapping.vim	/^nnoremap <CR> A<CR><ESC>$/;"	m
<CR>	.vim/conf.d/plugins/neocomplcache.vim	/^	inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>$/;"	m
<CR>	.vim/conf.d/plugins/neocomplete.vim	/^	inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>$/;"	m
<Esc><Esc>	.vim/bundle/lexima.vim/plugin/lexima.vim	/^  inoremap <unique> <Esc><Esc> <Esc>$/;"	m
<f28>	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^cmap <f28> <nop>$/;"	m
<f28>	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^imap <expr> <f28> XTermPasteBegin("")$/;"	m
<f28>	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^map <expr> <f28> XTermPasteBegin("i")$/;"	m
<f28>	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^vmap <expr> <f28> XTermPasteBegin("c")$/;"	m
<f29>	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^cmap <f29> <nop>$/;"	m
<Leader>cd	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  map <silent> <unique> <Leader>cd <Plug>RooterChangeToRootDirectory$/;"	m
<leader>t	.vim/conf.d/plugins/tagbar.vim	/^  nnoremap <silent> <leader>t :TagbarToggle<CR>$/;"	m
<Plug>(go-build)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-build) :<C-u>call go#cmd#Build(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-callees)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callees) :<C-u>call go#oracle#Callees(-1)<CR>$/;"	m
<Plug>(go-callers)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callers) :<C-u>call go#oracle#Callers(-1)<CR>$/;"	m
<Plug>(go-callstack)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-callstack) :<C-u>call go#oracle#Callstack(-1)<CR>$/;"	m
<Plug>(go-channelpeers)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-channelpeers) :<C-u>call go#oracle#ChannelPeers(-1)<CR>$/;"	m
<Plug>(go-coverage)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-coverage) :<C-u>call go#cmd#Coverage(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-def)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def) :<C-u>call go#def#Jump()<CR>$/;"	m
<Plug>(go-def-split)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-split) :<C-u>call go#def#JumpMode("split")<CR>$/;"	m
<Plug>(go-def-tab)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-tab) :<C-u>call go#def#JumpMode("tab")<CR>$/;"	m
<Plug>(go-def-vertical)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-def-vertical) :<C-u>call go#def#JumpMode("vsplit")<CR>$/;"	m
<Plug>(go-deps)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-deps) :<C-u>call go#tool#Deps()<CR>$/;"	m
<Plug>(go-describe)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-describe) :<C-u>call go#oracle#Describe(-1)<CR>$/;"	m
<Plug>(go-doc)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-browser)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-browser) :<C-u>call go#doc#OpenBrowser()<CR>$/;"	m
<Plug>(go-doc-split)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-split) :<C-u>call go#doc#Open("new", "split")<CR>$/;"	m
<Plug>(go-doc-tab)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-tab) :<C-u>call go#doc#Open("tabnew", "tabe")<CR>$/;"	m
<Plug>(go-doc-vertical)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-doc-vertical) :<C-u>call go#doc#Open("vnew", "vsplit")<CR>$/;"	m
<Plug>(go-files)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-files) :<C-u>call go#tool#Files()<CR>$/;"	m
<Plug>(go-freevars)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-freevars) :<C-u>call go#oracle#Freevars(-1)<CR>$/;"	m
<Plug>(go-generate)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-generate) :<C-u>call go#cmd#Generate(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-implements)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-implements) :<C-u>call go#oracle#Implements(-1)<CR>$/;"	m
<Plug>(go-import)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-import) :<C-u>call go#import#SwitchImport(1, '', expand('<cword>'), '')<CR>$/;"	m
<Plug>(go-info)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-info) :<C-u>call go#complete#Info()<CR>$/;"	m
<Plug>(go-install)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-install) :<C-u>call go#cmd#Install(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-metalinter)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-metalinter) :<C-u>call go#lint#Gometa(0)<CR>$/;"	m
<Plug>(go-referrers)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-referrers) :<C-u>call go#oracle#Referrers(-1)<CR>$/;"	m
<Plug>(go-rename)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-rename) :<C-u>call go#rename#Rename(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-run)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-run) :<C-u>call go#cmd#Run(!g:go_jump_to_error, '%')<CR>$/;"	m
<Plug>(go-run-split)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^	nnoremap <silent> <Plug>(go-run-split) :<C-u>call go#cmd#RunTerm('split')<CR>$/;"	m
<Plug>(go-run-tab)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^	nnoremap <silent> <Plug>(go-run-tab) :<C-u>call go#cmd#RunTerm('tab')<CR>$/;"	m
<Plug>(go-run-vertical)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^	nnoremap <silent> <Plug>(go-run-vertical) :<C-u>call go#cmd#RunTerm('vsplit')<CR>$/;"	m
<Plug>(go-test)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 0)<CR>$/;"	m
<Plug>(go-test-compile)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-compile) :<C-u>call go#cmd#Test(!g:go_jump_to_error, 1)<CR>$/;"	m
<Plug>(go-test-func)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-test-func) :<C-u>call go#cmd#TestFunc(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(go-vet)	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^nnoremap <silent> <Plug>(go-vet) :<C-u>call go#lint#Vet(!g:go_jump_to_error)<CR>$/;"	m
<Plug>(marching_force_start_omni_complete)	.vim/bundle/vim-marching/plugin/marching.vim	/^inoremap <silent> <Plug>(marching_force_start_omni_complete)$/;"	m
<Plug>(marching_start_omni_complete)	.vim/bundle/vim-marching/plugin/marching.vim	/^inoremap <silent> <Plug>(marching_start_omni_complete)$/;"	m
<Plug>(neosnippet_expand)	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand)$/;"	m
<Plug>(neosnippet_expand_or_jump)	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_expand_or_jump)$/;"	m
<Plug>(neosnippet_jump)	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump)$/;"	m
<Plug>(neosnippet_jump_or_expand)	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <silent><expr> <Plug>(neosnippet_jump_or_expand)$/;"	m
<Plug>(neosnippet_start_unite_snippet)	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^inoremap <expr><silent> <Plug>(neosnippet_start_unite_snippet)$/;"	m
<Plug>(quickrun)	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^nnoremap <silent> <Plug>(quickrun) :<C-u>QuickRun -mode n<CR>$/;"	m
<Plug>(quickrun)	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^vnoremap <silent> <Plug>(quickrun) :<C-u>QuickRun -mode v<CR>$/;"	m
<Plug>(quickrun-op)	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^nnoremap <silent> <Plug>(quickrun-op)$/;"	m
<Plug>(vimfiler_create)	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_create)$/;"	m
<Plug>(vimfiler_simple)	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_simple)$/;"	m
<Plug>(vimfiler_split_create)	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_split_create)$/;"	m
<Plug>(vimfiler_split_switch)	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_split_switch)$/;"	m
<Plug>(vimfiler_switch)	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^nnoremap <silent> <Plug>(vimfiler_switch)$/;"	m
<plug>(vimtex-info)	.vim/bundle/vimtex/autoload/vimtex.vim	/^  nnoremap <buffer> <plug>(vimtex-info)      :VimtexInfo<cr>$/;"	m
<plug>(vimtex-info-full)	.vim/bundle/vimtex/autoload/vimtex.vim	/^  nnoremap <buffer> <plug>(vimtex-info-full) :VimtexInfo!<cr>$/;"	m
<plug>(vimtex-reload)	.vim/bundle/vimtex/autoload/vimtex.vim	/^  nnoremap <buffer> <plug>(vimtex-reload)    :VimtexReload<cr>$/;"	m
<Plug>RooterChangeToRootDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^noremap <unique> <script> <Plug>RooterChangeToRootDirectory <SID>ChangeToRootDirectory$/;"	m
<S-h>	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap <S-h> ^$/;"	m
<S-j>	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap <S-j> }$/;"	m
<S-k>	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap <S-k> {$/;"	m
<S-l>	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap <S-l> \$$/;"	m
<S-Tab>	.vim/conf.d/keymapping/misc.keymapping.vim	/^imap <expr><S-Tab>$/;"	m
<SID>ChangeToRootDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^noremap <SID>ChangeToRootDirectory :call <SID>ChangeToRootDirectory()<CR>$/;"	m
<Space>ii	.vim/after/ftplugin/cpp.vim	/^nnoremap <buffer><silent> <Space>ii :execute "?".&include<CR> :noh<CR> o$/;"	m
<Tab>	.vim/conf.d/keymapping/misc.keymapping.vim	/^imap <expr><Tab>$/;"	m
==	.vim/conf.d/keymapping/misc.keymapping.vim	/^nnoremap == gg=G''$/;"	m
abort	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:abort(path)$/;"	f
abort_all	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:abort_all()$/;"	f
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abutton_dec	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
Acknowledgements	.vim/bundle/vimtex/test/feature/folding/main.tex	/^Preface.$/;"	s
Acknowledgements	.vim/bundle/vimtex/test/feature/table-of-contents/frontmatter.tex	/^Preface.$/;"	s
Acknowledgements	.vim/bundle/vimtex/test/issue/241/preamble/preamble.tex	/^Preface.$/;"	s
actions_activate	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:actions_activate(close) dict "{{{1$/;"	f
actions_close	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:actions_close() dict "{{{1$/;"	f
actions_refresh	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:actions_refresh() dict " {{{1$/;"	f
action_table.cd.func	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! s:action_table.cd.func(candidate) "{{{$/;"	f
action_table.change.func	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^function! s:action_table.change.func(candidate) "{{{$/;"	f
action_table.delete.func	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^function! s:action_table.delete.func(candidates) "{{{$/;"	f
action_table.delete.func	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! s:action_table.delete.func(candidates) "{{{$/;"	f
action_table.expand.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.expand.func(candidate) "{{{$/;"	f
action_table.neosnippet_source.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:action_table.neosnippet_source.func(candidates) "{{{$/;"	f
action_table.preview.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.preview.func(candidates) "{{{$/;"	f
action_table.sort.func	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^function! s:action_table.sort.func(candidate) "{{{$/;"	f
action_table.unite__new_candidate.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
actual	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let actual = GetBuffer()$/;"	v
AddScopedTags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddToClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
add_cache	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:add_cache(context, completion)$/;"	f
add_depends	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:add_depends(bundle) "{{{$/;"	f
add_dummy_commands	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:add_dummy_commands(bundle) "{{{$/;"	f
add_dummy_mappings	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:add_dummy_mappings(bundle) "{{{$/;"	f
add_history	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:add_history(type, command) "{{{$/;"	f
add_ignore_rule	.vim/conf.d/plugins/lexima.vim	/^	function! s:add_ignore_rule(rule)$/;"	f
add_rule	.vim/conf.d/plugins/lexima.vim	/^	function! s:add_rule(rule, ...)$/;"	f
add_snippet_attribute	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:add_snippet_attribute(snippets_file, line, linenr, snippet_dict) "{{{$/;"	f
adjust_scroll	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:adjust_scroll(best_winline) "{{{$/;"	f
af	.vim/bundle/vim-go/ftplugin/go.vim	/^    onoremap <buffer> af :<c-u>call go#textobj#Function('a')<cr>$/;"	m
Agrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Agrep$/;"	c
AgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file AgrepAdd$/;"	c
Agrep_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Agrep_Path = 'agrep'$/;"	v
all	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:all(f, xs)$/;"	f
all	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:all(f, xs)$/;"	f
all	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all_exit	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:all_exit() "{{{$/;"	f
analyze_dictionary_variable_line	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_dictionary_variable_line(line, keyword_dict, var_name) "{{{$/;"	f
analyze_function_line	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_function_line(line, keyword_dict, prototype) "{{{$/;"	f
analyze_variable_line	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:analyze_variable_line(line, keyword_dict) "{{{$/;"	f
and	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:and(xs)$/;"	f
and	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:and(xs)$/;"	f
and	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:and(xs) abort$/;"	f
Another test subsection	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsubsection{Text $\\Gamma^{r}(\\ensuremath{{\\mathbf{Z}}}_p^d,\\mathbf{K})$}$/;"	b
Another test subsection	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsubsection{Text $\\Gamma^{r}(\\ensuremath{{\\mathbf{Z}}}_p^d,\\mathbf{K})$}$/;"	b
Another test subsection	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsubsection{Text $\\Gamma^{r}(\\ensuremath{{\\mathbf{Z}}}_p^d,\\mathbf{K})$}$/;"	b
any	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:any(f, xs)$/;"	f
any	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:any(f, xs)$/;"	f
any	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
append	.vim/bundle/unite.vim/plugin/unite/buffer.vim	/^function! s:append(path) "{{{$/;"	f
append	.vim/bundle/unite.vim/plugin/unite/window.vim	/^function! s:append() "{{{$/;"	f
Appendix 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\appendix$/;"	c
Appendix 1	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\chapter{Appendix 1}$/;"	c
Appendix 2	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{Test sub section 1}$/;"	c
Appendix 2	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsection{Test sub section 1}$/;"	c
Appendix subsection	.vim/bundle/vimtex/test/feature/folding/main.tex	/^This test document is created to test advanced TOC functionality.$/;"	s
Appendix subsection	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^This test document is created to test advanced TOC functionality.$/;"	s
append_log_file	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:append_log_file(msg) "{{{$/;"	f
apps_dir_from_src	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
APPVER	.vim/bundle/vimproc.vim/make_msvc.mak	/^APPVER = 5.0$/;"	m
ARCHS	.vim/bundle/vimproc.vim/make_mac.mak	/^ARCHS=$/;"	m
Args	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
argv	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	.vim/bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
aria_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes = widget_attributes$/;"	v
aria_attributes_value	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
article	.vim/bundle/vim-css3-syntax/test/test.css	/^article,$/;"	s
aside	.vim/bundle/vim-css3-syntax/test/test.css	/^aside,$/;"	s
async_load	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
async_system	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:async_system(cmd) abort "{{{$/;"	f
as_autokill_task	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:as_autokill_task(process)$/;"	f
as_list	.vim/conf.d/plugins/lexima.vim	/^	function! s:as_list(a)$/;"	f
as_task	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:as_task(process)$/;"	f
attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
audio	.vim/bundle/vim-css3-syntax/test/test.css	/^audio,$/;"	s
AutoUpdate	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
auto_ctags	.vim/bundle/auto-ctags.vim/plugin/auto_ctags.vim	/^augroup auto_ctags$/;"	a
auto_ctags#ctags	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^function! auto_ctags#ctags(recreate)$/;"	f
auto_ctags#ctags_cmd	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^function! auto_ctags#ctags_cmd()$/;"	f
auto_ctags#ctags_cmd_opt	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^function! auto_ctags#ctags_cmd_opt()$/;"	f
auto_ctags#ctags_lock_path	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^function! auto_ctags#ctags_lock_path()$/;"	f
auto_ctags#ctags_path	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^function! auto_ctags#ctags_path()$/;"	f
auto_formatted	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let auto_formatted = join(getline(1, line('$')), "\\n")$/;"	v
b:current_syntax	.vim/bundle/cpp-vim/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	.vim/bundle/cpp-vim/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	.vim/bundle/neobundle.vim/syntax/vimrecipe.vim	/^let b:current_syntax = 'recipe'$/;"	v
b:current_syntax	.vim/bundle/neosnippet.vim/syntax/neosnippet.vim	/^let b:current_syntax = "snippet"$/;"	v
b:current_syntax	.vim/bundle/nginx-vim-syntax/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	.vim/bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	.vim/bundle/unite.vim/syntax/unite.vim	/^let b:current_syntax = 'unite'$/;"	v
b:current_syntax	.vim/bundle/unite.vim/syntax/unite_exrename.vim	/^let b:current_syntax = 'unite_exrename'$/;"	v
b:current_syntax	.vim/bundle/vim-go/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	.vim/bundle/vim-go/syntax/godoc.vim	/^let b:current_syntax = "godoc"$/;"	v
b:current_syntax	.vim/bundle/vim-go/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	.vim/bundle/vim-go/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	.vim/bundle/vim-go/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	.vim/bundle/vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let b:current_syntax = 'vimfiler'$/;"	v
b:current_syntax	.vim/bundle/vimtex/after/syntax/tex.vim	/^  let b:current_syntax = 'tex'$/;"	v
b:current_syntax	.vim/bundle/vimtex/after/syntax/tex.vim	/^let b:current_syntax = 'tex'$/;"	v
b:c_minlines	.vim/bundle/cpp-vim/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	.vim/bundle/cpp-vim/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	.vim/bundle/cpp-vim/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:did_ftplugin	.vim/bundle/vim-go/ftplugin/go.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	.vim/bundle/vimtex/ftplugin/tex.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	.vim/bundle/html5.vim/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/nginx-vim-syntax/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vim-go/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vimtex/indent/bib.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	.vim/bundle/vimtex/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:javascript_fold	.vim/bundle/vim-javascript/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:marching_clang_command_default_options	.vim/bundle/vim-marching/after/ftplugin/c/marching.vim	/^let b:marching_clang_command_default_options = " -fsyntax-only"$/;"	v
b:marching_clang_command_default_options	.vim/bundle/vim-marching/after/ftplugin/cpp/marching.vim	/^let b:marching_clang_command_default_options = "-fsyntax-only -std=c++11"$/;"	v
b:undo_ftplugin	.vim/bundle/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	.vim/bundle/neosnippet.vim/ftplugin/neosnippet.vim	/^    let b:undo_ftplugin = '|'$/;"	v
b:undo_ftplugin	.vim/bundle/neosnippet.vim/ftplugin/neosnippet.vim	/^let b:undo_ftplugin .= '$/;"	v
b:undo_ftplugin	.vim/bundle/vim-go/ftplugin/go.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_indent	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^    let b:undo_indent = ''$/;"	v
b:undo_indent	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^    let b:undo_indent = '|'$/;"	v
b:undo_indent	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^let b:undo_indent .= '$/;"	v
b:vimtex_id	.vim/bundle/vimtex/autoload/vimtex.vim	/^    let b:vimtex_id = s:vimtex_next_id$/;"	v
back_to_previous_window	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:back_to_previous_window(...) abort$/;"	f
bang	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^function! s:bang(cmdline) "{{{$/;"	f
Base	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^from .base import Base$/;"	i
base.add	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.add(name, group, pattern, ...)$/;"	f
base.add_log	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.add_log(mes)$/;"	f
base.apply	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.apply(...)$/;"	f
base.as_result	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.as_result()$/;"	f
base.clear	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.clear(name)$/;"	f
base.clear_all	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.clear_all()$/;"	f
base.clear_log	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.clear_log()$/;"	f
base.delete	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.delete(name)$/;"	f
base.delete_all	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.delete_all()$/;"	f
base.delete_by	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.delete_by(expr)$/;"	f
base.disable	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.disable(name)$/;"	f
base.disable_all	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.disable_all()$/;"	f
base.enable	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.enable(name)$/;"	f
base.enable_all	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.enable_all()$/;"	f
base.enable_list	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.enable_list(...)$/;"	f
base.get	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.get()$/;"	f
base.get_hl_id	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.get_hl_id(name, ...)$/;"	f
base.highlight	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.highlight(name, group, pattern, ...)$/;"	f
base.hl_list	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.hl_list()$/;"	f
base.input	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:base.input(text, ...)$/;"	f
base.is_added	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.is_added(name)$/;"	f
base.is_enabled	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.is_enabled(name, ...)$/;"	f
base.is_exit	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.is_exit()$/;"	f
base.is_exit	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:base.is_exit()$/;"	f
base.is_killed	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.is_killed()$/;"	f
base.kill	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.kill(...)$/;"	f
base.kill	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:base.kill(...)$/;"	f
base.kill	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.kill(task)$/;"	f
base.list	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.list()$/;"	f
base.log	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.log()$/;"	f
base.register	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.register(task)$/;"	f
base.size	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.size()$/;"	f
base.start	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.start(...)$/;"	f
base.status	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.status()$/;"	f
base.status	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:base.status()$/;"	f
base.to_list	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.to_list()$/;"	f
base.to_list_by	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:base.to_list_by(expr)$/;"	f
base.update	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.update()$/;"	f
base.update	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.update()$/;"	f
base.update_in_cursorhold	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:base.update_in_cursorhold(...)$/;"	f
base.wait	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.wait()$/;"	f
base.wait_for	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:base.wait_for(time)$/;"	f
base.__reunions_task_apply	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Timer.vim	/^function! s:base.__reunions_task_apply(...)$/;"	f
basename	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:basename(path) abort$/;"	f
BaseTag.closeFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.New	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag.openFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
BaseTag._getPrefix	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
bash	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^function! s:bash(code)$/;"	f
bdi	.vim/bundle/vim-css3-syntax/test/test.css	/^bdi,$/;"	s
best_winline	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:best_winline() "{{{$/;"	f
Bgrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* Bgrep$/;"	c
BgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* BgrepAdd$/;"	c
bibtex_find_bibs	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:bibtex_find_bibs() " {{{1$/;"	f
bibtex_search	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:bibtex_search(regexp) " {{{1$/;"	f
binary_search	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
body_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
BOUNDARY_CHARS	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^BOUNDARY_CHARS = string.punctuation + string.whitespace$/;"	v
break	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:break(f, xs)$/;"	f
break	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:break(f, xs)$/;"	f
break	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
browse_check	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^function! s:browse_check(path) "{{{$/;"	f
buf	.vim/bundle/vimproc.vim/src/vimstack.c	/^    char *buf;   \/* stack buffer *\/$/;"	m	struct:vp_stack_t	file:
BufEnterHook	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
buffer	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let buffer = GetBuffer()$/;"	v
buffer	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let buffer = GetBuffer()$/;"	v
buffer_bookmark_action.func	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:buffer_bookmark_action.func(candidate) "{{{$/;"	f
buffer_default_settings	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! s:buffer_default_settings() "{{{$/;"	f
buffer_deleted	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:buffer_deleted() " {{{1$/;"	f
buffer_left	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:buffer_left() " {{{1$/;"	f
buflisted	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
buflisted	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:buflisted(bufnr) "{{{$/;"	f
BufReadPostHook	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufWritePostHook	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
build_config	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:build_config(config) abort$/;"	f
build_config_from_arglist	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:build_config_from_arglist(arglist) abort$/;"	f
build_extra_options	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:build_extra_options()$/;"	f
build_get_command	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^function! s:build_get_command(url, ...)$/;"	f
build_module	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:build_module(module, configs) abort$/;"	f
build_prim	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^function! s:build_prim(hi_elem, field)$/;"	f
by_clang_format_command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(1, line('$'), 'test.js')$/;"	v
by_clang_format_command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let by_clang_format_command = ClangFormat(11, 13)$/;"	v
by_clang_format_command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(1, line('$'))$/;"	v
by_clang_format_command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let by_clang_format_command = ClangFormat(11, 13)$/;"	v
CacheErrors	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
caching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching() "{{{$/;"	f
caching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching() "{{{$/;"	f
caching_completion_from_dict	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_completion_from_dict(dict_name) "{{{$/;"	f
caching_current_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:caching_current_buffer(start, end) "{{{$/;"	f
caching_current_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:caching_current_files() "{{{$/;"	f
caching_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:caching_dictionary(filetype)$/;"	f
caching_from_dict	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_from_dict(dict_name, kind) "{{{$/;"	f
caching_from_syn	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:caching_from_syn(filetype) "{{{$/;"	f
caching_prototype_from_dict	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:caching_prototype_from_dict(dict_name) "{{{$/;"	f
call_unite	.vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite(command, args, line1, line2) abort "{{{$/;"	f
call_unite_resume	.vim/bundle/unite.vim/plugin/unite.vim	/^function! s:call_unite_resume(args) "{{{$/;"	f
canvas 	.vim/bundle/vim-css3-syntax/test/test.css	/^canvas {$/;"	s
capture	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
CC	.tools/makefile	/^CC      = g++$/;"	m
CC	.vim/bundle/vimproc.vim/make_mac.mak	/^CC=clang$/;"	m
CC	.vim/bundle/vimproc.vim/make_mac.mak	/^CC=gcc$/;"	m
CC	.vim/bundle/vimproc.vim/make_mac.mak	/^CC=llvm-gcc$/;"	m
CC	.vim/bundle/vimproc.vim/make_mingw32.mak	/^CC=gcc$/;"	m
CC	.vim/bundle/vimproc.vim/make_mingw64.mak	/^CC=x86_64-w64-mingw32-gcc$/;"	m
CC	.vim/bundle/vimproc.vim/make_sunos.mak	/^CC=$(SUNCC)$/;"	m
CC	.vim/bundle/vimproc.vim/make_sunos.mak	/^CC=gcc$/;"	m
cdable_action_file.func	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:cdable_action_file.func(candidate)$/;"	f
cdable_action_rec.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec.func(candidate)$/;"	f
cdable_action_rec_async.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_async.func(candidate)$/;"	f
cdable_action_rec_parent.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent.func(candidate)$/;"	f
cdable_action_rec_parent_async.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_parent_async.func(candidate)$/;"	f
cdable_action_rec_project.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project.func(candidate)$/;"	f
cdable_action_rec_project_async.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:cdable_action_rec_project_async.func(candidate)$/;"	f
cd_file_directory	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:cd_file_directory() "{{{$/;"	f
cd_input_directory	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:cd_input_directory() "{{{$/;"	f
cf	.vim/conf.d/plugins/vim-clang-format.vim	/^	nnoremap cf :<C-u>ClangFormat<CR>$/;"	m
cf	.vim/conf.d/plugins/vim-clang-format.vim	/^	vnoremap cf :ClangFormat<CR>$/;"	m
CFLAGS	.tools/makefile	/^CFLAGS  = -g -MMD -MP -O2 -std=c++11 -Wall -Wextra -Winit-self -Wno-unused-parameter -Wfloat-equal -wsign-compare$/;"	m
CFLAGS	.vim/bundle/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) $(DEFINES) \/wd4100 \/wd4127 \/O2$/;"	m
CFLAGS	.vim/bundle/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_DEBUG$/;"	m
CFLAGS	.vim/bundle/vimproc.vim/make_msvc.mak	/^CFLAGS = $(CFLAGS) -D_NDEBUG$/;"	m
ChangeDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:ChangeDirectory(directory)$/;"	f
ChangeToRootDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:ChangeToRootDirectory()$/;"	f
Chapter 1	.vim/bundle/vimtex/test/issue/225/chapters/chapter.tex	/^\\chapter{Chapter 1}$/;"	c
Chapter 1	.vim/bundle/vimtex/test/issue/241/chapter/chapter.tex	/^\\chapter{Chapter 1}$/;"	c
charset	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let charset = [$/;"	v
char_range	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
char_range	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:char_range(from, to)$/;"	f
char_range	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
CheckBinaries	.vim/bundle/vim-go/plugin/go.vim	/^function! s:CheckBinaries()$/;"	f
CheckExCtagsVersion	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckForExCtags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckFTCtags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckMouseClick	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
check_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_buffer(bufnumber, is_force) "{{{$/;"	f
check_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:check_cache() "{{{$/;"	f
check_changed_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_changed_buffer(bufnumber) "{{{$/;"	f
check_copy_func	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_copy_func(filename) "{{{$/;"	f
check_delete_func	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_delete_func(filename) "{{{$/;"	f
check_force_quit	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:check_force_quit(vimfiler, action) "{{{$/;"	f
check_in_do_auto_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_is_directory	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:check_is_directory(directory)$/;"	f
check_lines	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:check_lines() "{{{$/;"	f
check_ls	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:check_ls()$/;"	f
check_old_cache	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename)$/;"	f
check_old_cache	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_old_cache	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_old_cache	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_opened	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:check_opened() "{{{$/;"	f
check_over_write	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:check_over_write(dest_dir, filename, overwrite_method, is_reset_method) "{{{$/;"	f
check_really_clean	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:check_really_clean(dirs) "{{{$/;"	f
check_recache	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_recache() "{{{$/;"	f
check_redraw	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:check_redraw() "{{{$/;"	f
check_source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:check_source() "{{{$/;"	f
check_system_compatibility	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:check_system_compatibility() " {{{1$/;"	f
check_tree	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! s:check_tree(files) "{{{$/;"	f
check_update_init	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:check_update_init(bundle, context, is_unite) "{{{$/;"	f
check_update_process	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:check_update_process(context, process, is_unite) "{{{$/;"	f
check_version	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! s:check_version(min_version) "{{{$/;"	f
check_version	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:check_version() " {{{1$/;"	f
CHERE_INVOKING	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^set CHERE_INVOKING=yes$/;"	v
chomp	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
chomp	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
Chomp	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! Chomp(s)$/;"	f
chomp	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:chomp(str) "{{{$/;"	f
chomp	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chomp	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
ChompHead	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! ChompHead(s)$/;"	f
choose_action	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
choose_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:choose_action() "{{{$/;"	f
chop	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
chop	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:chop(str) "{{{$/;"	f
chop	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chop	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
CHR2XD	.vim/bundle/vimproc.vim/src/vimstack.c	/^static const char CHR2XD[0x100] = {$/;"	v	file:
ClangFormat	.vim/bundle/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormat call clang_format#replace(<line1>, <line2>)$/;"	c
ClangFormat	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! ClangFormat(line1, line2, ...)$/;"	f
ClangFormatAutoToggle	.vim/bundle/vim-clang-format/plugin/clang_format.vim	/^command! ClangFormatAutoToggle call clang_format#toggle_auto_format()$/;"	c
ClangFormatEchoFormattedCode	.vim/bundle/vim-clang-format/plugin/clang_format.vim	/^command! -range=% -nargs=0 ClangFormatEchoFormattedCode echo clang_format#format(<line1>, <line2>)$/;"	c
clang_complete_command	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:clang_complete_command(cmd, file, line, col, args)$/;"	f
clang_complete_command	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:clang_complete_command(cmd, file, line, col, args)$/;"	f
clang_format#enable_format_on_insert	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#enable_format_on_insert()$/;"	f
clang_format#format	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#format(line1, line2)$/;"	f
clang_format#get_version	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#get_version()$/;"	f
clang_format#is_invalid	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#is_invalid()$/;"	f
clang_format#replace	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#replace(line1, line2)$/;"	f
clang_format#toggle_auto_format	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! clang_format#toggle_auto_format()$/;"	f
ClassSep	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
clear	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:clear(list)$/;"	f
clear	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:clear(list) abort$/;"	f
ClearCache	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
clear_cache	.vim/bundle/vim-marching/plugin/marching.vim	/^function! s:clear_cache()$/;"	f
clear_complete	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:clear_complete() "{{{$/;"	f
clear_dummy	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:clear_dummy(bundle) "{{{$/;"	f
clear_marks	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:clear_marks(candidates) "{{{$/;"	f
clear_mark_all_lines	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:clear_mark_all_lines(vimfiler) "{{{$/;"	f
clear_previewed_buffer_list	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:clear_previewed_buffer_list() "{{{$/;"	f
clients.curl.available	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.curl.available(settings)$/;"	f
clients.curl.request	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.curl.request(settings)$/;"	f
clients.curl._command	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.curl._command(settings)$/;"	f
clients.python.available	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.python.available(settings)$/;"	f
clients.python.request	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.python.request(settings)$/;"	f
clients.wget.available	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.wget.available(settings)$/;"	f
clients.wget.request	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.wget.request(settings)$/;"	f
clients.wget._command	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:clients.wget._command(settings)$/;"	f
clipboard_copy	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:clipboard_copy() "{{{$/;"	f
clipboard_move	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:clipboard_move() "{{{$/;"	f
clipboard_paste	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:clipboard_paste() "{{{$/;"	f
close	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:close(vimfiler) "{{{$/;"	f
close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:close() dict "{{{$/;"	f
close	.vim/bundle/vimproc.vim/src/proc_w32.c	183;"	d	file:
closed_fdopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:closed_fdopen(f_close, f_read, f_write) "{{{$/;"	f
CloseFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
close_all	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:close_all(self) "{{{$/;"	f
close_allfd	.vim/bundle/vimproc.vim/src/proc.c	/^close_allfd(int fds[3][2])$/;"	f	file:
close_preview_window	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
cmd.close	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.close() "{{{$/;"	f
cmd.open	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.open() "{{{$/;"	f
cmd.system	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^function! s:cmd.system(cmd) "{{{$/;"	f
cmp_vimproc	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:cmp_vimproc(a, b) "{{{$/;"	f
cnt	.vim/bundle/vimproc.vim/tools/benchmark.vim	/^let cnt = 25$/;"	v
codecs	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
column.define_syntax	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.define_syntax	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.define_syntax	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.get	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.get	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.get	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^function! s:column.get(file, context) "{{{$/;"	f
column.length	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^function! s:column.length(files, context) "{{{$/;"	f
column.length	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^function! s:column.length(files, context) "{{{$/;"	f
column.length	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^function! s:column.length(files, context) "{{{$/;"	f
combinations	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
common_head	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:common_head(strs)$/;"	f
common_head	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:common_head(strs)$/;"	f
common_head	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
common_head	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
compare	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:compare(i1, i2)$/;"	f
compare	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	.vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
compare	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! s:compare(candidate_a, candidate_b) "{{{$/;"	f
CompareByKind	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
compare_filename	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:compare_filename(i1, i2)$/;"	f
compare_filename	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! s:compare_filename(i1, i2)$/;"	f
compare_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! s:compare_pos(i1, i2)$/;"	f
compare_source_rank	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
compare_word	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:compare_word(i1, i2)$/;"	f
CompilerSet	.vim/bundle/vim-go/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
complete	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:complete() "{{{$/;"	f
CompleteCheckerName	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
complete_bookmark_filename	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:complete_bookmark_filename(arglead, cmdline, cursorpos) "{{{$/;"	f
complete_process.clear	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:complete_process.clear()$/;"	f
complete_process.clear	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:complete_process.clear()$/;"	f
complete_process.start	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:complete_process.start(context)$/;"	f
complete_process.start	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:complete_process.start(context)$/;"	f
complete_start	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:complete_start()$/;"	f
comp_bundle	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:comp_bundle(bundle1, bundle2)$/;"	f
concat	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:concat(list)$/;"	f
concat	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:concat(list)$/;"	f
concat	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:concat(list) abort$/;"	f
conceal	.vim/bundle/vimtex/after/syntax/tex.vim	/^let conceal = (has('conceal') && get(g:, 'tex_conceal', 'b') =~# 'b')$/;"	v
CONFIG_FILE	.vim/bundle/html5.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CONFIG_FILE	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
conj	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
conj	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:conj(xs, x)$/;"	f
conj	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
cons	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:cons(x, xs)$/;"	f
cons	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
consume	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:consume(label, varname) abort$/;"	f
consume_all_blocking	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:consume_all_blocking(label, varname, timeout_sec) abort$/;"	f
contains_multibyte	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:contains_multibyte(str) "{{{$/;"	f
contains_multibyte	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
contains_multibyte	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
convert	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^function! s:convert(val, is_pathshorten)$/;"	f
convert	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^function! s:convert(val, is_pathshorten)$/;"	f
converter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_abbr_word.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:converter.filter(candidates, context)$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
converter.filter	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! s:converter.filter(candidates, context) "{{{$/;"	f
convert_args	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:convert_args(args) "{{{$/;"	f
convert_path	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:convert_path(path) "{{{$/;"	f
convert_to_abbr	.vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! s:convert_to_abbr(path)$/;"	f
conv_vim2remote	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:conv_vim2remote(runner, selfvim, cmd) abort$/;"	f
copy	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy(src, dest) abort "{{{$/;"	f
copy	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:copy(src, dest) abort "{{{$/;"	f
copy	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:copy() "{{{$/;"	f
copy_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe() abort$/;"	f
copy_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f
copy_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:copy_exe() abort$/;"	f
copy_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:copy_exe(src, dest) abort$/;"	f
copy_vim	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:copy_vim(src, dest) abort "{{{$/;"	f
copy_vim	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:copy_vim(src, dest) abort "{{{$/;"	f
core_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'is': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
CorrectFocusOnStartup	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
count	.vim/bundle/vimtex/indent/bib.vim	/^function! s:count(pattern, line) " {{{1$/;"	f
counter-style 	.vim/bundle/vim-css3-syntax/test/test.css	/^@counter-style counter-style {$/;"	s
count_delimiters	.vim/bundle/vimtex/indent/tex.vim	/^function! s:count_delimiters(line, pattern) " {{{1$/;"	f
CPU	.vim/bundle/vimproc.vim/make_msvc.mak	/^CPU = $(PROCESSOR_ARCHITECTURE)$/;"	m
CPU	.vim/bundle/vimproc.vim/make_msvc.mak	/^CPU = i386$/;"	m
CreateAutocommands	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreatePseudoTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
create_candidate	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:create_candidate(val) "{{{$/;"	f
create_map	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:create_map(map) " {{{1$/;"	f
create_vimfiler_buffer	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! s:create_vimfiler_buffer(path, context) "{{{$/;"	f
Ctags	.vim/bundle/auto-ctags.vim/plugin/auto_ctags.vim	/^command! Ctags call auto_ctags#ctags(1)$/;"	c
CtagsErrMsg	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
ctermid	.vim/bundle/vimproc.vim/src/proc.c	82;"	d	file:
CURL_OPT	.vim/bundle/html5.vim/Makefile	/^CURL_OPT=$/;"	m
CURL_OPT	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^CURL_OPT=$/;"	m
current_compiler	.vim/bundle/vim-go/compiler/go.vim	/^let current_compiler = "go"$/;"	v
current_compiler	.vim/bundle/vimtex/compiler/lacheck.vim	/^let current_compiler = "lacheck"$/;"	v
current_compiler	.vim/bundle/vimtex/compiler/latexmk.vim	/^let current_compiler = 'latexmk'$/;"	v
current_context	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:current_context()$/;"	f
cursor_bottom	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:cursor_bottom() "{{{$/;"	f
cursor_bottom	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:cursor_bottom() "{{{$/;"	f
cursor_down	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_down() "{{{$/;"	f
cursor_top	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:cursor_top() "{{{$/;"	f
cursor_up	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:cursor_up() "{{{$/;"	f
custom_alternate_buffer	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:custom_alternate_buffer() "{{{$/;"	f
custom_base	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! s:custom_base(key, kind, name, value) "{{{$/;"	f
cygwin	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:cygwin$/;"	l
cygwin_test	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:cygwin_test$/;"	l
data	.vim/bundle/vim-css3-syntax/test/test.css	/^data,$/;"	s
datalist	.vim/bundle/vim-css3-syntax/test/test.css	/^datalist,$/;"	s
dd	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
dd	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
debug	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
debug	.vim/bundle/vimproc.vim/src/proc.c	/^const int debug = 0;$/;"	v
debug	.vim/bundle/vimproc.vim/src/proc_w32.c	/^const int debug = 0;$/;"	v
debug_processes	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:debug_processes() abort$/;"	f
decode	.vim/bundle/vim-marching/autoload/vital/_marching/Web/JSON.vim	/^function! s:decode(json)$/;"	f
decodeURI	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:decodeURI(str)$/;"	f
decode_list	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_list(str)$/;"	f
decode_size	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:decode_size(str, off)$/;"	f
deep	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	s
deepextend	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:deepextend(a, b) abort$/;"	f
default_highlight	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! s:default_highlight()$/;"	f
default_maps	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:default_maps() " {{{1$/;"	f
default_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
DEFINES	.vim/bundle/vimproc.vim/make_msvc.mak	/^DEFINES = -D_CRT_SECURE_NO_WARNINGS=1 -D_BIND_TO_CURRENT_VCLIBS_VERSION=1$/;"	m
define_column_regions	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! s:define_column_regions(max_len, columns) abort "{{{$/;"	f
define_entering_mapping	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:define_entering_mapping(submode, mode, options, lhs, rhs)  "{{{2$/;"	f
define_filename_regions	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! s:define_filename_regions(max_len) abort "{{{$/;"	f
define_map	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! s:define_map(char, mapping)$/;"	f
define_map	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! s:define_map(char, mapping, prehook, posthook)$/;"	f
define_signals	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:define_signals()$/;"	f
define_submode_mapping	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:define_submode_mapping(submode, mode, options, lhs, rhs)  "{{{2$/;"	f
def_python	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:def_python()$/;"	f
delete	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:delete(cache_dir, filename)$/;"	f
delete	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
delete	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:delete(delete_command, candidate) "{{{$/;"	f
delete	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
delete	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:delete() "{{{$/;"	f
delete	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deletefile	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:deletefile(cache_dir, filename)$/;"	f
deletefile	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
deletefile	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
deletefile	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
delete_backward_path	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:delete_backward_path() "{{{$/;"	f
DEPENDS	.tools/makefile	/^DEPENDS = $(OBJS:.o=.d)$/;"	m
DEPEND_DIR	.vim/bundle/html5.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
DEPEND_DIR	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
dep_from_git	.vim/bundle/html5.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_git	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	.vim/bundle/html5.vim/Makefile	/^dep_from_svn = \\$/;"	m
dep_from_svn	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^dep_from_svn = \\$/;"	m
detain_winsock	.vim/bundle/vimproc.vim/src/proc_w32.c	/^detain_winsock()$/;"	f	file:
DetectFiletype	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
detect_clang_format	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! s:detect_clang_format()$/;"	f
detect_style_file	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:detect_style_file()$/;"	f
did_angularjs_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    let did_angularjs_coffee_syntax_inits = 1$/;"	v
did_angularjs_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    let did_angularjs_javascript_syntax_inits = 1$/;"	v
did_angularjs_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    let did_angularjs_ls_syntax_inits = 1$/;"	v
did_angularjs_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    let did_angularjs_typescript_syntax_inits = 1$/;"	v
did_angularui_router_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    let did_angularui_router_coffee_syntax_inits = 1$/;"	v
did_angularui_router_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    let did_angularui_router_javascript_syntax_inits = 1$/;"	v
did_angularui_router_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    let did_angularui_router_ls_syntax_inits = 1$/;"	v
did_angularui_router_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    let did_angularui_router_typescript_syntax_inits = 1$/;"	v
did_backbone_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    let did_backbone_coffee_syntax_inits = 1$/;"	v
did_backbone_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    let did_backbone_javascript_syntax_inits = 1$/;"	v
did_backbone_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    let did_backbone_ls_syntax_inits = 1$/;"	v
did_backbone_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    let did_backbone_typescript_syntax_inits = 1$/;"	v
did_chai_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    let did_chai_coffee_syntax_inits = 1$/;"	v
did_chai_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    let did_chai_javascript_syntax_inits = 1$/;"	v
did_chai_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    let did_chai_ls_syntax_inits = 1$/;"	v
did_chai_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    let did_chai_typescript_syntax_inits = 1$/;"	v
did_cpp_syntax_inits	.vim/bundle/cpp-vim/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_javascript_syn_inits	.vim/bundle/vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
diffidx	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
diffidx	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:diffidx(a, b)$/;"	f
diffidx	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffidx	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
dirname	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:dirname(path) abort$/;"	f
dirname	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:dirname(path)$/;"	f
DIRS	.vim/bundle/html5.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DIRS	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
DISABLED	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:not([DISABLED]) {$/;"	s
disable_max_candidates	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:disable_max_candidates() "{{{$/;"	f
disable_operation	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:disable_operation() "{{{$/;"	f
display: auto	.vim/bundle/vim-css3-syntax/test/test.css	/^  (display: auto) not$/;"	s
display: auto	.vim/bundle/vim-css3-syntax/test/test.css	/^  (display: auto) {$/;"	s
display: auto	.vim/bundle/vim-css3-syntax/test/test.css	/^  display: auto;$/;"	s
display: auto	.vim/bundle/vim-css3-syntax/test/test.css	/^@supports (display: auto) or$/;"	s
display_neco	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:display_neco(number) "{{{$/;"	f
dispose_session	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:dispose_session(key) abort$/;"	f
document_structure	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
document_structure	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let document_structure = ['article', 'columnheader', 'definition', 'directory', 'document', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator']$/;"	v
doc_dict.search	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
doc_dict.search	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:doc_dict.search(cur_text) "{{{$/;"	f
dollar_add	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
DOTVIMRC	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^:DOTVIMRC$/;"	l
DOTVIMRC	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^:DOTVIMRC$/;"	l
do_new_candidate_action	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:do_new_candidate_action() "{{{$/;"	f
do_rename	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:do_rename() "{{{$/;"	f
do_tests	.vim/bundle/emmet-vim/unittest.vim	/^function! s:do_tests(...)$/;"	f
drag_and_drop_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {'aria-dropeffect': ['copy', 'move', 'link', 'execute', 'popup', 'none'], 'aria-grabbed': ['true', 'false', 'undefined']}$/;"	v
dstring	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:dstring(expr)$/;"	f
dstring	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:dstring(expr)$/;"	f
dstring	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dstring	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dt	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
dt	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
each_char	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:each_char(s)  "{{{2$/;"	f
echo	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:echo(expr, mode) "{{{$/;"	f
echomsg	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
echomsg	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
echomsg	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
echo_mode	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:echo_mode(m, mode) "{{{$/;"	f
EditClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditConfig	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
edit_binary_file	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:edit_binary_file() "{{{$/;"	f
Egrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Egrep$/;"	c
EgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file EgrepAdd$/;"	c
Egrep_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Egrep_Path = 'egrep'$/;"	v
embed	.vim/bundle/vim-css3-syntax/test/test.css	/^embed,$/;"	s
Emmet	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
emmet#anchorizeURL	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#css#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#exists	.vim/bundle/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#haml#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#html#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#jade#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#less#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#sass#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#scss#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#balanceTag	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toggleComment	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#slim#toString	.vim/bundle/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lorem#en#expand	.vim/bundle/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	.vim/bundle/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toggleComment	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#toString	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#unescapeDollarExpr	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getcurpos	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#getImageSize	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#imageSizeWithImageMagick	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
EmmetInstall	.vim/bundle/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	.vim/bundle/emmet-vim/unittest.vim	/^command! -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests(<f-args>)$/;"	c
emmet_unittest_complete	.vim/bundle/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
encode	.vim/bundle/vim-marching/autoload/vital/_marching/Web/JSON.vim	/^function! s:encode(val)$/;"	f
encodeURI	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:encodeURI(items)$/;"	f
encodeURIComponent	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:encodeURIComponent(items)$/;"	f
encode_list	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_list(arr)$/;"	f
encode_size	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:encode_size(n)$/;"	f
ends_with	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
error	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^    def error(self, msg):$/;"	m	class:UniteHandlers
Error	.vim/bundle/vim-go/autoload/go/import.vim	/^function! s:Error(s)$/;"	f
error	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
Errors	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
error_message	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:error_message(result)$/;"	f
escape	.vim/bundle/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escape	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:escape(str)$/;"	f
EscapeCtagsCmd	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
escape_file_pattern	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:escape_file_pattern(pat) abort$/;"	f
escape_file_searching	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_file_searching	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:escape_file_searching(buffer_name)$/;"	f
escape_file_searching	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_file_searching	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escape_pattern	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:escape_pattern(str)$/;"	f
escape_pattern	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
Ev	.vim/conf.d/basic/commands.basic.vim	/^command! Ev Rsp $MYVIMRC$/;"	c
eval_cmdline	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! s:eval_cmdline(cmdline) abort "{{{$/;"	f
eval_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:eval_snippet(snippet_text) "{{{$/;"	f
events	.vim/bundle/vimproc.vim/src/fakepoll.h	/^    short events;                   \/* events of interest on fd *\/$/;"	m	struct:pollfd
event_attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
execute	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^function! s:execute(cmd) abort$/;"	f
execute	.vim/bundle/vim-quickrun/autoload/quickrun/runner/system.vim	/^function! s:execute(cmd, input) abort$/;"	f
execute	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimscript.vim	/^function! s:execute(cmd) abort$/;"	f
ExecuteCtags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
execute_command	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:execute_command(command) "{{{$/;"	f
execute_command	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:execute_command(command, candidate) "{{{$/;"	f
execute_external_filer	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:execute_external_filer() "{{{$/;"	f
execute_shell_command	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:execute_shell_command() "{{{$/;"	f
execute_system_associated	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:execute_system_associated() "{{{$/;"	f
execute_vimfiler_associated	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:execute_vimfiler_associated() "{{{$/;"	f
EXEC_NEOBUNDLE_INSTALL	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^:EXEC_NEOBUNDLE_INSTALL$/;"	l
EXEC_NEOBUNDLE_INSTALL	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^:EXEC_NEOBUNDLE_INSTALL$/;"	l
exists	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:exists(name) abort$/;"	f
exists	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:exists(name) abort$/;"	f
exists	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:exists(name)$/;"	f
exists	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:exists(name) abort$/;"	f
exists	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:exists(name)$/;"	f
exists	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:exists(name) abort$/;"	f
exists	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:exists(name) abort$/;"	f
exists_current_source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:exists_current_source() "{{{$/;"	f
exit	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	.vim/bundle/syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
exit	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:exit(bufnr) "{{{$/;"	f
exit	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:exit() "{{{$/;"	f
exit	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:exit(vimfiler) "{{{$/;"	f
ExitingOneLineScope	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
ExitRemoteProcess	.vim/bundle/vimproc.vim/src/proc_w32.c	/^static BOOL ExitRemoteProcess(HANDLE hProcess, UINT_PTR uExitCode)$/;"	f	file:
expand_modules	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:expand_modules(entry, all)$/;"	f
expand_modules	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:expand_modules(entry, all)$/;"	f
expand_modules	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_placeholder	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_placeholder(start, end, holder_cnt, line, ...) "{{{$/;"	f
expand_target_placeholder	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:expand_target_placeholder(line, col) "{{{$/;"	f
expand_tree	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:expand_tree(is_recursive) "{{{$/;"	f
expected	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let expected = ClangFormat(1, line('$'))$/;"	v
expect_the_same_output	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! s:expect_the_same_output(line1, line2)$/;"	f
EXPORT	.vim/bundle/vimproc.vim/src/proc_w32.c	56;"	d	file:
EXPORT	.vim/bundle/vimproc.vim/src/proc_w32.c	58;"	d	file:
extend_actions	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:extend_actions(self_func, action_table1, action_table2, ...) "{{{$/;"	f
external	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:external(command, dest_dir, src_files) "{{{$/;"	f
external_cd	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:external_cd(candidate) "{{{$/;"	f
Extra section with $ epsilon$ warnings	.vim/bundle/vimtex/test/feature/error-messages/input with spaces.tex	/^\\section{$\\alpha$}$/;"	s
f	.vim/bundle/vim-clang-format/t/test.cpp	/^void f(){ std::cout << "hello\\n"; }$/;"	f
fallback_opts	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
fcntl,	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^        import fcntl, os$/;"	m
fd	.vim/bundle/vimproc.vim/src/fakepoll.h	/^    int fd;                         \/* file desc to poll *\/$/;"	m	struct:pollfd
fdopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pgroup	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pgroup(proc, fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pipes	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pipes(fd, f_close, f_read, f_write) "{{{$/;"	f
fdopen_pty	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:fdopen_pty(fd_stdin, fd_stdout, f_close, f_read, f_write) "{{{$/;"	f
fd_set_nonblock	.vim/bundle/vimproc.vim/src/proc.c	/^fd_set_nonblock(int fd)$/;"	f	file:
fetch_github	.vim/bundle/html5.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_github	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_local	.vim/bundle/html5.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_local	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_url	.vim/bundle/html5.vim/Makefile	/^fetch_url = \\$/;"	m
fetch_url	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^fetch_url = \\$/;"	m
Fgrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Fgrep$/;"	c
FgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file FgrepAdd$/;"	c
Fgrep_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Fgrep_Path = 'fgrep'$/;"	v
figcaption	.vim/bundle/vim-css3-syntax/test/test.css	/^figcaption,$/;"	s
figure	.vim/bundle/vim-css3-syntax/test/test.css	/^figure,$/;"	s
FileInfo.clearOldFolds	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.New	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.openKindFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
filename_changed_post	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:filename_changed_post() " {{{1$/;"	f
filename_changed_pre	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:filename_changed_pre() " {{{1$/;"	f
filereadable	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:filereadable(cache_dir, filename)$/;"	f
filereadable	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filereadable	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
filereadable	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
FILES	.vim/bundle/html5.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
FILES	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
filetype_off	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:filetype_off() "{{{$/;"	f
file_bookmark_action.func	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^function! s:file_bookmark_action.func(candidate) "{{{$/;"	f
file_exist	.vim/bundle/auto-ctags.vim/spec/auto_ctags_spec.rb	/^def file_exist(file)$/;"	f
filter.filter	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:filter.filter(candidates, context)$/;"	f
filter.filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_files.vim	/^function! s:filter.filter(files, context) "{{{$/;"	f
filter.filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_pattern.vim	/^function! s:filter.filter(files, context) "{{{$/;"	f
filter.filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_wildignore.vim	/^function! s:filter.filter(files, context) "{{{$/;"	f
filter_alias_action	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_alias_action(action_table, alias_table, from) "{{{$/;"	f
filter_flags	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:filter_flags(s, cs)  "{{{2$/;"	f
filter_self_func	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:filter_self_func(action_table, self_func) "{{{$/;"	f
finalize	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:finalize()$/;"	f
find	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
find	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:find(list, default, f)$/;"	f
find	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:find() "{{{$/;"	f
find	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
FindInCurrentPath	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:FindInCurrentPath(pattern)$/;"	f
FindRootDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! FindRootDirectory()$/;"	f
find_end_of_match	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^def find_end_of_match(to_match, chars, first_index):$/;"	f
find_index	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_rule	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! s:find_rule(char)$/;"	f
find_rule	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! s:find_rule(char)$/;"	f
Fixedgq	.vim/bundle/vim-javascript/indent/javascript.vim	/^function! Fixedgq(lnum, count)$/;"	f
fix_quickfix_paths	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:fix_quickfix_paths() " {{{1$/;"	f
flatten	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
flatten	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:flatten(list, ...)$/;"	f
flatten	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
Flip	.vim/bundle/vim-submode/t/expr.vim	/^function! Flip()$/;"	f
flow_elements	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'element', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
focus	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	s
focus_viewer	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:focus_viewer() dict " {{{1$/;"	f
focus_vim	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:focus_vim() dict " {{{1$/;"	f
foldl	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:foldl(f, init, xs)$/;"	f
foldl	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldl1	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:foldl1(f, xs)$/;"	f
foldl1	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldmethod_in_modeline	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:foldmethod_in_modeline()$/;"	f
foldr	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:foldr(f, init, xs)$/;"	f
foldr	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
foldr1	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:foldr1(f, xs)$/;"	f
foldr1	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
footer	.vim/bundle/vim-css3-syntax/test/test.css	/^footer,$/;"	s
forkpty	.vim/bundle/vimproc.vim/src/ptytty.c	/^forkpty(int *amaster, char *name,$/;"	f
formatted	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let formatted = clang_format#format(1, line('$'))$/;"	v
format_inserted_area	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:format_inserted_area()$/;"	f
format_time	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:format_time(time) "{{{$/;"	f
ForwardToZshChecker	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
funcref	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:funcref(funcname)$/;"	f
g:acp_enableAtStartup	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:acp_enableAtStartup = 0$/;"	v
g:acp_enableAtStartup	.vim/conf.d/plugins/neocomplete.vim	/^	let g:acp_enableAtStartup = 0$/;"	v
g:aria_attributes_complete	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_auto_ctags	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^let g:autoloaded_auto_ctags = 1$/;"	v
g:auto_ctags	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags = 0$/;"	v
g:auto_ctags	.vim/conf.d/plugins/auto-ctags.vim	/^	let g:auto_ctags = 1$/;"	v
g:auto_ctags_bin_path	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags_bin_path = 'ctags'$/;"	v
g:auto_ctags_directory_list	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags_directory_list = ['.']$/;"	v
g:auto_ctags_filetype_mode	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags_filetype_mode = 0$/;"	v
g:auto_ctags_tags_args	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags_tags_args = '--tag-relative --recurse --sort=yes'$/;"	v
g:auto_ctags_tags_args	.vim/conf.d/plugins/auto-ctags.vim	/^	let g:auto_ctags_tags_args = ''$/;"	v
g:auto_ctags_tags_name	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^  let g:auto_ctags_tags_name = 'tags'$/;"	v
g:bracketed_paste_tmux_wrap	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^  let g:bracketed_paste_tmux_wrap = 1$/;"	v
g:clang_format#auto_format	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format = s:getg('clang_format#auto_format', 0)$/;"	v
g:clang_format#auto_format	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#auto_format = 1$/;"	v
g:clang_format#auto_formatexpr	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_formatexpr = s:getg('clang_format#auto_formatexpr', 0)$/;"	v
g:clang_format#auto_formatexpr	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#auto_formatexpr = 1$/;"	v
g:clang_format#auto_format_on_insert_leave	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#auto_format_on_insert_leave = s:getg('clang_format#auto_format_on_insert_leave', 0)$/;"	v
g:clang_format#auto_format_on_insert_leave	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#auto_format_on_insert_leave = 1$/;"	v
g:clang_format#code_style	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#code_style = s:getg('clang_format#code_style', 'google')$/;"	v
g:clang_format#command	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#command = s:getg('clang_format#command', 'clang-format')$/;"	v
g:clang_format#command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#command = "clang_format_not_exist"$/;"	v
g:clang_format#command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#command = '.\/' . s:root_dir . 't\/clang-format-dummy.sh'$/;"	v
g:clang_format#command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#command = s:cmd_tmp$/;"	v
g:clang_format#command	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^let g:clang_format#command = s:detect_clang_format()$/;"	v
g:clang_format#detect_style_file	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#detect_style_file = s:getg('clang_format#detect_style_file', 1)$/;"	v
g:clang_format#detect_style_file	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#detect_style_file	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let g:clang_format#detect_style_file = 0$/;"	v
g:clang_format#extra_args	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^    let g:clang_format#extra_args = join(g:clang_format#extra_args, " ")$/;"	v
g:clang_format#extra_args	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#extra_args = s:getg('clang_format#extra_args', "")$/;"	v
g:clang_format#filetype_style_options	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#filetype_style_options = s:getg('clang_format#filetype_style_options', {})$/;"	v
g:clang_format#style_options	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let g:clang_format#style_options = s:getg('clang_format#style_options', {})$/;"	v
g:clang_format#style_options	.vim/conf.d/plugins/vim-clang-format.vim	/^	let g:clang_format#style_options = {$/;"	v
g:colors_name	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let g:colors_name = "hybrid"$/;"	v
g:emmet_curl_command	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:flipped	.vim/bundle/vim-submode/t/expr.vim	/^let g:flipped = 0$/;"	v
g:go_dispatch_enabled	.vim/bundle/vim-go/autoload/go/cmd.vim	/^    let g:go_dispatch_enabled = 0$/;"	v
g:go_doc_command	.vim/bundle/vim-go/autoload/go/doc.vim	/^    let g:go_doc_command = "godoc"$/;"	v
g:go_doc_options	.vim/bundle/vim-go/autoload/go/doc.vim	/^    let g:go_doc_options = ""$/;"	v
g:go_errcheck_bin	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_errcheck_bin = "errcheck"$/;"	v
g:go_fmt_command	.vim/bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_command = "gofmt"$/;"	v
g:go_fmt_experimental	.vim/bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_experimental = 0$/;"	v
g:go_fmt_fail_silently	.vim/bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_fail_silently = 0$/;"	v
g:go_fmt_options	.vim/bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_fmt_options = ''$/;"	v
g:go_gocode_bin	.vim/bundle/vim-go/autoload/go/complete.vim	/^    let g:go_gocode_bin = "gocode"$/;"	v
g:go_godef_bin	.vim/bundle/vim-go/autoload/go/def.vim	/^	let g:go_godef_bin = "godef"$/;"	v
g:go_goimports_bin	.vim/bundle/vim-go/autoload/go/fmt.vim	/^    let g:go_goimports_bin = "goimports"$/;"	v
g:go_golint_bin	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_golint_bin = "golint"$/;"	v
g:go_gorename_bin	.vim/bundle/vim-go/autoload/go/rename.vim	/^    let g:go_gorename_bin = "gorename"$/;"	v
g:go_gotags_bin	.vim/bundle/vim-go/ftplugin/go/tagbar.vim	/^	let g:go_gotags_bin = "gotags"$/;"	v
g:go_highlight_array_whitespace_error	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_array_whitespace_error = 1$/;"	v
g:go_highlight_build_constraints	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_build_constraints = 0$/;"	v
g:go_highlight_chan_whitespace_error	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_chan_whitespace_error = 1$/;"	v
g:go_highlight_extra_types	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_extra_types = 1$/;"	v
g:go_highlight_functions	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_functions = 0$/;"	v
g:go_highlight_methods	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_methods = 0$/;"	v
g:go_highlight_operators	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_operators = 0$/;"	v
g:go_highlight_space_tab_error	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_space_tab_error = 1$/;"	v
g:go_highlight_string_spellcheck	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_string_spellcheck = 1$/;"	v
g:go_highlight_structs	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_structs = 0$/;"	v
g:go_highlight_trailing_whitespace_error	.vim/bundle/vim-go/syntax/go.vim	/^  let g:go_highlight_trailing_whitespace_error = 1$/;"	v
g:go_jump_to_error	.vim/bundle/vim-go/ftplugin/go/mappings.vim	/^    let g:go_jump_to_error = 1$/;"	v
g:go_loaded_gosnippets	.vim/bundle/vim-go/ftplugin/go/snippets.vim	/^let g:go_loaded_gosnippets = 1$/;"	v
g:go_loaded_install	.vim/bundle/vim-go/plugin/go.vim	/^let g:go_loaded_install = 1$/;"	v
g:go_metalinter_autosave_enabled	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_metalinter_autosave_enabled = ['vet', 'golint']$/;"	v
g:go_metalinter_command	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_metalinter_command = ""$/;"	v
g:go_metalinter_deadline	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_metalinter_deadline = "5s"$/;"	v
g:go_metalinter_enabled	.vim/bundle/vim-go/autoload/go/lint.vim	/^    let g:go_metalinter_enabled = ['vet', 'golint', 'errcheck']$/;"	v
g:go_oracle_bin	.vim/bundle/vim-go/autoload/go/oracle.vim	/^    let g:go_oracle_bin = "oracle"$/;"	v
g:go_play_open_browser	.vim/bundle/vim-go/autoload/go/play.vim	/^    let g:go_play_open_browser = 1$/;"	v
g:go_snippet_engine	.vim/bundle/vim-go/ftplugin/go/snippets.vim	/^	let g:go_snippet_engine = "ultisnips"$/;"	v
g:go_term_mode	.vim/bundle/vim-go/autoload/go/term.vim	/^	let g:go_term_mode = 'vsplit'$/;"	v
g:go_textobj_enabled	.vim/bundle/vim-go/autoload/go/textobj.vim	/^    let g:go_textobj_enabled = 1$/;"	v
g:html5_aria_attributes_complete	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:hybrid_use_Xresources	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let g:hybrid_use_Xresources = 0$/;"	v
g:javascript_conceal	.vim/bundle/vim-javascript/syntax/javascript.vim	/^  let g:javascript_conceal = 0$/;"	v
g:kind	.vim/bundle/unite.vim/test/source.vim	/^let g:kind = {$/;"	v
g:kind	.vim/bundle/unite.vim/test/source.vim	/^let g:kind.action_table.open = {$/;"	v
g:lexima#default_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima#default_rules += [$/;"	v
g:lexima#default_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima#default_rules = [$/;"	v
g:lexima#newline_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima#newline_rules = [$/;"	v
g:lexima#space_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima#space_rules = [$/;"	v
g:lexima_enable_basic_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_enable_basic_rules = get(g:, 'lexima_enable_basic_rules', 1)$/;"	v
g:lexima_enable_endwise_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_enable_endwise_rules = get(g:, 'lexima_enable_endwise_rules', 1)$/;"	v
g:lexima_enable_newline_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_enable_newline_rules = get(g:, 'lexima_enable_newline_rules', 1)$/;"	v
g:lexima_enable_space_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_enable_space_rules = get(g:, 'lexima_enable_space_rules', 1)$/;"	v
g:lexima_map_escape	.vim/bundle/lexima.vim/plugin/lexima.vim	/^  let g:lexima_map_escape = '<Esc>'$/;"	v
g:lexima_no_default_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_no_default_rules = get(g:, 'lexima_no_default_rules', 0)$/;"	v
g:lexima_no_default_rules	.vim/conf.d/plugins/lexima.vim	/^	let g:lexima_no_default_rules = 1$/;"	v
g:lexima_no_map_to_escape	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let g:lexima_no_map_to_escape = get(g:, 'lexima_no_map_to_escape', 0)$/;"	v
g:loaded_auto_ctags	.vim/bundle/auto-ctags.vim/plugin/auto_ctags.vim	/^let g:loaded_auto_ctags = 1$/;"	v
g:loaded_clang_format	.vim/bundle/vim-clang-format/plugin/clang_format.vim	/^let g:loaded_clang_format = 1$/;"	v
g:loaded_emmet_vim	.vim/bundle/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_lexima	.vim/bundle/lexima.vim/plugin/lexima.vim	/^let g:loaded_lexima = 1$/;"	v
g:loaded_marching	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:loaded_marching = 1$/;"	v
g:loaded_neobundle	.vim/bundle/neobundle.vim/plugin/neobundle.vim	/^let g:loaded_neobundle = 1$/;"	v
g:loaded_neocomplcache	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:loaded_neocomplcache = 1$/;"	v
g:loaded_neocomplcache_buffer_complete	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^let g:loaded_neocomplcache_buffer_complete = 1$/;"	v
g:loaded_neocomplcache_dictionary_complete	.vim/bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^let g:loaded_neocomplcache_dictionary_complete = 1$/;"	v
g:loaded_neocomplcache_include_complete	.vim/bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^let g:loaded_neocomplcache_include_complete = 1$/;"	v
g:loaded_neocomplcache_syntax_complete	.vim/bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^let g:loaded_neocomplcache_syntax_complete = 1$/;"	v
g:loaded_neocomplcache_tags_complete	.vim/bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^let g:loaded_neocomplcache_tags_complete = 1$/;"	v
g:loaded_neosnippet	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^let g:loaded_neosnippet = 1$/;"	v
g:loaded_quickrun	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^let g:loaded_quickrun = 1$/;"	v
g:loaded_rooter	.vim/bundle/vim-rooter/plugin/rooter.vim	/^let g:loaded_rooter = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	.vim/bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	.vim/bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	.vim/bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	.vim/bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	.vim/bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	.vim/bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	.vim/bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	.vim/bundle/syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	.vim/bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	.vim/bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	.vim/bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	.vim/bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	.vim/bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	.vim/bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	.vim/bundle/syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	.vim/bundle/syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	.vim/bundle/syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	.vim/bundle/syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	.vim/bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	.vim/bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	.vim/bundle/syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	.vim/bundle/syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	.vim/bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	.vim/bundle/syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_mixedindentlint_checker	.vim/bundle/syntastic/syntax_checkers/css/mixedindentlint.vim	/^let g:loaded_syntastic_css_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	.vim/bundle/syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	.vim/bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	.vim/bundle/syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	.vim/bundle/syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	.vim/bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	.vim/bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	.vim/bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	.vim/bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	.vim/bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	.vim/bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	.vim/bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	.vim/bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	.vim/bundle/syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	.vim/bundle/syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	.vim/bundle/syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	.vim/bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	.vim/bundle/syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	.vim/bundle/syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	.vim/bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	.vim/bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	.vim/bundle/syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dockerfile_dockerfile_lint_checker	.vim/bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let g:loaded_syntastic_dockerfile_dockerfile_lint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	.vim/bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	.vim/bundle/syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	.vim/bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	.vim/bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	.vim/bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	.vim/bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	.vim/bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	.vim/bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	.vim/bundle/syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	.vim/bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	.vim/bundle/syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	.vim/bundle/syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	.vim/bundle/syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	.vim/bundle/syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	.vim/bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	.vim/bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	.vim/bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	.vim/bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	.vim/bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	.vim/bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	.vim/bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	.vim/bundle/syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	.vim/bundle/syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	.vim/bundle/syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	.vim/bundle/syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	.vim/bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	.vim/bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	.vim/bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	.vim/bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_mixedindentlint_checker	.vim/bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let g:loaded_syntastic_javascript_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	.vim/bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	.vim/bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	.vim/bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	.vim/bundle/syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	.vim/bundle/syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	.vim/bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	.vim/bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	.vim/bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	.vim/bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	.vim/bundle/syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	.vim/bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	.vim/bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	.vim/bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	.vim/bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	.vim/bundle/syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifiers	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	.vim/bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	.vim/bundle/syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	.vim/bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	.vim/bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	.vim/bundle/syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	.vim/bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	.vim/bundle/syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	.vim/bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	.vim/bundle/syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	.vim/bundle/syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	.vim/bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	.vim/bundle/syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	.vim/bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	.vim/bundle/syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_plugin	.vim/bundle/syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	.vim/bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	.vim/bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	.vim/bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	.vim/bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	.vim/bundle/syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	.vim/bundle/syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	.vim/bundle/syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	.vim/bundle/syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	.vim/bundle/syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	.vim/bundle/syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	.vim/bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	.vim/bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	.vim/bundle/syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	.vim/bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	.vim/bundle/syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rmd_lintr_checker	.vim/bundle/syntastic/syntax_checkers/rmd/lintr.vim	/^let g:loaded_syntastic_rmd_lintr_checker = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	.vim/bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	.vim/bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	.vim/bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	.vim/bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	.vim/bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	.vim/bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	.vim/bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	.vim/bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	.vim/bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	.vim/bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_r_lintr_checker	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^let g:loaded_syntastic_r_lintr_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	.vim/bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	.vim/bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	.vim/bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_mixedindentlint_checker	.vim/bundle/syntastic/syntax_checkers/scss/mixedindentlint.vim	/^let g:loaded_syntastic_scss_mixedindentlint_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	.vim/bundle/syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	.vim/bundle/syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	.vim/bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	.vim/bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	.vim/bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	.vim/bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	.vim/bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_slim_slim_lint_checker	.vim/bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^let g:loaded_syntastic_slim_slim_lint_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	.vim/bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	.vim/bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	.vim/bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	.vim/bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	.vim/bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	.vim/bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	.vim/bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	.vim/bundle/syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	.vim/bundle/syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	.vim/bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	.vim/bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	.vim/bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_eslint_checker	.vim/bundle/syntastic/syntax_checkers/typescript/eslint.vim	/^let g:loaded_syntastic_typescript_eslint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	.vim/bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	.vim/bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	.vim/bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	.vim/bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	.vim/bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	.vim/bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	.vim/bundle/syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	.vim/bundle/syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	.vim/bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	.vim/bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	.vim/bundle/syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	.vim/bundle/syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	.vim/bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	.vim/bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	.vim/bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	.vim/bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	.vim/bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	.vim/bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_unite	.vim/bundle/unite.vim/plugin/unite.vim	/^let g:loaded_unite = 1$/;"	v
g:loaded_unite_source_bookmark	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let g:loaded_unite_source_bookmark = 1$/;"	v
g:loaded_unite_source_buffer	.vim/bundle/unite.vim/plugin/unite/buffer.vim	/^let g:loaded_unite_source_buffer = 1$/;"	v
g:loaded_unite_source_window	.vim/bundle/unite.vim/plugin/unite/window.vim	/^let g:loaded_unite_source_window = 1$/;"	v
g:loaded_vimfiler	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^let g:loaded_vimfiler = 1$/;"	v
g:loaded_vimproc	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^let g:loaded_vimproc = 1$/;"	v
g:marching#clang_command#options	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^let g:marching#clang_command#options = get(g:, "marching#clang_command#options", {})$/;"	v
g:marching#clang_command#options	.vim/conf.d/plugins/vim-marching.vim	/^	let g:marching#clang_command#options = {$/;"	v
g:marching#sync_wandbox#timeout	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^let g:marching#sync_wandbox#timeout = get(g:, "marching#sync_wandbox#timeout", "")$/;"	v
g:marching_backend	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_backend               = get(g:, "marching_backend", "clang_command")$/;"	v
g:marching_clang_command	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_clang_command         = get(g:, "marching_clang_command", "clang")$/;"	v
g:marching_clang_command_option	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_clang_command_option  = get(g:, "marching_clang_command_option", "")$/;"	v
g:marching_debug	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_debug                 = get(g:, "marching_debug", 0)$/;"	v
g:marching_enable_auto_select	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_enable_auto_select    = get(g:, "marching_enable_auto_select", 0)$/;"	v
g:marching_enable_dup	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_enable_dup = get(g:, "marching_enable_dup", 1)$/;"	v
g:marching_enable_neocomplete	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_enable_neocomplete    = get(g:, "marching_enable_neocomplete", 0)$/;"	v
g:marching_enable_neocomplete	.vim/conf.d/plugins/vim-marching.vim	/^		let g:marching_enable_neocomplete = 1$/;"	v
g:marching_enable_refresh_always	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_enable_refresh_always = get(g:, "marching_enable_refresh_always", 0)$/;"	v
g:marching_include_paths	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_include_paths         = get(g:, "marching_include_paths", [])$/;"	v
g:marching_include_paths	.vim/conf.d/plugins/vim-marching.vim	/^	let g:marching_include_paths = filter($/;"	v
g:marching_wait_time	.vim/bundle/vim-marching/plugin/marching.vim	/^let g:marching_wait_time             = get(g:, "marching_wait_time", 0.5)$/;"	v
g:myconfig	.vim/conf.d/00-configuration.vim	/^let g:myconfig = {}$/;"	v
g:myconfig	.vim/conf.d/00-configuration.vim	/^let g:myconfig.cpp_include_dirs = expand(exists("$VIM_CPP_INCLUDE_DIR") ? $VIM_CPP_INCLUDE_DIR : '')$/;"	v
g:myconfig	.vim/conf.d/00-configuration.vim	/^let g:myconfig.neobundle_dir = expand(exists("$VIM_NEOBUNDLE_PLUGIN_DIR") ? $VIM_NEOBUNDLE_PLUGIN_DIR : '~\/.vim\/bundle')$/;"	v
g:neobundle#enable_name_conversion	.vim/bundle/neobundle.vim/test/parse.vim	/^let g:neobundle#enable_name_conversion = 0$/;"	v
g:neobundle#hooks	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let g:neobundle#hooks = {}$/;"	v
g:neobundle#tapped	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let g:neobundle#tapped = {}$/;"	v
g:neobundle#types#git#default_protocol	.vim/bundle/neobundle.vim/test/commands.vim	/^let g:neobundle#types#git#default_protocol = 'https'$/;"	v
g:neobundle#types#git#default_protocol	.vim/bundle/neobundle.vim/test/parse.vim	/^let g:neobundle#types#git#default_protocol = 'https'$/;"	v
g:neobundle#types#hg#default_protocol	.vim/bundle/neobundle.vim/test/parse.vim	/^let g:neobundle#types#hg#default_protocol = 'https'$/;"	v
g:neocomplcache_auto_completion_start_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_auto_completion_start_length =$/;"	v
g:neocomplcache_caching_limit_file_size	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_caching_limit_file_size =$/;"	v
g:neocomplcache_ctags_program	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_ctags_program =$/;"	v
g:neocomplcache_cursor_hold_i_time	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_cursor_hold_i_time =$/;"	v
g:neocomplcache_dictionary_filetype_lists	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_dictionary_filetype_lists = {$/;"	v
g:neocomplcache_disabled_sources_list	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_disabled_sources_list._ =$/;"	v
g:neocomplcache_disabled_sources_list	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disabled_sources_list =$/;"	v
g:neocomplcache_disable_auto_complete	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_auto_complete =$/;"	v
g:neocomplcache_disable_caching_file_path_pattern	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_disable_caching_file_path_pattern =$/;"	v
g:neocomplcache_enable_at_startup	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_enable_at_startup = 1$/;"	v
g:neocomplcache_enable_auto_close_preview	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_close_preview =$/;"	v
g:neocomplcache_enable_auto_delimiter	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_delimiter =$/;"	v
g:neocomplcache_enable_auto_select	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_auto_select =$/;"	v
g:neocomplcache_enable_caching_message	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_caching_message =$/;"	v
g:neocomplcache_enable_camel_case_completion	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_camel_case_completion =$/;"	v
g:neocomplcache_enable_cursor_hold_i	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_cursor_hold_i =$/;"	v
g:neocomplcache_enable_debug	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_debug =$/;"	v
g:neocomplcache_enable_fuzzy_completion	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_fuzzy_completion =$/;"	v
g:neocomplcache_enable_ignore_case	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_ignore_case =$/;"	v
g:neocomplcache_enable_insert_char_pre	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_insert_char_pre =$/;"	v
g:neocomplcache_enable_prefetch	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_prefetch =$/;"	v
g:neocomplcache_enable_smart_case	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_smart_case =$/;"	v
g:neocomplcache_enable_smart_case	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_enable_smart_case = 1$/;"	v
g:neocomplcache_enable_underbar_completion	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_underbar_completion =$/;"	v
g:neocomplcache_enable_wildcard	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_enable_wildcard =$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^		let g:neocomplcache_force_omni_patterns = {}$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_force_omni_patterns.c = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)'$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_force_omni_patterns.cpp = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\|\\h\\w*::'$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_force_omni_patterns.go = '\\h\\w*\\.\\?'$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_force_omni_patterns.h = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\|\\h\\w*::'$/;"	v
g:neocomplcache_force_omni_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_force_omni_patterns.php = '[^. \\t]->\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplcache_force_overwrite_completefunc	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_force_overwrite_completefunc =$/;"	v
g:neocomplcache_fuzzy_completion_start_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_fuzzy_completion_start_length =$/;"	v
g:neocomplcache_include_exprs	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_exprs = {}$/;"	v
g:neocomplcache_include_paths	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_paths	.vim/conf.d/plugins/neocomplcache.vim	/^		let g:neocomplcache_include_paths = {}$/;"	v
g:neocomplcache_include_paths	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_include_paths.cpp = join(filter($/;"	v
g:neocomplcache_include_patterns	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_patterns = {}$/;"	v
g:neocomplcache_include_suffixes	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^  let g:neocomplcache_include_suffixes = {}$/;"	v
g:neocomplcache_keyword_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^		let g:neocomplcache_keyword_patterns = {}$/;"	v
g:neocomplcache_keyword_patterns	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_keyword_patterns['default'] = '\\h\\w*'$/;"	v
g:neocomplcache_lock_buffer_name_pattern	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_buffer_name_pattern =$/;"	v
g:neocomplcache_lock_buffer_name_pattern	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_lock_buffer_name_pattern = '\\*ku\\*'$/;"	v
g:neocomplcache_lock_iminsert	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_lock_iminsert =$/;"	v
g:neocomplcache_manual_completion_start_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_manual_completion_start_length =$/;"	v
g:neocomplcache_max_keyword_width	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_keyword_width =$/;"	v
g:neocomplcache_max_list	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_list =$/;"	v
g:neocomplcache_max_menu_width	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_max_menu_width =$/;"	v
g:neocomplcache_min_keyword_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_min_keyword_length =$/;"	v
g:neocomplcache_min_syntax_length	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let g:neocomplcache_min_syntax_length = 4$/;"	v
g:neocomplcache_min_syntax_length	.vim/conf.d/plugins/neocomplcache.vim	/^	let g:neocomplcache_min_syntax_length = 3$/;"	v
g:neocomplcache_release_cache_time	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_release_cache_time =$/;"	v
g:neocomplcache_skip_auto_completion_time	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_skip_auto_completion_time =$/;"	v
g:neocomplcache_sources_list	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_sources_list =$/;"	v
g:neocomplcache_source_completion_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_completion_length	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_completion_length =$/;"	v
g:neocomplcache_source_rank	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  let g:neocomplcache_source_rank = g:neocomplcache_plugin_rank$/;"	v
g:neocomplcache_source_rank	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_source_rank =$/;"	v
g:neocomplcache_temporary_dir	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_temporary_dir =$/;"	v
g:neocomplcache_wildcard_characters	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let g:neocomplcache_wildcard_characters =$/;"	v
g:neocomplete#enable_at_startup	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#enable_at_startup = 1$/;"	v
g:neocomplete#enable_smart_case	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#keyword_patterns	.vim/conf.d/plugins/neocomplete.vim	/^		let g:neocomplete#keyword_patterns = {}$/;"	v
g:neocomplete#keyword_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#keyword_patterns['default'] = '\\h\\w*'$/;"	v
g:neocomplete#lock_buffer_name_pattern	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#lock_buffer_name_pattern = '\\*ku\\*'$/;"	v
g:neocomplete#sources#dictionary#dictionaries	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#dictionary#dictionaries = {$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^		let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns.c = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)'$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns.cpp = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\|\\h\\w*::'$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns.go = '\\h\\w*\\.\\?'$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns.h = '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\|\\h\\w*::'$/;"	v
g:neocomplete#sources#omni#input_patterns	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#omni#input_patterns.php = '[^. \\t]->\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplete#sources#syntax#min_keyword_length	.vim/conf.d/plugins/neocomplete.vim	/^	let g:neocomplete#sources#syntax#min_keyword_length = 3$/;"	v
g:neosnippet#snippets_directory	.vim/conf.d/plugins/neosnippet.vim	/^	let g:neosnippet#snippets_directory = s:my_snippet$/;"	v
g:path	.vim/bundle/neobundle.vim/test/toml.vim	/^let g:path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
g:path	.vim/bundle/neobundle.vim/test/tsort.vim	/^let g:path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
g:quickrun#default_config	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let g:quickrun#default_config = {$/;"	v
g:quickrun#V	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let g:quickrun#V = s:V$/;"	v
g:quickrun_config	.vim/conf.d/plugins/vim-quickrun.vim	/^	let g:quickrun_config = get(g:, 'quickrun_config', {})$/;"	v
g:quickrun_config	.vim/conf.d/plugins/vim-quickrun.vim	/^	let g:quickrun_config.cpp = {$/;"	v
g:quickrun_config	.vim/conf.d/plugins/vim-quickrun.vim	/^	let g:quickrun_config.make = {$/;"	v
g:quickrun_config	.vim/conf.d/plugins/vim-quickrun.vim	/^	let g:quickrun_config.makerun = {$/;"	v
g:quickrun_config	.vim/conf.d/plugins/vim-quickrun.vim	/^	let g:quickrun_config._ = {$/;"	v
g:rooter_autocmd_patterns	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  let g:rooter_autocmd_patterns = '*'$/;"	v
g:rooter_change_directory_for_non_project_files	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  let g:rooter_change_directory_for_non_project_files = 0$/;"	v
g:rooter_patterns	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  let g:rooter_patterns = ['.git', '.git\/', '_darcs\/', '.hg\/', '.bzr\/', '.svn\/']$/;"	v
g:rooter_patterns	.vim/conf.d/plugins/vim-rooter.vim	/^  let g:rooter_patterns = ['tags', '.git', '.git\/', '_darcs\/', '.hg\/', '.bzr\/', 'Makefile', 'GNUMakefile', 'GNUmakefile', '.svn\/']$/;"	v
g:rooter_silent_chdir	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  let g:rooter_silent_chdir = 0$/;"	v
g:rooter_use_lcd	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  let g:rooter_use_lcd = 0$/;"	v
g:rooter_use_lcd	.vim/conf.d/plugins/vim-rooter.vim	/^  let g:rooter_use_lcd = 1$/;"	v
g:source	.vim/bundle/unite.vim/test/source.vim	/^let g:source = {$/;"	v
g:submode	.vim/bundle/vim-submode/t/current.vim	/^let g:submode = ''$/;"	v
g:submode_always_show_submode	.vim/bundle/vim-submode/autoload/submode.vim	/^  let g:submode_always_show_submode = 0$/;"	v
g:submode_keep_leaving_key	.vim/bundle/vim-submode/autoload/submode.vim	/^  let g:submode_keep_leaving_key = 0$/;"	v
g:submode_keep_leaving_key	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    let g:submode_keep_leaving_key = 0$/;"	v
g:submode_keep_leaving_key	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    let g:submode_keep_leaving_key = 1$/;"	v
g:submode_keyseqs_to_leave	.vim/bundle/vim-submode/autoload/submode.vim	/^  let g:submode_keyseqs_to_leave = ['<Esc>']$/;"	v
g:submode_timeout	.vim/bundle/vim-submode/autoload/submode.vim	/^  let g:submode_timeout = &timeout$/;"	v
g:submode_timeoutlen	.vim/bundle/vim-submode/autoload/submode.vim	/^  let g:submode_timeoutlen = &timeoutlen$/;"	v
g:SyntasticAutoloclistNotifier	.vim/bundle/syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:syntastic_	.vim/bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	.vim/bundle/syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_always_populate_loc_list	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_always_populate_loc_list = 1$/;"	v
g:syntastic_apiblueprint_drafter_sort	.vim/bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler_options	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_asm_generic	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_generic = 0$/;"	v
g:syntastic_auto_loc_list	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_auto_loc_list = 1$/;"	v
g:syntastic_avrgcc_config_file	.vim/bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_check_on_open	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_check_on_open = 0	"ファイルオープン時にはチェックをしない$/;"	v
g:syntastic_check_on_wq	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_check_on_wq = 0		"保存して終了時にはチェックしない$/;"	v
g:syntastic_clang_check_config_file	.vim/bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	.vim/bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	.vim/bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cppcheck_config_file	.vim/bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_cpp_check_header	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_cpp_check_header = 1$/;"	v
g:syntastic_cpp_compiler	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_cpp_compiler = "g++"$/;"	v
g:syntastic_cpp_compiler_options	.vim/bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_cpp_compiler_options = "-std=c++11 -Wall -Wextra -Wno-unused-parameter -Winit-self -Wfloat-equal -wsign-compare" $/;"	v
g:syntastic_cpp_cpplint_thres	.vim/bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_css_prettycss_sort	.vim/bundle/syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_c_check_header	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_c_check_header = 1$/;"	v
g:syntastic_c_clang_check_sort	.vim/bundle/syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	.vim/bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	.vim/bundle/syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	.vim/bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_d_compiler_options	.vim/bundle/syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_enable_signs	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_enable_signs = 1$/;"	v
g:syntastic_erlc_include_path	.vim/bundle/syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_go_checkers	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_go_checkers = ['go', 'golint']$/;"	v
g:syntastic_haskell_scan_sort	.vim/bundle/syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_empty_tags	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_inline_tags	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	.vim/bundle/syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_javascript_eslint_generic	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	.vim/bundle/syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	.vim/bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	.vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	.vim/bundle/syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_java_checkstyle_classpath	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_less_options	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_loc_list_height	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_loc_list_height = 6$/;"	v
g:syntastic_markdown_mdl_sort	.vim/bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objcpp_compiler_options	.vim/bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objc_compiler_options	.vim/bundle/syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	.vim/bundle/syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	.vim/bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	.vim/bundle/syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	.vim/bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	.vim/bundle/syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	.vim/bundle/syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_exec	.vim/conf.d/plugins/syntastic.vim	/^	let g:syntastic_python_python_exec = '\/usr\/bin\/python3'$/;"	v
g:syntastic_python_python_use_codec	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	.vim/bundle/syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_racket_code_ayatollah_script	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_r_lintr_cache	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_cache = 'FALSE'$/;"	v
g:syntastic_r_lintr_linters	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^    let g:syntastic_r_lintr_linters = 'default_linters'$/;"	v
g:syntastic_r_lint_sort	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_svtools_styles	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_sass_check_partials	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	.vim/bundle/syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	.vim/bundle/syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	.vim/bundle/syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_text_atdtool_sort	.vim/bundle/syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_tex_chktex_showmsgs	.vim/bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	.vim/bundle/syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	.vim/bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	.vim/bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verapp_config_file	.vim/bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^    let g:syntastic_verapp_config_file = '.syntastic_verapp_config'$/;"	v
g:syntastic_verilog_compiler_options	.vim/bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	.vim/bundle/syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	.vim/bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	.vim/bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_width	.vim/conf.d/plugins/tagbar.vim	/^  let g:tagbar_width = 20$/;"	v
g:tagbar_width	.vim/conf.d/plugins/tagbar.vim	/^  let g:tagbar_width = 30$/;"	v
g:unite#filters#converter_quickfix_highlight#enable_bold_for_message	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^let g:unite#filters#converter_quickfix_highlight#enable_bold_for_message = get(g:, "unite#filters#converter_quickfix_highlight#enable_bold_for_message", 1)$/;"	v
g:unite_enable_auto_select	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_enable_auto_select =$/;"	v
g:unite_force_overwrite_statusline	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_force_overwrite_statusline =$/;"	v
g:unite_ignore_source_files	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_ignore_source_files =$/;"	v
g:unite_kind_file_preview_max_filesize	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^  let g:unite_kind_file_preview_max_filesize = 1000000$/;"	v
g:unite_kind_jump_list_after_jump_scroll	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll = 25$/;"	v
g:unite_kind_jump_list_after_jump_scroll	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let g:unite_kind_jump_list_after_jump_scroll =$/;"	v
g:unite_quickfix_filename_is_pathshorten	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^let g:unite_quickfix_filename_is_pathshorten =$/;"	v
g:unite_quickfix_is_multiline	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^let g:unite_quickfix_is_multiline =$/;"	v
g:unite_quick_match_table	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_quick_match_table =$/;"	v
g:unite_redraw_hold_candidates	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let g:unite_redraw_hold_candidates =$/;"	v
g:unite_source_output_shellcmd_colors	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^let g:unite_source_output_shellcmd_colors =$/;"	v
g:used_javascript_libs	.vim/conf.d/neobundle/html.neobundle.vim	/^let g:used_javascript_libs = 'jquery'$/;"	v
g:user_emmet_leader_key	.vim/bundle/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:user_emmet_settings	.vim/conf.d/plugins/emmet-vim.vim	/^	let g:user_emmet_settings = {$/;"	v
g:use_emmet_complete_tag	.vim/conf.d/plugins/emmet-vim.vim	/^	let g:use_emmet_complete_tag = 1$/;"	v
g:vimfiler_as_default_explorer	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^let g:vimfiler_as_default_explorer =$/;"	v
g:vimfiler_as_default_explorer	.vim/conf.d/plugins/vimfiler.vim	/^let g:vimfiler_as_default_explorer = 1$/;"	v
g:vimfiler_define_wrapper_commands	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^let g:vimfiler_define_wrapper_commands =$/;"	v
g:vimfiler_detect_drives	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_drive.vim	/^let g:vimfiler_detect_drives =$/;"	v
g:vimfiler_directory_display_top	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_directory_display_top =$/;"	v
g:vimfiler_directory_display_top	.vim/conf.d/plugins/vimfiler.vim	/^let g:vimfiler_directory_display_top = 1$/;"	v
g:vimfiler_enable_auto_cd	.vim/conf.d/plugins/vimfiler.vim	/^let g:vimfiler_enable_auto_cd = 1$/;"	v
g:vimfiler_execute_file_list	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_execute_file_list =$/;"	v
g:vimfiler_expand_jump_to_first_child	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_expand_jump_to_first_child =$/;"	v
g:vimfiler_extensions	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_extensions =$/;"	v
g:vimfiler_file_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_file_icon =$/;"	v
g:vimfiler_force_overwrite_statusline	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_force_overwrite_statusline =$/;"	v
g:vimfiler_ignore_filters	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_ignore_filters =$/;"	v
g:vimfiler_ignore_pattern	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_ignore_pattern =$/;"	v
g:vimfiler_marked_file_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_marked_file_icon =$/;"	v
g:vimfiler_max_directories_history	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_max_directories_history =$/;"	v
g:vimfiler_min_cache_files	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^let g:vimfiler_min_cache_files =$/;"	v
g:vimfiler_quick_look_command	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_quick_look_command =$/;"	v
g:vimfiler_readonly_file_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_readonly_file_icon =$/;"	v
g:vimfiler_restore_alternate_file	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_restore_alternate_file =$/;"	v
g:vimfiler_safe_mode_by_default	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_safe_mode_by_default =$/;"	v
g:vimfiler_safe_mode_by_default	.vim/conf.d/plugins/vimfiler.vim	/^let g:vimfiler_safe_mode_by_default = 1$/;"	v
g:vimfiler_time_format	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_time_format =$/;"	v
g:vimfiler_tree_closed_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_closed_icon =$/;"	v
g:vimfiler_tree_indentation	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_indentation =$/;"	v
g:vimfiler_tree_leaf_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_leaf_icon =$/;"	v
g:vimfiler_tree_opened_icon	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let g:vimfiler_tree_opened_icon =$/;"	v
g:vimproc#dll_path	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc#dll_path =$/;"	v
g:vimproc#lexer#token_type	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^let g:vimproc#lexer#token_type = {$/;"	v
g:vimproc_password_pattern	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let g:vimproc_password_pattern = g:vimproc#password_pattern$/;"	v
g:vimtex_data	.vim/bundle/vimtex/autoload/vimtex.vim	/^    let g:vimtex_data[b:vimtex_id] = b:vimtex$/;"	v
g:vimtex_latexmk_background	.vim/conf.d/plugins/vimtex.vim	/^let g:vimtex_latexmk_background = 1$/;"	v
g:vimtex_latexmk_continuous	.vim/conf.d/plugins/vimtex.vim	/^let g:vimtex_latexmk_continuous = 1$/;"	v
g:vimtex_latexmk_options	.vim/conf.d/plugins/vimtex.vim	/^let g:vimtex_latexmk_options = '-pdfdvi'$/;"	v
g:xmldata_aria	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	.vim/bundle/syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	.vim/bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	.vim/bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	.vim/bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	.vim/bundle/syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	.vim/bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	.vim/bundle/syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	.vim/bundle/syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.7.0-62'$/;"	v
garbage_collect	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:garbage_collect(is_force) "{{{$/;"	f
gather_candidates	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_labels	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! s:gather_labels(file) " {{{1$/;"	f
gd	.vim/bundle/vim-go/ftplugin/go.vim	/^   nnoremap <buffer> <silent> gd :GoDef<cr>$/;"	m
general.init	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:general.init() dict " {{{2$/;"	f
general.latexmk_append_argument	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:general.latexmk_append_argument() dict " {{{2$/;"	f
general.view	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:general.view(file) dict " {{{2$/;"	f
get	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:get(url, ...)$/;"	f
GetBuffer	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! GetBuffer()$/;"	f
getchar	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:getchar(...)$/;"	f
getchar	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar_safe	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getchar_safe	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:getchar_safe(...)$/;"	f
getchar_safe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getchar_safe	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
GetDialect	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
getfilename	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:getfilename(cache_dir, filename)$/;"	f
getfilename	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getfilename	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
getfilename	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
GetFileWinnr	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
getg	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:getg(name, default)$/;"	f
GetJavascriptIndent	.vim/bundle/vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMakeprg	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMavenClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetMSL	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetNearbyTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetOcamlBuildMakeprg	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
getOffset	.vim/bundle/vim-go/autoload/go/def.vim	/^function! s:getOffset()$/;"	f
GetOtherMakeprg	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
getpos	.vim/bundle/vim-go/autoload/go/oracle.vim	/^func! s:getpos(l, c)$/;"	f
getpos	.vim/bundle/vim-go/autoload/go/rename.vim	/^func! s:getpos(l, c)$/;"	f
GetProfile	.vim/bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetShell	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetSupportedFiletypes	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetTagInfo	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
gettime	.vim/bundle/tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
GetValaModules	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetVarIndent	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:GetVarIndent(lnum)$/;"	f
get_abbr_length	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:get_abbr_length(parent, child) "{{{$/;"	f
get_actions	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:get_actions(candidates, sources) "{{{$/;"	f
get_action_current_dir	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:get_action_current_dir(files) "{{{$/;"	f
get_action_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_action_table(source_name, kind_name, self_func, is_parents_action, source_table) "{{{$/;"	f
get_alias_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_alias_table(source_name, kind_name, source_table) "{{{$/;"	f
get_augrouplist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_augrouplist() "{{{$/;"	f
get_bracket	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:get_bracket(char)$/;"	f
get_browser_command	.vim/bundle/vim-go/autoload/go/play.vim	/^function! s:get_browser_command()$/;"	f
get_browser_command	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! s:get_browser_command()$/;"	f
get_buffer_direction	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:get_buffer_direction(context) "{{{$/;"	f
get_buffer_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_buffer_include_files(bufnumber) "{{{$/;"	f
get_buffer_list	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:get_buffer_list(is_bang, is_question, is_plus, is_minus, is_terminal) "{{{$/;"	f
get_bufnr	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_bufnr(candidate) "{{{$/;"	f
get_cache	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:get_cache(context)$/;"	f
get_cached_script_candidates	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cached_script_candidates() "{{{$/;"	f
get_candidates	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_candidates	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_candidates(sources, context) "{{{$/;"	f
get_candidates_action_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_candidates_action_table(action_name, candidates, sources) "{{{$/;"	f
get_candidate_text	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:get_candidate_text(candidate) "{{{$/;"	f
get_cmdlist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_cmdlist() "{{{$/;"	f
get_commit_date	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:get_commit_date(bundle) "{{{$/;"	f
get_commit_status	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:get_commit_status(bundle) "{{{$/;"	f
get_complete_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_completion	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:get_completion(context)$/;"	f
get_context_lines	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_context_lines(context, direction, start) "{{{$/;"	f
get_current_cache	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:get_current_cache()$/;"	f
get_datemark	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^function! s:get_datemark(file) "{{{$/;"	f
get_default_action	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! s:get_default_action(source_name, kind_name) "{{{$/;"	f
get_default_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_default_include_files(filetype) "{{{$/;"	f
get_envlist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_envlist() "{{{$/;"	f
get_filename	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:get_filename(candidate) "{{{$/;"	f
get_files	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_files(context, files, level, max_unit, ignore_dir) "{{{$/;"	f
get_filetime	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:get_filetime(filename) "{{{$/;"	f
get_functionlist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_functionlist() "{{{$/;"	f
get_github_searches	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:get_github_searches(string) "{{{$/;"	f
get_glob_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_hit_enter_max_length	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hit_enter_max_length	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hit_enter_max_length	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hook_priority	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:get_hook_priority(hook, point) abort$/;"	f
get_id	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:get_id(main) " {{{1$/;"	f
get_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:get_include_files(complete_str) "{{{$/;"	f
get_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:get_include_files(nestlevel, lines, filetype, pattern, path, expr) "{{{$/;"	f
get_input	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:get_input() "{{{$/;"	f
get_keyword	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:get_keyword(line)$/;"	f
get_keyword_pos	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:get_keyword_pos(cur_text) "{{{$/;"	f
get_last_selected	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_selected	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_status	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:get_last_status()$/;"	f
get_last_status	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^function! s:get_last_status()$/;"	f
get_last_status	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_last_status	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_lazy_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:get_lazy_bundles() "{{{$/;"	f
get_lines	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:get_lines(context, direction, bufnr, start, max) "{{{$/;"	f
get_list	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_list() "{{{$/;"	f
get_list	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_list() "{{{$/;"	f
get_list	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_list() "{{{$/;"	f
get_list	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:get_list() "{{{$/;"	f
get_local_variables	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_local_variables() "{{{$/;"	f
get_lua_file_size	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^function! s:get_lua_file_size(filename) "{{{$/;"	f
get_main	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:get_main() " {{{1$/;"	f
get_main_ext	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:get_main_ext(self, ext) " {{{1$/;"	f
get_main_latexmain	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:get_main_latexmain(file) " {{{1$/;"	f
get_main_recurse	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:get_main_recurse(file) " {{{1$/;"	f
get_mappinglist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_mappinglist() "{{{$/;"	f
get_map_str	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_member_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_pattern	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_message	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_message() "{{{$/;"	f
get_message	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:get_message() "{{{$/;"	f
get_migemo_pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:get_migemo_pattern(input)$/;"	f
get_neobundle_args	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:get_neobundle_args(candidate)$/;"	f
get_omni_funcs	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_paths	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:get_paths(args, context) "{{{$/;"	f
get_plugin_names	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:get_plugin_names() "{{{$/;"	f
get_prelude	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prelude	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_prelude	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_process	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_process() "{{{$/;"	f
get_process	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_process() "{{{$/;"	f
get_process	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:get_process() "{{{$/;"	f
get_quick_match_table	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:get_quick_match_table() "{{{$/;"	f
get_region	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:get_region(region) abort$/;"	f
get_repository_plugins	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! s:get_repository_plugins(context) "{{{$/;"	f
get_resume_buffer	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_resume_buffer(buffer_name) "{{{$/;"	f
get_root	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_rtp_after	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:get_rtp_after(bundle) abort "{{{$/;"	f
get_score	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^def get_score(string, query_chars):$/;"	f
get_script_candidates	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_script_candidates(bufnumber) "{{{$/;"	f
get_selected_text	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_selected_text	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_skipped_message	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:get_skipped_message(number, max, bundle, prefix, message) "{{{$/;"	f
get_snippets_files	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_snippets_files(path, filetype) abort "{{{$/;"	f
get_snippet_candidates	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:get_snippet_candidates(dirs) "{{{$/;"	f
get_snippet_files	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:get_snippet_files(path, filetype) abort "{{{$/;"	f
get_sources_filetypes	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:get_sources_filetypes(filetype) "{{{$/;"	f
get_sources_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_source_candidates	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:get_source_candidates(source) "{{{$/;"	f
get_string	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! s:get_string() "{{{$/;"	f
get_string	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_string() "{{{$/;"	f
get_string	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! s:get_string() "{{{$/;"	f
get_syntax_link_chain	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! s:get_syntax_link_chain()$/;"	f
get_system	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! s:get_system() "{{{$/;"	f
get_unite_buffer	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! s:get_unite_buffer(buffer_name) "{{{$/;"	f
get_variablelist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variablelist(dict, prefix) "{{{$/;"	f
get_variable_type	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:get_variable_type(expression) "{{{$/;"	f
get_visual_content	.vim/bundle/vim-go/autoload/go/play.vim	/^function! s:get_visual_content()$/;"	f
get_visual_selection	.vim/bundle/vim-go/autoload/go/play.vim	/^function! s:get_visual_selection()$/;"	f
get_windows	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:get_windows(no_current, tabnr) abort "{{{$/;"	f
get_winwidth	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:get_winwidth()$/;"	f
get_words	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:get_words(filename) abort "{{{$/;"	f
get_words	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! s:get_words(filename) abort "{{{$/;"	f
ggj	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    normal ggj$/;"	m
ggjj	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    normal ggjj$/;"	m
ggjjj	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    normal ggjjj$/;"	m
ggjjjx	.vim/bundle/vim-submode/t/keep-leaving-key.vim	/^    normal ggjjjx$/;"	m
ggVGgq	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        normal ggVGgq$/;"	m
ggVGx	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        normal ggVGx$/;"	m
GIT_SOURCES	.vim/bundle/html5.vim/Makefile	/^GIT_SOURCES=$/;"	m
GIT_SOURCES	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^GIT_SOURCES=$/;"	m
glob	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^  function! s:glob(expr)$/;"	f
glob	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^  function! s:glob(expr)$/;"	f
glob	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob2_pattern	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! s:glob2_pattern(glob, is_lua) abort "{{{$/;"	f
global_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
globpath	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
globpath	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:globpath(path, expr)$/;"	f
globpath	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
globpath	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
go#cmd#autowrite	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#autowrite()$/;"	f
go#cmd#Build	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Build(bang, ...)$/;"	f
go#cmd#Coverage	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Coverage(bang, ...)$/;"	f
go#cmd#Generate	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Generate(bang, ...)$/;"	f
go#cmd#Install	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Install(bang, ...)$/;"	f
go#cmd#Run	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Run(bang, ...)$/;"	f
go#cmd#RunTerm	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#RunTerm(mode)$/;"	f
go#cmd#Test	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#Test(bang, compile, ...)$/;"	f
go#cmd#TestFunc	.vim/bundle/vim-go/autoload/go/cmd.vim	/^function! go#cmd#TestFunc(bang, ...)$/;"	f
go#complete#Complete	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! go#complete#Complete(findstart, base)$/;"	f
go#complete#GetInfo	.vim/bundle/vim-go/autoload/go/complete.vim	/^function! go#complete#GetInfo()$/;"	f
go#complete#Info	.vim/bundle/vim-go/autoload/go/complete.vim	/^function! go#complete#Info()$/;"	f
go#def#Jump	.vim/bundle/vim-go/autoload/go/def.vim	/^function! go#def#Jump(...)$/;"	f
go#def#JumpMode	.vim/bundle/vim-go/autoload/go/def.vim	/^function! go#def#JumpMode(mode)$/;"	f
go#doc#Open	.vim/bundle/vim-go/autoload/go/doc.vim	/^function! go#doc#Open(newmode, mode, ...)$/;"	f
go#doc#OpenBrowser	.vim/bundle/vim-go/autoload/go/doc.vim	/^function! go#doc#OpenBrowser(...)$/;"	f
go#fmt#Format	.vim/bundle/vim-go/autoload/go/fmt.vim	/^function! go#fmt#Format(withGoimport)$/;"	f
go#import#SwitchImport	.vim/bundle/vim-go/autoload/go/import.vim	/^function! go#import#SwitchImport(enabled, localname, path, bang)$/;"	f
go#jobcontrol#Spawn	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Spawn(desc, args)$/;"	f
go#jobcontrol#Statusline	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! go#jobcontrol#Statusline() abort$/;"	f
go#lint#Errcheck	.vim/bundle/vim-go/autoload/go/lint.vim	/^function! go#lint#Errcheck(...) abort$/;"	f
go#lint#Golint	.vim/bundle/vim-go/autoload/go/lint.vim	/^function! go#lint#Golint(...) abort$/;"	f
go#lint#Gometa	.vim/bundle/vim-go/autoload/go/lint.vim	/^function! go#lint#Gometa(autosave, ...) abort$/;"	f
go#lint#Vet	.vim/bundle/vim-go/autoload/go/lint.vim	/^function! go#lint#Vet(bang, ...)$/;"	f
go#list#Clean	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#Clean()$/;"	f
go#list#Get	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#Get()$/;"	f
go#list#JumpToFirst	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#JumpToFirst()$/;"	f
go#list#Parse	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#Parse(items)$/;"	f
go#list#ParseFormat	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#ParseFormat(errformat, items)$/;"	f
go#list#Populate	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#Populate(items)$/;"	f
go#list#PopulateWin	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#PopulateWin(winnr, items)$/;"	f
go#list#Window	.vim/bundle/vim-go/autoload/go/list.vim	/^function! go#list#Window(...)$/;"	f
go#oracle#Callees	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callees(selected)$/;"	f
go#oracle#Callers	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callers(selected)$/;"	f
go#oracle#Callstack	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Callstack(selected)$/;"	f
go#oracle#ChannelPeers	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#ChannelPeers(selected)$/;"	f
go#oracle#Describe	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Describe(selected)$/;"	f
go#oracle#Freevars	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Freevars(selected)$/;"	f
go#oracle#Implements	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Implements(selected)$/;"	f
go#oracle#Referrers	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Referrers(selected)$/;"	f
go#oracle#Scope	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Scope(...)$/;"	f
go#oracle#Tags	.vim/bundle/vim-go/autoload/go/oracle.vim	/^function! go#oracle#Tags(...)$/;"	f
go#package#Complete	.vim/bundle/vim-go/autoload/go/package.vim	/^function! go#package#Complete(ArgLead, CmdLine, CursorPos)$/;"	f
go#package#CompleteMembers	.vim/bundle/vim-go/autoload/go/package.vim	/^function! go#package#CompleteMembers(package, member)$/;"	f
go#package#FromPath	.vim/bundle/vim-go/autoload/go/package.vim	/^function! go#package#FromPath(arg)$/;"	f
go#package#ImportPath	.vim/bundle/vim-go/autoload/go/package.vim	/^function! go#package#ImportPath(arg)$/;"	f
go#package#Paths	.vim/bundle/vim-go/autoload/go/package.vim	/^function! go#package#Paths()$/;"	f
go#path#BinPath	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#BinPath()$/;"	f
go#path#CheckBinPath	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#CheckBinPath(binpath)$/;"	f
go#path#Default	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#Default()$/;"	f
go#path#Detect	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#Detect()$/;"	f
go#path#GoPath	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#GoPath(...)$/;"	f
go#path#HasPath	.vim/bundle/vim-go/autoload/go/path.vim	/^function! go#path#HasPath(path)$/;"	f
go#play#Share	.vim/bundle/vim-go/autoload/go/play.vim	/^function! go#play#Share(count, line1, line2)$/;"	f
go#rename#Rename	.vim/bundle/vim-go/autoload/go/rename.vim	/^function! go#rename#Rename(bang, ...)$/;"	f
go#term#new	.vim/bundle/vim-go/autoload/go/term.vim	/^function! go#term#new(cmd)$/;"	f
go#term#newmode	.vim/bundle/vim-go/autoload/go/term.vim	/^function! go#term#newmode(cmd, mode)$/;"	f
go#textobj#Function	.vim/bundle/vim-go/autoload/go/textobj.vim	/^function! go#textobj#Function(mode)$/;"	f
go#tool#Deps	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Deps()$/;"	f
go#tool#ExecuteInDir	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#ExecuteInDir(cmd) abort$/;"	f
go#tool#Exists	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Exists(importpath)$/;"	f
go#tool#Files	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Files()$/;"	f
go#tool#FilterValids	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#FilterValids(items)$/;"	f
go#tool#Imports	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#Imports()$/;"	f
go#tool#OpenBrowser	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#OpenBrowser(url)$/;"	f
go#tool#ParseErrors	.vim/bundle/vim-go/autoload/go/tool.vim	/^function! go#tool#ParseErrors(lines)$/;"	f
go#ui#CloseWindow	.vim/bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#CloseWindow()$/;"	f
go#ui#OpenDefinition	.vim/bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenDefinition(filter)$/;"	f
go#ui#OpenWindow	.vim/bundle/vim-go/autoload/go/ui.vim	/^function! go#ui#OpenWindow(title, content)$/;"	f
go#util#EchoError	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#EchoError(msg)$/;"	f
go#util#EchoProgress	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#EchoProgress(msg)$/;"	f
go#util#EchoSuccess	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#EchoSuccess(msg)$/;"	f
go#util#EchoWarning	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#EchoWarning(msg)$/;"	f
go#util#IsWin	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#IsWin()$/;"	f
go#util#LineEnding	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#LineEnding()$/;"	f
go#util#PathListSep	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#PathListSep()$/;"	f
go#util#PathSep	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#PathSep()$/;"	f
go#util#Shelljoin	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#Shelljoin(arglist, ...)$/;"	f
go#util#Shelllist	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#Shelllist(arglist, ...)$/;"	f
go#util#StripPathSep	.vim/bundle/vim-go/autoload/go/util.vim	/^function! go#util#StripPathSep(path)$/;"	f
go#vimproc#has_vimproc	.vim/bundle/vim-go/autoload/go/vimproc.vim	/^function! go#vimproc#has_vimproc()$/;"	f
GoBuild	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoBuild call go#cmd#Build(<bang>0,<f-args>)$/;"	c
GoCallees	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallees call go#oracle#Callees(<count>)$/;"	c
GoCallers	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallers call go#oracle#Callers(<count>)$/;"	c
GoCallstack	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoCallstack call go#oracle#Callstack(<count>)$/;"	c
GoChannelPeers	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoChannelPeers call go#oracle#ChannelPeers(<count>)$/;"	c
gocodeAutocomplete	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeAutocomplete()$/;"	f
gocodeCommand	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCommand(cmd, preargs, args)$/;"	f
gocodeCurrentBuffer	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBuffer()$/;"	f
gocodeCurrentBufferOpt	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCurrentBufferOpt(filename)$/;"	f
gocodeCursor	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeCursor()$/;"	f
gocodeShellescape	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:gocodeShellescape(arg)$/;"	f
GoCoverage	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoCoverage call go#cmd#Coverage(<bang>0, <f-args>)$/;"	c
GoDef	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range GoDef :call go#def#Jump(<f-args>)$/;"	c
godefJump	.vim/bundle/vim-go/autoload/go/def.vim	/^function! s:godefJump(out, mode)$/;"	f
GoDeps	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoDeps echo go#tool#Deps()$/;"	c
GoDescribe	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoDescribe call go#oracle#Describe(<count>)$/;"	c
GoDoc	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDoc call go#doc#Open('new', 'split', <f-args>)$/;"	c
GoDocBrowser	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -range -complete=customlist,go#package#Complete GoDocBrowser call go#doc#OpenBrowser(<f-args>)$/;"	c
godocNotFound	.vim/bundle/vim-go/autoload/go/doc.vim	/^function! s:godocNotFound(content)$/;"	f
GodocView	.vim/bundle/vim-go/autoload/go/doc.vim	/^function! s:GodocView(newposition, position, content)$/;"	f
godocWord	.vim/bundle/vim-go/autoload/go/doc.vim	/^function! s:godocWord(args)$/;"	f
GoDrop	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? -complete=customlist,go#package#Complete GoDrop call go#import#SwitchImport(0, '', <f-args>, '')$/;"	c
GoErrCheck	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoErrCheck call go#lint#Errcheck(<f-args>)$/;"	c
GoFiles	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFiles echo go#tool#Files()$/;"	c
gofiletype_post	.vim/bundle/.neobundle/ftdetect/ftdetect.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_post	.vim/bundle/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	.vim/bundle/.neobundle/ftdetect/ftdetect.vim	/^function! s:gofiletype_pre()$/;"	f
gofiletype_pre	.vim/bundle/vim-go/ftdetect/gofiletype.vim	/^function! s:gofiletype_pre()$/;"	f
GoFmt	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoFmt call go#fmt#Format(-1)$/;"	c
GoFreevars	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoFreevars call go#oracle#Freevars(<count>)$/;"	c
GoGenerate	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoGenerate call go#cmd#Generate(<bang>0,<f-args>)$/;"	c
GoImplements	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoImplements call go#oracle#Implements(<count>)$/;"	c
GoImport	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=1 -bang -complete=customlist,go#package#Complete GoImport call go#import#SwitchImport(1, '', <f-args>, '<bang>')$/;"	c
GoImportAs	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang -complete=customlist,go#package#Complete GoImportAs call go#import#SwitchImport(1, <f-args>, '<bang>')$/;"	c
GoImports	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 GoImports call go#fmt#Format(1)$/;"	c
GoIndent	.vim/bundle/vim-go/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GoInfo	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoInfo call go#complete#Info()$/;"	c
GoInstall	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoInstall call go#cmd#Install(<bang>0, <f-args>)$/;"	c
GoInstallBinaries	.vim/bundle/vim-go/plugin/go.vim	/^command! GoInstallBinaries call s:GoInstallBinaries(-1)$/;"	c
GoInstallBinaries	.vim/bundle/vim-go/plugin/go.vim	/^function! s:GoInstallBinaries(updateBinaries)$/;"	f
GoLint	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoLint call go#lint#Golint(<f-args>)$/;"	c
GoMetaLinter	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* GoMetaLinter call go#lint#Gometa(0, <f-args>)$/;"	c
GoNeosnippet	.vim/bundle/vim-go/ftplugin/go/snippets.vim	/^function! s:GoNeosnippet()$/;"	f
GoOracleScope	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -complete=customlist,go#package#Complete GoOracleScope call go#oracle#Scope(<f-args>)$/;"	c
GoOracleTags	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoOracleTags call go#oracle#Tags(<f-args>)$/;"	c
GoPath	.vim/bundle/vim-go/plugin/go.vim	/^command! -nargs=? -complete=dir GoPath call go#path#GoPath(<f-args>)$/;"	c
GoPlay	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=0 -range=% GoPlay call go#play#Share(<count>, <line1>, <line2>)$/;"	c
GoReferrers	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -range=% GoReferrers call go#oracle#Referrers(<count>)$/;"	c
GoRename	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=? GoRename call go#rename#Rename(<bang>0,<f-args>)$/;"	c
GoRun	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoRun call go#cmd#Run(<bang>0,<f-args>)$/;"	c
GoTest	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTest call go#cmd#Test(<bang>0, 0, <f-args>)$/;"	c
GoTestCompile	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestCompile call go#cmd#Test(<bang>0, 1, <f-args>)$/;"	c
GoTestFunc	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoTestFunc call go#cmd#TestFunc(<bang>0, <f-args>)$/;"	c
GotoFileWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
goto_markedwin	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
GoUltiSnips	.vim/bundle/vim-go/ftplugin/go/snippets.vim	/^function! s:GoUltiSnips()$/;"	f
GoUpdateBinaries	.vim/bundle/vim-go/plugin/go.vim	/^command! GoUpdateBinaries call s:GoInstallBinaries(1)$/;"	c
GoVet	.vim/bundle/vim-go/ftplugin/go/commands.vim	/^command! -nargs=* -bang GoVet call go#lint#Vet(<bang>0, <f-args>)$/;"	c
Grep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Grep$/;"	c
grep	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:grep() "{{{$/;"	f
GrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file GrepAdd$/;"	c
GrepArgs	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* GrepArgs$/;"	c
GrepArgsAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* GrepArgsAdd$/;"	c
GrepBuffer	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* GrepBuffer$/;"	c
GrepBufferAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* GrepBufferAdd$/;"	c
Grep_Cygwin_Find	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Cygwin_Find = 0$/;"	v
Grep_Default_Filelist	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Default_Filelist = '*'$/;"	v
Grep_Default_Options	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Default_Options = ''$/;"	v
Grep_Find_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Find_Path = 'find'$/;"	v
Grep_Find_Use_Xargs	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Find_Use_Xargs = 1$/;"	v
Grep_Null_Device	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Null_Device = 'NUL'$/;"	v
Grep_Null_Device	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Null_Device = '\/dev\/null'$/;"	v
Grep_OpenQuickfixWindow	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_OpenQuickfixWindow = 1$/;"	v
Grep_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Path = 'grep'$/;"	v
Grep_Shell_Escape_Char	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Shell_Escape_Char = ''$/;"	v
Grep_Shell_Escape_Char	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Shell_Escape_Char = '\\'$/;"	v
Grep_Shell_Quote_Char	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Shell_Quote_Char = "'"$/;"	v
Grep_Shell_Quote_Char	.vim/bundle/grep.vim/plugin/grep.vim	/^        let Grep_Shell_Quote_Char = ''$/;"	v
Grep_Skip_Dirs	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Skip_Dirs = 'RCS CVS SCCS'$/;"	v
Grep_Skip_Files	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Skip_Files = '*~ *,v s.*'$/;"	v
Grep_Xargs_Options	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Xargs_Options = '-0'$/;"	v
Grep_Xargs_Path	.vim/bundle/grep.vim/plugin/grep.vim	/^    let Grep_Xargs_Path = 'xargs'$/;"	v
group_by	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
h1	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4 | h1,$/;"	s
has	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:has(list, value)$/;"	f
has	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:has(list, value)$/;"	f
has	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
hash	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:hash(str) abort$/;"	f
has_cache	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:has_cache(context)$/;"	f
has_common_items	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_common_items	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:has_common_items(list1, list2)$/;"	f
has_common_items	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_doc	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:has_doc(path) "{{{$/;"	f
has_flag_p	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:has_flag_p(s, c)  "{{{2$/;"	f
has_index	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_index	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:has_index(list, index)$/;"	f
has_index	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_preview_window	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:has_preview_window() "{{{$/;"	f
has_vimproc	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^function! s:has_vimproc()$/;"	f
has_vimproc	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_vimproc	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hd2list	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2list(hd)$/;"	f
hd2str	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str(hd)$/;"	f
hd2str_lua	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:hd2str_lua(hd)$/;"	f
header	.vim/bundle/vim-css3-syntax/test/test.css	/^header,$/;"	s
head_filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! s:head_filter(list, complete_str) "{{{$/;"	f
help	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:help() "{{{$/;"	f
HH	.vim/conf.d/keymapping/misc.keymapping.vim	/^inoremap HH <Esc>$/;"	m
HighlightTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
highlight_matching_pair	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! s:highlight_matching_pair(...) " {{{1$/;"	f
HiLink	.vim/bundle/cpp-vim/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/cpp-vim/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	.vim/bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	.vim/bundle/vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
histget	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! s:histget(type) abort "{{{$/;"	f
history_complete	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:history_complete(arglead, cmdline, cursorpos)$/;"	f
HOME	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^if "%HOME%"=="" set HOME=%USERPROFILE%$/;"	v
HOME	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^if "%HOME%"=="" set HOME=%USERPROFILE%$/;"	v
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_buffer.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_tabpage.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_window.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_unite_quickfix.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_command.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_config.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/redraw_unite_quickfix.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.hook_apply	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^function! s:hook.hook_apply(context)$/;"	f
hook.init	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_buffer.vim	/^function! s:hook.init(...)$/;"	f
hook.init	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_tabpage.vim	/^function! s:hook.init(...)$/;"	f
hook.init	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_window.vim	/^function! s:hook.init(...)$/;"	f
hook.init	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^function! s:hook.init(...)$/;"	f
hook.init	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^function! s:hook.init(...)$/;"	f
hook.init	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^function! s:hook.init(session) abort$/;"	f
hook.init	.vim/bundle/vim-quickrun/autoload/quickrun/hook/eval.vim	/^function! s:hook.init(session) abort$/;"	f
hook.init	.vim/bundle/vim-quickrun/autoload/quickrun/hook/output_encode.vim	/^function! s:hook.init(session) abort$/;"	f
hook.init	.vim/bundle/vim-quickrun/autoload/quickrun/hook/sweep.vim	/^function! s:hook.init(session) abort$/;"	f
hook.init	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^function! s:hook.init(session) abort$/;"	f
hook.on_exit	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! s:hook.on_exit(...)$/;"	f
hook.on_failure	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! s:hook.on_failure(...)$/;"	f
hook.on_failure	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_quickfix.vim	/^function! s:hook.on_failure(...)$/;"	f
hook.on_failure	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^function! s:hook.on_failure(...)$/;"	f
hook.on_failure	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^function! s:hook.on_failure(...)$/;"	f
hook.on_finish	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^function! s:hook.on_finish(session, context) abort$/;"	f
hook.on_hook_loaded	.vim/bundle/shabadou.vim/autoload/quickrun/hook/extend_config.vim	/^function! s:hook.on_hook_loaded(session, context)$/;"	f
hook.on_module_loaded	.vim/bundle/vim-quickrun/autoload/quickrun/hook/eval.vim	/^function! s:hook.on_module_loaded(session, context) abort$/;"	f
hook.on_module_loaded	.vim/bundle/vim-quickrun/autoload/quickrun/hook/shebang.vim	/^function! s:hook.on_module_loaded(session, context) abort$/;"	f
hook.on_normalized	.vim/bundle/shabadou.vim/autoload/quickrun/hook/vim_vimlint.vim	/^function! s:hook.on_normalized(session, ...)$/;"	f
hook.on_output	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! s:hook.on_output(session, context)$/;"	f
hook.on_output	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^function! s:hook.on_output(session, context)$/;"	f
hook.on_output	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^function! s:hook.on_output(session, context)$/;"	f
hook.on_output	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^	function! hook.on_output(session, context)$/;"	f
hook.on_output	.vim/bundle/vim-quickrun/autoload/quickrun/hook/output_encode.vim	/^function! s:hook.on_output(session, context) abort$/;"	f
hook.on_ready	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^function! s:hook.on_ready(session, context) abort$/;"	f
hook.on_ready	.vim/bundle/vim-quickrun/autoload/quickrun/hook/sweep.vim	/^function! s:hook.on_ready(session, context) abort$/;"	f
hook.on_ready	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^function! s:hook.on_ready(session, context) abort$/;"	f
hook.on_success	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! s:hook.on_success(...)$/;"	f
hook.on_success	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_quickfix.vim	/^function! s:hook.on_success(...)$/;"	f
hook.on_success	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^function! s:hook.on_success(...)$/;"	f
hook.on_success	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^function! s:hook.on_success(...)$/;"	f
hook.priority	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^	function! hook.priority(point)$/;"	f
hook.sweep	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^	function! hook.sweep(...)$/;"	f
hook.sweep	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^function! s:hook.sweep() abort$/;"	f
hover	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	s
htmlcomplete#CheckDoctype	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	.vim/bundle/html5.vim/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
HtmlIndentClose	.vim/bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentClose(lnum, pattern)$/;"	f
HtmlIndentCloseAlt	.vim/bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentGet	.vim/bundle/html5.vim/indent/html.vim	/^fun! HtmlIndentGet(lnum)$/;"	f
HtmlIndentOpen	.vim/bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpen(lnum, pattern)$/;"	f
HtmlIndentOpenAlt	.vim/bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentSum	.vim/bundle/html5.vim/indent/html.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
http_get	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:http_get(...)$/;"	f
iconv	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:iconv(expr, from, to) "{{{$/;"	f
iconv	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
if	.vim/bundle/vim-go/ftplugin/go.vim	/^    onoremap <buffer> if :<c-u>call go#textobj#Function('i')<cr>$/;"	m
IgnoreError	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
import	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:import(name, ...) abort$/;"	f
import	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:import(name, ...)$/;"	f
import	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:import(name, ...) abort$/;"	f
import	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:import(name, ...)$/;"	f
import	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:import(name, ...) abort$/;"	f
import	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:import(name, ...)$/;"	f
import	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:import(name, ...) abort$/;"	f
import	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:import(name, ...) abort$/;"	f
INC	.vim/bundle/vimproc.vim/make_android.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INC	.vim/bundle/vimproc.vim/make_sunos.mak	/^INC=src\/vimstack.c src\/ptytty.h$/;"	m
INCLUDE	.tools/makefile	/^INCLUDE = -I${HOME}\/.local\/include #-I .\/include$/;"	m
include_opt	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:include_opt(...)$/;"	f
include_opt	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:include_opt()$/;"	f
IndentWithContinuation	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
indent_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:indent_snippet(begin, end) "{{{$/;"	f
index_clear_filter	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! s:index_clear_filter() dict "{{{1$/;"	f
index_filter	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! s:index_filter() dict "{{{1$/;"	f
index_fold_level	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_fold_level(lnum) " {{{1$/;"	f
index_fold_text	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_fold_text() " {{{1$/;"	f
index_hook_init_post	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! s:index_hook_init_post() dict " {{{1$/;"	f
index_hook_init_post	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_hook_init_post() dict " {{{1$/;"	f
index_print_entries	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_print_entries() dict " {{{1$/;"	f
index_print_entry	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_print_entry(entry) dict " {{{1$/;"	f
index_print_number	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_print_number(number) dict " {{{1$/;"	f
index_secnumdepth_decrease	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_secnumdepth_decrease() dict "{{{1$/;"	f
index_secnumdepth_increase	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_secnumdepth_increase() dict "{{{1$/;"	f
index_syntax	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! s:index_syntax() dict " {{{1$/;"	f
index_syntax	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_syntax() dict "{{{1$/;"	f
index_toggle_numbers	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:index_toggle_numbers() dict "{{{1$/;"	f
init	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:init(context, bundle_names)$/;"	f
Init	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
initialize_cache	.vim/bundle/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_cache() "{{{$/;"	f
initialize_default	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! s:initialize_default() "{{{$/;"	f
initialize_default_options	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^function! s:initialize_default_options() "{{{$/;"	f
initialize_include	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_include(filename, filetype) "{{{$/;"	f
initialize_options	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! s:initialize_options(options) "{{{$/;"	f
initialize_others	.vim/bundle/neosnippet.vim/autoload/neosnippet/init.vim	/^function! s:initialize_others() "{{{$/;"	f
initialize_plugin_names	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:initialize_plugin_names(context) "{{{$/;"	f
initialize_source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_tags	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
initialize_variables	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:initialize_variables() "{{{$/;"	f
InitTypes	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
init_bookmark	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:init_bookmark(filename)  "{{{$/;"	f
init_buffer	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:init_buffer() " {{{1$/;"	f
init_continuation	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:init_continuation(context, directory) "{{{$/;"	f
init_depends	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! s:init_depends(bundle) "{{{$/;"	f
init_lazy	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! s:init_lazy(bundle) "{{{$/;"	f
init_mappings	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:init_mappings() " {{{1$/;"	f
init_modules	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:init_modules(initmode) " {{{1$/;"	f
init_profile	.vim/bundle/vimfiler/autoload/vimfiler/custom.vim	/^function! s:init_profile() "{{{$/;"	f
init_python	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^    def init_python(self):$/;"	m	class:UniteHandlers
init_var	.vim/bundle/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
InMultiVarStatement	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
input	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! s:input(input, input_after)$/;"	f
input_complete	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! s:input_complete(lead, cmdline, pos) " {{{1$/;"	f
input_directory	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:input_directory() "{{{$/;"	f
input_helper	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_helper	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:input_helper(funcname, args)$/;"	f
input_helper	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_helper	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_line_parser_aux	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! s:input_line_parser_aux(line, file) " {{{1$/;"	f
input_line_parser_tex	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! s:input_line_parser_tex(line, file) " {{{1$/;"	f
input_overwrite_method	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! s:input_overwrite_method(dest, src) "{{{$/;"	f
input_safe	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:input_safe(...)$/;"	f
input_safe	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:input_safe(...)$/;"	f
input_safe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
input_safe	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
insert_enter	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter(key) "{{{$/;"	f
insert_enter2	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_enter2() "{{{$/;"	f
insert_leave	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_leave() "{{{$/;"	f
insert_mode_p	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:insert_mode_p(mode)  "{{{2$/;"	f
insert_selected_candidate	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:insert_selected_candidate() "{{{$/;"	f
InspectFileSystemForRootDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:InspectFileSystemForRootDirectory()$/;"	f
install	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:install(bang, bundles) "{{{$/;"	f
install	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^function! s:install(args) "{{{$/;"	f
install	.vim/conf.d/01-setup.vim	/^	augroup install-neobundle$/;"	a
install_file	.vim/bundle/html5.vim/Makefile	/^install_file = \\$/;"	m
install_file	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^install_file = \\$/;"	m
install_git_source	.vim/bundle/html5.vim/Makefile	/^install_git_source = \\$/;"	m
install_git_source	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^install_git_source = \\$/;"	m
install_neobundle	.vim/conf.d/01-setup.vim	/^	function! s:install_neobundle()$/;"	f
install_plugin	.vim/bundle/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
install_source	.vim/bundle/html5.vim/Makefile	/^install_source = \\$/;"	m
install_source	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^install_source = \\$/;"	m
install_vim	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:install_vim$/;"	l
interactive	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:interactive(...)$/;"	f
intersect	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
IsDirectory	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:IsDirectory(pattern)$/;"	f
IsInMultilineComment	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInString	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsLineComment	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsNormalFile	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:IsNormalFile()$/;"	f
IsShellValid	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsValidFile	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
IsVirtualFileSystem	.vim/bundle/vim-rooter/plugin/rooter.vim	/^function! s:IsVirtualFileSystem()$/;"	f
is_absolute	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^  function! s:is_absolute(path) "{{{$/;"	f
is_absolute	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:is_absolute(path) "{{{$/;"	f
is_absolute	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^  function! s:is_absolute(path) abort$/;"	f
is_absolute	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^  function! s:is_absolute(path)$/;"	f
is_auto_pairs	.vim/bundle/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! s:is_auto_pairs() abort "{{{$/;"	f
is_available	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:is_available() abort$/;"	f
is_available	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:is_available() abort$/;"	f
is_beginning_of_line	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! s:is_beginning_of_line(cur_text) "{{{$/;"	f
is_busy	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:is_busy(label) abort$/;"	f
is_case_tolerant	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:is_case_tolerant() abort$/;"	f
is_case_tolerant	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:is_case_tolerant()$/;"	f
is_cmdwin	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_cmdwin	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_cmd_exe	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:is_cmd_exe() abort$/;"	f
is_cygwin	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_cygwin	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_cygwin()$/;"	f
is_cygwin	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_cygwin	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_dict	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_dict(Value)$/;"	f
is_dict	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_dict	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_done	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:is_done(label, rname) abort$/;"	f
is_empty_buffer	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:is_empty_buffer() abort$/;"	f
is_empty_region	.vim/bundle/vim-clang-format/autoload/operator/clang_format.vim	/^function! s:is_empty_region(begin, end)$/;"	f
is_float	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_float	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_float(Value)$/;"	f
is_float	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_float	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_funcref	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_funcref(Value)$/;"	f
is_funcref	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_funcref	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_git_dir	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:is_git_dir(path) "{{{$/;"	f
is_integer	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_integer(Value)$/;"	f
is_list	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_list	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_list(Value)$/;"	f
is_list	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_list	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_listed	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:is_listed(is_bang, is_question, is_plus, is_minus, is_terminal, bufnr) "{{{$/;"	f
is_mac	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_mac()$/;"	f
is_mac	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_mac()$/;"	f
is_mac	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_mac	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_math	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:is_math() " {{{1$/;"	f
is_null_device	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:is_null_device(filename)$/;"	f
is_number	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_number	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_number(Value)$/;"	f
is_number	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_number	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_numeric	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_numeric(Value)$/;"	f
is_numeric	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_numeric	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_pseudo_device	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:is_pseudo_device(filename) "{{{$/;"	f
is_relative	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:is_relative(path) abort$/;"	f
is_reset_ftplugin	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:is_reset_ftplugin(filetype, rtp) "{{{$/;"	f
is_skip_auto_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_string	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_string(Value)$/;"	f
is_string	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_unix()$/;"	f
is_unix	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_unix()$/;"	f
is_unix	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_unix	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:is_windows()$/;"	f
is_windows	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:is_windows()$/;"	f
is_windows	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_windows	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:is_windows() abort$/;"	f
itemno	.vim/bundle/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
j	.vim/bundle/vim-submode/t/expr.vim	/^    normal j$/;"	m
j	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap j gj$/;"	m
j	.vim/conf.d/keymapping/moving.keymapping.vim	/^onoremap j gj$/;"	m
JJ	.vim/conf.d/keymapping/misc.keymapping.vim	/^inoremap JJ <Esc>$/;"	m
job_handler	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:job_handler(job_id, data, event) abort "{{{$/;"	f
job_handler	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:job_handler(job_id, data, event) abort "{{{$/;"	f
join	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:join(...) abort$/;"	f
join	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:join(...)$/;"	f
jslibsyntax#load	.vim/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^function! jslibsyntax#load()$/;"	f
jump	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:jump(candidate, is_highlight) "{{{$/;"	f
JumpToTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
jump_child	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:jump_child(is_first) "{{{$/;"	f
jump_to_window	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:jump_to_window(tabnr, winnr) abort$/;"	f
justify_equal_spacing	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...)$/;"	f
justify_equal_spacing	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
justify_equal_spacing	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
K	.vim/bundle/vim-go/ftplugin/go.vim	/^    nnoremap <buffer> <silent> K :GoDoc<cr>$/;"	m
k	.vim/conf.d/keymapping/moving.keymapping.vim	/^nnoremap k gk$/;"	m
k	.vim/conf.d/keymapping/moving.keymapping.vim	/^onoremap k gk$/;"	m
keygen	.vim/bundle/vim-css3-syntax/test/test.css	/^keygen,$/;"	s
keyword_escape	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! s:keyword_escape(complete_str) "{{{$/;"	f
keyword_filter	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:keyword_filter(snippets, cur_keyword_str) "{{{$/;"	f
kill	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:kill(signal, candidates) "{{{$/;"	f
kill	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:kill(...)$/;"	f
kill	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:kill(i) abort$/;"	f
kind	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.highlight = {$/;"	v
kind	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.preview = {$/;"	v
kind	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  let kind.action_table.replace = {$/;"	v
kind.action_table.above.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.above.func(candidates) "{{{$/;"	f
kind.action_table.append.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.append.func(candidate) "{{{$/;"	f
kind.action_table.backup.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.backup.func(candidates) "{{{$/;"	f
kind.action_table.below.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.below.func(candidates) "{{{$/;"	f
kind.action_table.cd.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.cd.func(candidate) "{{{$/;"	f
kind.action_table.choose.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.choose.func(candidates) "{{{$/;"	f
kind.action_table.copy.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.copy.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.delete.func(candidates) "{{{$/;"	f
kind.action_table.diff.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.diff.func(candidates)$/;"	f
kind.action_table.dirdiff.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.dirdiff.func(candidates)$/;"	f
kind.action_table.echo.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.echo.func(candidates) "{{{$/;"	f
kind.action_table.edit.func	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.edit.func	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.edit.func(candidate) "{{{$/;"	f
kind.action_table.ex.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.ex.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.execute.func(candidates) "{{{$/;"	f
kind.action_table.execute.func	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! s:kind.action_table.execute.func(candidate) "{{{$/;"	f
kind.action_table.exrename.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.exrename.func(candidates)$/;"	f
kind.action_table.fdelete.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.fdelete.func(candidates) "{{{$/;"	f
kind.action_table.find.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.find.func(candidate) "{{{$/;"	f
kind.action_table.goto.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.goto.func(candidate) "{{{$/;"	f
kind.action_table.grep.func	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! s:kind.action_table.grep.func(candidate) "{{{$/;"	f
kind.action_table.grep.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.grep.func(candidates) "{{{$/;"	f
kind.action_table.highlight.func	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.highlight.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert.func	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.insert.func(candidate) "{{{$/;"	f
kind.action_table.insert_directory.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.insert_directory.func(candidate) "{{{$/;"	f
kind.action_table.lcd.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.lcd.func(candidate) "{{{$/;"	f
kind.action_table.left.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.left.func(candidates) "{{{$/;"	f
kind.action_table.mkdir.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.mkdir.func(candidate) "{{{$/;"	f
kind.action_table.move.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.move.func(candidates) "{{{$/;"	f
kind.action_table.narrow.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.narrow.func(candidate) "{{{$/;"	f
kind.action_table.nop.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.nop.func(candidate) "{{{$/;"	f
kind.action_table.only.func	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.only.func(candidate) "{{{$/;"	f
kind.action_table.open.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.open.func(candidates) "{{{$/;"	f
kind.action_table.open.func	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.open.func	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.open.func(candidate) "{{{$/;"	f
kind.action_table.persist_open.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.persist_open.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! s:kind.action_table.preview.func(candidate) "{{{$/;"	f
kind.action_table.project_cd.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.project_cd.func(candidate) "{{{$/;"	f
kind.action_table.read.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.read.func(candidates) "{{{$/;"	f
kind.action_table.reinstall.func	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.reinstall.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.rename.func	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  function! s:kind.action_table.rename.func(candidates) "{{{$/;"	f
kind.action_table.replace.func	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^  function! kind.action_table.replace.func(candidates) "{{{$/;"	f
kind.action_table.right.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.right.func(candidates) "{{{$/;"	f
kind.action_table.split.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.split.func(candidates) "{{{$/;"	f
kind.action_table.splitswitch.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.splitswitch.func(candidates) "{{{$/;"	f
kind.action_table.start.func	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.start.func	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! s:kind.action_table.start.func(candidates) "{{{$/;"	f
kind.action_table.switch.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.switch.func(candidates) "{{{$/;"	f
kind.action_table.tabnew_cd.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_cd.func(candidate) "{{{$/;"	f
kind.action_table.tabnew_lcd.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabnew_lcd.func(candidate) "{{{$/;"	f
kind.action_table.tabopen.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabopen.func(candidates) "{{{$/;"	f
kind.action_table.tabsplit.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabsplit.func(candidates) "{{{$/;"	f
kind.action_table.tabswitch.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.tabswitch.func(candidates) "{{{$/;"	f
kind.action_table.tabvimfiler.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimfiler.func(candidate) "{{{$/;"	f
kind.action_table.tabvimshell.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.tabvimshell.func(candidate) "{{{$/;"	f
kind.action_table.unite__new_candidate.func	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:kind.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
kind.action_table.unload.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.unload.func(candidates) "{{{$/;"	f
kind.action_table.update.func	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! s:kind.action_table.update.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimfiler.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__copy.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__copy.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__delete.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__delete.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__execute.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__execute.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__external_filer.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__external_filer.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__mkdir.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__mkdir.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__move.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__move.func(candidates) "{{{$/;"	f
kind.action_table.vimfiler__newfile.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__newfile.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__rename.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__rename.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shell.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shell.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__shellcmd.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__shellcmd.func(candidate) "{{{$/;"	f
kind.action_table.vimfiler__write.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:kind.action_table.vimfiler__write.func(candidate) "{{{$/;"	f
kind.action_table.vimgrep.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.vimgrep.func(candidates) "{{{$/;"	f
kind.action_table.vimshell.func	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:kind.action_table.vimshell.func(candidate) "{{{$/;"	f
kind.action_table.vsplit.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplit.func(candidates) "{{{$/;"	f
kind.action_table.vsplitswitch.func	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:kind.action_table.vsplitswitch.func(candidates) "{{{$/;"	f
kind.action_table.wipeout.func	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! s:kind.action_table.wipeout.func(candidates) "{{{$/;"	f
kind.action_table.wunix.func	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! s:kind.action_table.wunix.func(candidates) "{{{$/;"	f
kind.action_table.yank.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank.func(candidates) "{{{$/;"	f
kind.action_table.yank_escape.func	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:kind.action_table.yank_escape.func(candidate) "{{{$/;"	f
KindheaderTag.closeFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
KK	.vim/conf.d/keymapping/misc.keymapping.vim	/^inoremap KK <Esc>$/;"	m
known_files.get	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
labels_get	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:labels_get(file) " {{{1$/;"	f
labels_parse_number	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:labels_parse_number(num_tree) " {{{1$/;"	f
landmark_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
landmark_role	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang	.vim/bundle/vimtex/after/syntax/tex.vim	/^  let lang = entry.lang$/;"	v
lang_tag	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
lasterror	.vim/bundle/vimproc.vim/src/proc_w32.c	/^lasterror()$/;"	f	file:
latexmk_build_cmd	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:latexmk_build_cmd() " {{{1$/;"	f
latexmk_init_pid	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:latexmk_init_pid() " {{{1$/;"	f
latexmk_kill	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:latexmk_kill(data) " {{{1$/;"	f
latexmk_set_pid	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:latexmk_set_pid() " {{{1$/;"	f
LDFLAGS	.tools/makefile	/^LDFLAGS = -L${HOME}\/.local\/lib$/;"	m
LDFLAGS	.vim/bundle/vimproc.vim/make_mac.mak	/^LDFLAGS=$/;"	m
lengthof	.vim/bundle/vimproc.vim/src/proc_w32.c	72;"	d	file:
levenshtein_distance	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:levenshtein_distance(str1, str2)$/;"	f
levenshtein_distance	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
levenshtein_distance	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lexer.advance	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.advance()$/;"	f
lexer.lex_digit	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.lex_digit()$/;"	f
lexer.skip_spaces	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.skip_spaces()$/;"	f
lexer.token	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.token()$/;"	f
lexer.value	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:lexer.value()$/;"	f
lexima	.vim/bundle/lexima.vim/plugin/lexima.vim	/^augroup lexima$/;"	a
lexima#add_rule	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! lexima#add_rule(rule)$/;"	f
lexima#charstack#new	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! lexima#charstack#new()$/;"	f
lexima#clear_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! lexima#clear_rules()$/;"	f
lexima#cmdmode#add_rules	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! lexima#cmdmode#add_rules(rule)$/;"	f
lexima#cmdmode#clear_rules	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! lexima#cmdmode#clear_rules()$/;"	f
lexima#cmdmode#define_altanative_key	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! lexima#cmdmode#define_altanative_key(char, mapping)$/;"	f
lexima#cmdmode#_priority_order	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! lexima#cmdmode#_priority_order(rule1, rule2)$/;"	f
lexima#endwise_rule#make	.vim/bundle/lexima.vim/autoload/lexima/endwise_rule.vim	/^function! lexima#endwise_rule#make()$/;"	f
lexima#init	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! lexima#init()$/;"	f
lexima#insmode#add_rules	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#add_rules(rule)$/;"	f
lexima#insmode#clear_rules	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#clear_rules()$/;"	f
lexima#insmode#clear_stack	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#clear_stack()$/;"	f
lexima#insmode#define_altanative_key	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#define_altanative_key(char, mapping)$/;"	f
lexima#insmode#delete	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#delete(len, fallback)$/;"	f
lexima#insmode#delete_all	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#delete_all(fallback)$/;"	f
lexima#insmode#delete_till	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#delete_till(char, fallback)$/;"	f
lexima#insmode#delete_till_eol	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#delete_till_eol(fallback)$/;"	f
lexima#insmode#escape	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#escape()$/;"	f
lexima#insmode#get_rules	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#get_rules()$/;"	f
lexima#insmode#leave	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#leave(len, fallback)$/;"	f
lexima#insmode#leave_all	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#leave_all(fallback)$/;"	f
lexima#insmode#leave_till	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#leave_till(char, fallback)$/;"	f
lexima#insmode#leave_till_eol	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#leave_till_eol(fallback)$/;"	f
lexima#insmode#map_hook	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#map_hook(when, char, expr)$/;"	f
lexima#insmode#_priority_order	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! lexima#insmode#_priority_order(rule1, rule2)$/;"	f
lexima#set_default_rules	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! lexima#set_default_rules()$/;"	f
lexima#sortedlist#new	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^function! lexima#sortedlist#new(init_list, PriorityOrderPred)$/;"	f
lexima#string#take_many	.vim/bundle/lexima.vim/autoload/lexima/string.vim	/^function! lexima#string#take_many(str, ...)$/;"	f
lexima#string#to_inputtable	.vim/bundle/lexima.vim/autoload/lexima/string.vim	/^function! lexima#string#to_inputtable(str)$/;"	f
lexima#string#to_mappable	.vim/bundle/lexima.vim/autoload/lexima/string.vim	/^function! lexima#string#to_mappable(str)$/;"	f
lexima#string#to_upper_specialkey	.vim/bundle/lexima.vim/autoload/lexima/string.vim	/^function! lexima#string#to_upper_specialkey(str) abort$/;"	f
lexima#vital	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! lexima#vital()$/;"	f
li	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
li	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
libcall	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall(func, args) "{{{$/;"	f
libcall_raw_read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_read(func, args) "{{{$/;"	f
libcall_raw_write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:libcall_raw_write(func, args) "{{{$/;"	f
LIBDIR	.vim/bundle/vimproc.vim/make_msvc.mak	/^LIBDIR = lib$/;"	m
LIBS	.tools/makefile	/^LIBS    = -lntl -lm -lgmp$/;"	m
LineHasOpeningBrackets	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
lines	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:lines(str)$/;"	f
lines	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:lines(str) abort$/;"	f
linkreltypes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let linkreltypes = linktypes + ['canonical', 'import']$/;"	v
linktypes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'pingback', 'prefetch', 'prev', 'search', 'stylesheet', 'sidebar', 'tag']$/;"	v
link_file	.vim/bundle/html5.vim/Makefile	/^link_file = \\$/;"	m
link_file	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^link_file = \\$/;"	m
list2hd	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:list2hd(lis)$/;"	f
list2str	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:list2str(lis)$/;"	f
live_region_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let live_region_attributes = {'aria-atomic': ['true', 'false'], 'aria-busy': ['true', 'false'], 'aria-live': ['off', 'polite', 'assertive'], 'aria-relevant': ['additions', 'removals', 'text', 'all', 'additions text']}$/;"	v
load	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:load(...) dict abort$/;"	f
load	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:load(...) dict$/;"	f
load	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:load(...) dict abort$/;"	f
load	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:load(...) dict$/;"	f
load	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:load(filename)  "{{{$/;"	f
load	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:load(...) dict abort$/;"	f
load	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:load(...) dict$/;"	f
load	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:load(...) dict abort$/;"	f
load	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:load(...) dict abort$/;"	f
LoadConfigFile	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
loaded_grep	.vim/bundle/grep.vim/plugin/grep.vim	/^let loaded_grep = 1$/;"	v
LoadUserTypeDefs	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
load_from_file	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding, is_string) "{{{$/;"	f
load_from_tags	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, maxfilename, fileencoding) "{{{$/;"	f
location_list_to_unite	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^function! s:location_list_to_unite(val)$/;"	f
loclist	.vim/bundle/vim-go/autoload/go/oracle.vim	/^func! s:loclist(output)$/;"	f
loclistSecond	.vim/bundle/vim-go/autoload/go/oracle.vim	/^func! s:loclistSecond(output)$/;"	f
log	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:log(point, ...)$/;"	f
log	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:log()$/;"	f
log	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:log()$/;"	f
login_tty	.vim/bundle/vimproc.vim/src/ptytty.c	/^login_tty(int fd)$/;"	f
log_clear	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:log_clear(label) abort$/;"	f
log_contains_error	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:log_contains_error(logfile) " {{{1$/;"	f
log_dump	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:log_dump(label) abort$/;"	f
longer_mapping_exists_p	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:longer_mapping_exists_p(submode, lhs)  "{{{2$/;"	f
lseek	.vim/bundle/vimproc.vim/src/proc_w32.c	186;"	d	file:
ltr	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:dir(ltr),$/;"	s
m	.vim/bundle/vim-javascript/indent/javascript.vim	/^let m = matchlist(&cinoptions, ':\\(.\\)')$/;"	v
m	.vim/bundle/vim-javascript/indent/javascript.vim	/^let m = matchlist(&cinoptions, '=\\(.\\)')$/;"	v
m	.vim/conf.d/keymapping/moving.keymapping.vim	/^noremap m  %$/;"	m
main	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	.vim/bundle/vim-clang-format/t/test.cpp	/^int main()$/;"	f
main	.vim/bundle/vim-css3-syntax/test/test.css	/^main,$/;"	s
main_syntax	.vim/bundle/vim-go/syntax/gohtmltmpl.vim	/^    let main_syntax = 'html'$/;"	v
main_syntax	.vim/bundle/vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
make	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:make()$/;"	f
make	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:make(...)$/;"	f
make	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^function! s:make(cmd)$/;"	f
make	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:make(command, endpat)$/;"	f
make	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:make()$/;"	f
make	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Timer.vim	/^function! s:make(task, time)$/;"	f
MAKE	.vim/bundle/vimproc.vim/Makefile	/^        MAKE = make # BSD Make$/;"	m
make_abbr	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_abbr(bufnr, flags) "{{{$/;"	f
make_aliases	.vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_aliases()$/;"	f
make_cache_commands	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:make_cache_commands() "{{{$/;"	f
make_cache_functions	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:make_cache_functions() "{{{$/;"	f
make_command	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:make_command(runner, args) abort$/;"	f
make_completion_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:make_completion_list(list, kind) "{{{$/;"	f
make_context	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:make_context(pos, bufnr)$/;"	f
make_context	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:make_context(pos, bufnr)$/;"	f
make_current_context	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:make_current_context()$/;"	f
make_default_description	.vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! s:make_default_description(source_name, args)$/;"	f
make_directory	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:make_directory() "{{{$/;"	f
make_get_process	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^function! s:make_get_process(...)$/;"	f
make_group	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:make_group()$/;"	f
make_hook_echo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/echo.vim	/^function! s:make_hook_echo()$/;"	f
make_interactive	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:make_interactive(...)$/;"	f
make_rule	.vim/bundle/lexima.vim/autoload/lexima/endwise_rule.vim	/^function! s:make_rule(at, end, filetype, syntax)$/;"	f
make_style_options	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:make_style_options()$/;"	f
make_tempfile	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:make_tempfile(filename, bufnr)$/;"	f
make_tempfile	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:make_tempfile(filename, bufnr)$/;"	f
make_tempfile	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:make_tempfile(filename, bufnr)$/;"	f
make_timer	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:make_timer(...)$/;"	f
make_word	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:make_word(bufnr) "{{{$/;"	f
map	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:map(list) abort$/;"	f
MapKeys	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
mapping_exists_p	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:mapping_exists_p(keyseq, mode)  "{{{2$/;"	f
mapping_file_operations	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:mapping_file_operations() "{{{$/;"	f
map_accum	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:map_accum(expr, xs, init)$/;"	f
map_accum	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_command	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:map_command(mode, flags)  "{{{2$/;"	f
map_impl	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^function! s:map_impl(char, fallback)$/;"	f
map_impl	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^function! s:map_impl(char, fallback)$/;"	f
map_options	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:map_options(options)  "{{{2$/;"	f
marching#check_complete_always	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#check_complete_always()$/;"	f
marching#clang_command#cancel	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#cancel()$/;"	f
marching#clang_command#check	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#check()$/;"	f
marching#clang_command#clang_complete_command	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#clang_complete_command(...)$/;"	f
marching#clang_command#complete	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#complete(context)$/;"	f
marching#clang_command#include_opt	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#include_opt(...)$/;"	f
marching#clang_command#make_tempfile	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#make_tempfile(filename, bufnr)$/;"	f
marching#clang_command#option	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#option(...)$/;"	f
marching#clang_command#parse_complete_result	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#parse_complete_result(output)$/;"	f
marching#clang_command#update_complete_process	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! marching#clang_command#update_complete_process()$/;"	f
marching#clear_cache	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#clear_cache(context)$/;"	f
marching#clear_cache_all	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#clear_cache_all()$/;"	f
marching#clear_log	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#clear_log()$/;"	f
marching#complete	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#complete(findstart, base)$/;"	f
marching#complete#clear_complete_cache	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! marching#complete#clear_complete_cache()$/;"	f
marching#complete#log	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! marching#complete#log()$/;"	f
marching#complete#omnifunc	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! marching#complete#omnifunc(findstart, base)$/;"	f
marching#complete#popup_pos	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! marching#complete#popup_pos()$/;"	f
marching#complete#update_complete_process	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! marching#complete#update_complete_process()$/;"	f
marching#current_context	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#current_context()$/;"	f
marching#extension	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#extension(filetype)$/;"	f
marching#get_included_files	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#get_included_files(bufnr)$/;"	f
marching#get_include_dirs	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#get_include_dirs(...)$/;"	f
marching#log	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#log()$/;"	f
marching#make_tempfile_from_buffer	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#make_tempfile_from_buffer(bufnr)$/;"	f
marching#popup_pos	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#popup_pos()$/;"	f
marching#print_log	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#print_log(point, ...)$/;"	f
marching#sync_clang_command#complete	.vim/bundle/vim-marching/autoload/marching/sync_clang_command.vim	/^function! marching#sync_clang_command#complete(context)$/;"	f
marching#sync_wandbox#complete	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^function! marching#sync_wandbox#complete(context)$/;"	f
marching#vital	.vim/bundle/vim-marching/autoload/marching.vim	/^function! marching#vital()$/;"	f
MarchingBufferClearCache	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingBufferClearCache call s:clear_cache()$/;"	c
MarchingDebugCheck	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingDebugCheck call marching#clang_command#check() | MarchingDebugLog$/;"	c
MarchingDebugClearLog	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingDebugClearLog call marching#clear_log()$/;"	c
MarchingDebugLog	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingDebugLog echo marching#log()$/;"	c
MarchingDisableDebug	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingDisableDebug let g:marching_debug = 0$/;"	c
MarchingEnableDebug	.vim/bundle/vim-marching/plugin/marching.vim	/^command! -bar MarchingEnableDebug  let g:marching_debug = 1$/;"	c
mark	.vim/bundle/vim-css3-syntax/test/test.css	/^mark,$/;"	s
mark_current_line	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:mark_current_line() "{{{$/;"	f
mark_similar_lines	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:mark_similar_lines() "{{{$/;"	f
mark_window	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
Match	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
matcher.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.filter	.vim/bundle/vimfiler/autoload/unite/filters/matcher_vimfiler_mask.vim	/^function! s:matcher.filter(candidates, context) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
matcher.pattern	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! s:matcher.pattern(input) "{{{$/;"	f
match_pair	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:match_pair(string, start_pattern, end_pattern, start_cnt) "{{{$/;"	f
match_wildcard	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! s:match_wildcard(cur_text, pattern, complete_pos) "{{{$/;"	f
MavenOutputDirectory	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
max	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:max(list, expr)$/;"	f
max	.vim/bundle/vimproc.vim/tools/leak_check.vim	/^let max = 2048$/;"	v
max_by	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
max_by	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:max_by(list, expr)$/;"	f
max_by	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
may_override_showmode_p	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:may_override_showmode_p(mode)  "{{{2$/;"	f
metadata_elements	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
meter	.vim/bundle/vim-css3-syntax/test/test.css	/^meter,$/;"	s
microdata_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
min	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:min(list, expr)$/;"	f
mingw	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:mingw$/;"	l
mingw_test	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:mingw_test$/;"	l
min_by	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
min_by	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:min_by(list, expr)$/;"	f
min_by	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mkdir_nothrow	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:mkdir_nothrow(...) abort "{{{$/;"	f
mkdir_nothrow	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:mkdir_nothrow(...) abort "{{{$/;"	f
MKFILES	.vim/bundle/html5.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MKFILES	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
module.available	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:module.available() abort$/;"	f
module.init	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:module.init(session) abort$/;"	f
module.sweep	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:module.sweep() abort$/;"	f
module.validate	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:module.validate() abort$/;"	f
Modules	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
move	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move(src, dest) abort "{{{$/;"	f
move	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:move(src, dest) abort "{{{$/;"	f
move	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:move() "{{{$/;"	f
move_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe() abort$/;"	f
move_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f
move_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:move_exe() abort$/;"	f
move_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:move_exe(src, dest) abort$/;"	f
move_tabwin	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^function! s:move_tabwin(tab, win) abort$/;"	f
move_to_other_drive	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:move_to_other_drive(candidate, filename) "{{{$/;"	f
move_vim	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:move_vim(src, dest) abort "{{{$/;"	f
move_vim	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:move_vim(src, dest) abort "{{{$/;"	f
move_vimfiler_cursor	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! s:move_vimfiler_cursor(candidate) "{{{$/;"	f
msg2list	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:msg2list(expr) "{{{$/;"	f
msvc	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:msvc$/;"	l
msvc_test	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:msvc_test$/;"	l
msys2	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:msys2$/;"	l
msys2_test	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^:msys2_test$/;"	l
mupdf.forward_search	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.forward_search(outfile) dict " {{{2$/;"	f
mupdf.init	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.init() dict " {{{2$/;"	f
mupdf.latexmk_append_argument	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.latexmk_append_argument() dict " {{{2$/;"	f
mupdf.latexmk_callback	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.latexmk_callback() dict " {{{2$/;"	f
mupdf.reverse_search	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.reverse_search() dict " {{{2$/;"	f
mupdf.start	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.start(outfile) dict " {{{2$/;"	f
mupdf.view	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:mupdf.view(file) dict " {{{2$/;"	f
my_cr_function	.vim/conf.d/plugins/neocomplcache.vim	/^	function! s:my_cr_function()$/;"	f
my_cr_function	.vim/conf.d/plugins/neocomplete.vim	/^	function! s:my_cr_function()$/;"	f
n+2	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-child(-n+2),$/;"	s
n+2	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors3:nth-last-of-type(n+2),$/;"	s
n+2	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-column(-n+2),$/;"	s
n+2	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:nth-last-match(-n+2),$/;"	s
NAME	.vim/bundle/html5.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NAME	.vim/bundle/javascript-libraries-syntax.vim/config.mk	/^NAME=javascript-libraries-syntax.vim$/;"	m
NAME	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
named_key_before_action	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_before_action(submode)  "{{{2$/;"	f
named_key_before_entering	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_before_entering(submode)  "{{{2$/;"	f
named_key_before_entering_with	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_before_entering_with(submode, lhs)  "{{{2$/;"	f
named_key_enter	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_enter(submode)  "{{{2$/;"	f
named_key_leave	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_leave(submode)  "{{{2$/;"	f
named_key_prefix	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_prefix(submode)  "{{{2$/;"	f
named_key_rhs	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:named_key_rhs(submode, lhs)  "{{{2$/;"	f
narrowing_dot	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_dot() "{{{$/;"	f
narrowing_input_history	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:narrowing_input_history() "{{{$/;"	f
nav	.vim/bundle/vim-css3-syntax/test/test.css	/^nav,$/;"	s
NeoBundle	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundle$/;"	c
neobundle#append	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#append() "{{{$/;"	f
neobundle#autoload#get_unite_sources	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#get_unite_sources() "{{{$/;"	f
neobundle#autoload#init	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#init() "{{{$/;"	f
neobundle#autoload#unite_sources	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#unite_sources(sources) "{{{$/;"	f
neobundle#autoload#_command	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#_command(command, name, args, bang, line1, line2) "{{{$/;"	f
neobundle#autoload#_mapping	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#_mapping(mapping, name, mode) "{{{$/;"	f
neobundle#autoload#_set_function_prefixes	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#_set_function_prefixes(bundles) abort "{{{$/;"	f
neobundle#autoload#_source	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! neobundle#autoload#_source(bundle_name) "{{{$/;"	f
neobundle#begin	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#begin(...) "{{{$/;"	f
neobundle#bundle	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#bundle(arg, ...) "{{{$/;"	f
neobundle#cache#check_old_cache	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#check_old_cache(cache_dir, filename)$/;"	f
neobundle#cache#deletefile	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#deletefile(cache_dir, filename)$/;"	f
neobundle#cache#filereadable	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#filereadable(cache_dir, filename)$/;"	f
neobundle#cache#getfilename	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#getfilename(cache_dir, filename)$/;"	f
neobundle#cache#readfile	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#readfile(cache_dir, filename)$/;"	f
neobundle#cache#writefile	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! neobundle#cache#writefile(cache_dir, filename, list)$/;"	f
neobundle#call_hook	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#call_hook(hook_name, ...) "{{{$/;"	f
neobundle#commands#check	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#check() "{{{$/;"	f
neobundle#commands#check_update	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#check_update(bundle_names) "{{{$/;"	f
neobundle#commands#clean	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#clean(bang, ...) "{{{$/;"	f
neobundle#commands#clear_cache	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#clear_cache() "{{{$/;"	f
neobundle#commands#complete_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#complete_bundles(arglead, cmdline, cursorpos) "{{{$/;"	f
neobundle#commands#complete_deleted_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#complete_deleted_bundles(arglead, cmdline, cursorpos) "{{{$/;"	f
neobundle#commands#complete_lazy_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#complete_lazy_bundles(arglead, cmdline, cursorpos) "{{{$/;"	f
neobundle#commands#gc	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#gc(bundle_names) "{{{$/;"	f
neobundle#commands#get_cache_file	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#get_cache_file() "{{{$/;"	f
neobundle#commands#get_default_cache_file	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#get_default_cache_file() "{{{$/;"	f
neobundle#commands#helptags	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#helptags(bundles) "{{{$/;"	f
neobundle#commands#install	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#install(bang, bundle_names) "{{{$/;"	f
neobundle#commands#list	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#list() "{{{$/;"	f
neobundle#commands#load_cache	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#load_cache(...) "{{{$/;"	f
neobundle#commands#lock	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#lock(name, rev) "{{{$/;"	f
neobundle#commands#reinstall	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#reinstall(bundle_names) "{{{$/;"	f
neobundle#commands#remote_plugins	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#remote_plugins() "{{{$/;"	f
neobundle#commands#rollback	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#rollback(bundle_name) "{{{$/;"	f
neobundle#commands#save_cache	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#save_cache() "{{{$/;"	f
neobundle#commands#source	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! neobundle#commands#source(names, ...) "{{{$/;"	f
neobundle#config	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#config(arg, ...) "{{{$/;"	f
neobundle#config#add	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#add(bundle) "{{{$/;"	f
neobundle#config#append	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#append() "{{{$/;"	f
neobundle#config#check_commands	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#check_commands(commands) "{{{$/;"	f
neobundle#config#check_not_exists	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#check_not_exists(names, ...) "{{{$/;"	f
neobundle#config#disable	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#disable(...) "{{{$/;"	f
neobundle#config#final	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#final() "{{{$/;"	f
neobundle#config#fuzzy_search	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#fuzzy_search(bundle_names) "{{{$/;"	f
neobundle#config#get	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get(name) "{{{$/;"	f
neobundle#config#get_autoload_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_autoload_bundles() "{{{$/;"	f
neobundle#config#get_enabled_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_enabled_bundles() "{{{$/;"	f
neobundle#config#get_lazy_rtp_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_lazy_rtp_bundles() "{{{$/;"	f
neobundle#config#get_neobundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_neobundles() "{{{$/;"	f
neobundle#config#get_types	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#get_types(...) "{{{$/;"	f
neobundle#config#init	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#init() "{{{$/;"	f
neobundle#config#is_disabled	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#is_disabled(name) "{{{$/;"	f
neobundle#config#is_installed	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#is_installed(name) "{{{$/;"	f
neobundle#config#is_sourced	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#is_sourced(name) "{{{$/;"	f
neobundle#config#load_extra_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#load_extra_bundles() "{{{$/;"	f
neobundle#config#rm	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rm(bundle) "{{{$/;"	f
neobundle#config#rmdir	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rmdir(path) "{{{$/;"	f
neobundle#config#rtp_add	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_add(bundle) abort "{{{$/;"	f
neobundle#config#rtp_rm	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_rm(bundle) "{{{$/;"	f
neobundle#config#rtp_rm_all_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#rtp_rm_all_bundles() "{{{$/;"	f
neobundle#config#save_direct	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#save_direct(arg) "{{{$/;"	f
neobundle#config#search	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#search(bundle_names, ...) "{{{$/;"	f
neobundle#config#search_simple	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#search_simple(bundle_names) "{{{$/;"	f
neobundle#config#set	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#set(name, dict) "{{{$/;"	f
neobundle#config#source	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#source(names, ...) "{{{$/;"	f
neobundle#config#source_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#source_bundles(bundles) "{{{$/;"	f
neobundle#config#tsort	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#tsort(bundles) "{{{$/;"	f
neobundle#config#within_block	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! neobundle#config#within_block() "{{{$/;"	f
neobundle#end	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#end() "{{{$/;"	f
neobundle#exists_not_installed_bundles	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#exists_not_installed_bundles() "{{{$/;"	f
neobundle#get	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get(name) "{{{$/;"	f
neobundle#get_cache_version	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_cache_version() "{{{$/;"	f
neobundle#get_force_not_installed_bundles	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_force_not_installed_bundles(bundle_names) "{{{$/;"	f
neobundle#get_hooks	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_hooks(name) "{{{$/;"	f
neobundle#get_neobundle_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_neobundle_dir() "{{{$/;"	f
neobundle#get_not_installed_bundles	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_not_installed_bundles(bundle_names) "{{{$/;"	f
neobundle#get_not_installed_bundle_names	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_not_installed_bundle_names() "{{{$/;"	f
neobundle#get_rtp_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_rtp_dir() "{{{$/;"	f
neobundle#get_runtime_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_runtime_dir() "{{{$/;"	f
neobundle#get_tags_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_tags_dir() "{{{$/;"	f
neobundle#get_unite_sources	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#get_unite_sources() "{{{$/;"	f
neobundle#has_cache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#has_cache() "{{{$/;"	f
neobundle#has_fresh_cache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#has_fresh_cache(...) "{{{$/;"	f
neobundle#init#_bundle	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! neobundle#init#_bundle(bundle) "{{{$/;"	f
neobundle#init#_rc	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^function! neobundle#init#_rc(path) "{{{$/;"	f
neobundle#installer#build	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#build(bundle) "{{{$/;"	f
neobundle#installer#check_output	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#check_output(context, process, is_unite) "{{{$/;"	f
neobundle#installer#clear_log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#clear_log() "{{{$/;"	f
neobundle#installer#echomsg	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#echomsg(msg) "{{{$/;"	f
neobundle#installer#error	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#error(msg) "{{{$/;"	f
neobundle#installer#get_errored_bundles_message	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_errored_bundles_message(bundles) "{{{$/;"	f
neobundle#installer#get_log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_log() "{{{$/;"	f
neobundle#installer#get_progress_message	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_progress_message(bundle, number, max) "{{{$/;"	f
neobundle#installer#get_reinstall_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_reinstall_bundles(bundles) "{{{$/;"	f
neobundle#installer#get_release_revision	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_release_revision(bundle, command) "{{{$/;"	f
neobundle#installer#get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_revision_lock_command(bang, bundle, number, max) "{{{$/;"	f
neobundle#installer#get_revision_number	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_revision_number(bundle) "{{{$/;"	f
neobundle#installer#get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_sync_command(bang, bundle, number, max) "{{{$/;"	f
neobundle#installer#get_tags_info	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_tags_info() "{{{$/;"	f
neobundle#installer#get_updated_bundles_message	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_updated_bundles_message(bundles) "{{{$/;"	f
neobundle#installer#get_updated_log_message	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_updated_log_message(bundle, new_rev, old_rev) "{{{$/;"	f
neobundle#installer#get_updates_log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#get_updates_log() "{{{$/;"	f
neobundle#installer#lock_revision	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#lock_revision(process, context, is_unite) "{{{$/;"	f
neobundle#installer#log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#log(msg, ...) "{{{$/;"	f
neobundle#installer#reinstall	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#reinstall(bundles) "{{{$/;"	f
neobundle#installer#sync	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#sync(bundle, context, is_unite) "{{{$/;"	f
neobundle#installer#update	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#update(bundles) "{{{$/;"	f
neobundle#installer#update_log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#update_log(msg, ...) "{{{$/;"	f
neobundle#installer#_load_install_info	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! neobundle#installer#_load_install_info(bundles) "{{{$/;"	f
neobundle#is_installed	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#is_installed(...) "{{{$/;"	f
neobundle#is_sourced	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#is_sourced(name) "{{{$/;"	f
neobundle#load_cache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#load_cache(...) "{{{$/;"	f
neobundle#load_toml	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#load_toml(filename, ...) "{{{$/;"	f
neobundle#local	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#local(localdir, ...) "{{{$/;"	f
neobundle#parser#bundle	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#bundle(arg, ...) "{{{$/;"	f
neobundle#parser#direct	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#direct(arg) "{{{$/;"	f
neobundle#parser#fetch	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#fetch(arg) "{{{$/;"	f
neobundle#parser#lazy	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#lazy(arg) "{{{$/;"	f
neobundle#parser#load_toml	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#load_toml(filename, default) "{{{$/;"	f
neobundle#parser#local	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#local(localdir, options, includes) "{{{$/;"	f
neobundle#parser#path	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#path(path, ...) "{{{$/;"	f
neobundle#parser#recipe	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#recipe(arg) "{{{$/;"	f
neobundle#parser#_init_bundle	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#_init_bundle(name, opts) "{{{$/;"	f
neobundle#parser#_parse_recipe	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! neobundle#parser#_parse_recipe(recipe) "{{{$/;"	f
neobundle#rc	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#rc(...) "{{{$/;"	f
neobundle#set_neobundle_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#set_neobundle_dir(path) "{{{$/;"	f
neobundle#source	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#source(bundle_names) "{{{$/;"	f
neobundle#sources#github#define	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! neobundle#sources#github#define() "{{{$/;"	f
neobundle#sources#neobundle_vim_recipes#define	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! neobundle#sources#neobundle_vim_recipes#define() "{{{$/;"	f
neobundle#tap	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#tap(name) "{{{$/;"	f
neobundle#tapped	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let neobundle#tapped = {}$/;"	v
neobundle#TOML#parse	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! neobundle#TOML#parse(text)$/;"	f
neobundle#TOML#parse_file	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! neobundle#TOML#parse_file(filename)$/;"	f
neobundle#types#git#default_protocol	.vim/bundle/neobundle.vim/test/sample.vim	/^let neobundle#types#git#default_protocol = 'git'$/;"	v
neobundle#types#git#default_protocol	.vim/bundle/neobundle.vim/test/source.vim	/^let neobundle#types#git#default_protocol = 'https'$/;"	v
neobundle#types#git#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! neobundle#types#git#define() "{{{$/;"	f
neobundle#types#hg#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! neobundle#types#hg#define() "{{{$/;"	f
neobundle#types#none#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^function! neobundle#types#none#define() "{{{$/;"	f
neobundle#types#raw#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! neobundle#types#raw#define() "{{{$/;"	f
neobundle#types#svn#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! neobundle#types#svn#define() "{{{$/;"	f
neobundle#types#vba#define	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^function! neobundle#types#vba#define() "{{{$/;"	f
neobundle#untap	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#untap() "{{{$/;"	f
neobundle#util#cd	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#cd(path) "{{{$/;"	f
neobundle#util#cleandir	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#cleandir(path) "{{{$/;"	f
neobundle#util#convert2list	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#convert2list(expr) "{{{$/;"	f
neobundle#util#copy_bundle_files	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#copy_bundle_files(bundles, directory) "{{{$/;"	f
neobundle#util#expand	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#expand(path) "{{{$/;"	f
neobundle#util#get_filetypes	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#get_filetypes() "{{{$/;"	f
neobundle#util#get_last_status	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#get_last_status() "{{{$/;"	f
neobundle#util#has_vimproc	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#has_vimproc() "{{{$/;"	f
neobundle#util#is_cygwin	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_cygwin() "{{{$/;"	f
neobundle#util#is_mac	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_mac() "{{{$/;"	f
neobundle#util#is_sudo	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_sudo() "{{{$/;"	f
neobundle#util#is_windows	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#is_windows() "{{{$/;"	f
neobundle#util#join_envpath	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#join_envpath(list, orig_path, add_path) "{{{$/;"	f
neobundle#util#join_paths	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#join_paths(path1, path2) "{{{$/;"	f
neobundle#util#join_rtp	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#join_rtp(list, runtimepath, rtp) "{{{$/;"	f
neobundle#util#merge_bundle_files	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#merge_bundle_files(bundles, directory) "{{{$/;"	f
neobundle#util#name_conversion	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#name_conversion(path) "{{{$/;"	f
neobundle#util#print_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#print_bundles(bundles) "{{{$/;"	f
neobundle#util#print_error	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#print_error(expr) "{{{$/;"	f
neobundle#util#redir	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#redir(cmd) abort "{{{$/;"	f
neobundle#util#redraw_echo	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#redraw_echo(expr) "{{{$/;"	f
neobundle#util#redraw_echomsg	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#redraw_echomsg(expr) "{{{$/;"	f
neobundle#util#set_default	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#set_default(var, val, ...)  "{{{$/;"	f
neobundle#util#set_dictionary_helper	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#set_dictionary_helper(variable, keys, pattern) "{{{$/;"	f
neobundle#util#sort_by	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#sort_by(list, expr) "{{{$/;"	f
neobundle#util#sort_human	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#sort_human(filenames) "{{{$/;"	f
neobundle#util#split_envpath	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#split_envpath(path) "{{{$/;"	f
neobundle#util#split_rtp	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#split_rtp(runtimepath) "{{{$/;"	f
neobundle#util#substitute_path_separator	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#substitute_path_separator(path) "{{{$/;"	f
neobundle#util#system	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#system(str, ...) "{{{$/;"	f
neobundle#util#unify_path	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#unify_path(path) "{{{$/;"	f
neobundle#util#uniq	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#uniq(list, ...) "{{{$/;"	f
neobundle#util#writefile	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! neobundle#util#writefile(path, list) "{{{$/;"	f
neobundle#vamkr#get	.vim/bundle/neobundle.vim/autoload/neobundle/vamkr.vim	/^function! neobundle#vamkr#get(name) "{{{$/;"	f
neobundle#vamkr#init	.vim/bundle/neobundle.vim/autoload/neobundle/vamkr.vim	/^function! neobundle#vamkr#init() "{{{$/;"	f
neobundle#vamkr#parse	.vim/bundle/neobundle.vim/autoload/neobundle/vamkr.vim	/^function! neobundle#vamkr#parse(path) "{{{$/;"	f
neobundle#_get_installed_bundles	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^function! neobundle#_get_installed_bundles(bundle_names) "{{{$/;"	f
NeoBundleCheck	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleCheck$/;"	c
NeoBundleCheckUpdate	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleCheckUpdate$/;"	c
NeoBundleClean	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleClean$/;"	c
NeoBundleClearCache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleClearCache$/;"	c
NeoBundleCount	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleCount$/;"	c
NeoBundleDirectInstall	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleDirectInstall$/;"	c
NeoBundleDisable	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleDisable$/;"	c
NeoBundleDocs	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleDocs$/;"	c
NeoBundleExtraEdit	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleExtraEdit$/;"	c
NeoBundleFetch	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleFetch$/;"	c
NeoBundleGC	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleGC$/;"	c
NeoBundleInstall	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleInstall$/;"	c
NeoBundleLazy	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleLazy$/;"	c
NeoBundleList	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleList$/;"	c
NeoBundleLoadCache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleLoadCache$/;"	c
NeoBundleLocal	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=1 -complete=dir NeoBundleLocal$/;"	c
NeoBundleLock	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleLock$/;"	c
NeoBundleLog	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleLog$/;"	c
NeoBundleRecipe	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -nargs=+ NeoBundleRecipe$/;"	c
NeoBundleReinstall	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleReinstall$/;"	c
NeoBundleRemotePlugins	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleRemotePlugins$/;"	c
NeoBundleRollback	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleRollback$/;"	c
NeoBundleSaveCache	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleSaveCache$/;"	c
NeoBundleSource	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleSource$/;"	c
NeoBundleUpdate	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^      \\ NeoBundleUpdate$/;"	c
NeoBundleUpdatesLog	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^command! -bar NeoBundleUpdatesLog$/;"	c
neocomplcache	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  augroup neocomplcache$/;"	a
neocomplcache#add_dictionaries	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#add_dictionaries(dictionaries) "{{{$/;"	f
neocomplcache#async_cache#main	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! neocomplcache#async_cache#main(argv) "{{{$/;"	f
neocomplcache#available_sources	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#available_sources() "{{{$/;"	f
neocomplcache#cache#async_load_from_file	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplcache#cache#async_load_from_tags	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#async_load_from_tags(cache_dir, filename, filetype, mark, is_create_tags) "{{{$/;"	f
neocomplcache#cache#check_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_list_dictionary, ...) "{{{$/;"	f
neocomplcache#cache#check_cache_list	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_cache_list(cache_dir, key, async_cache_dictionary, index_keyword_list, ...) "{{{$/;"	f
neocomplcache#cache#check_old_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#encode_name	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#encode_name(cache_dir, filename)$/;"	f
neocomplcache#cache#filereadable	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#getfilename	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#index_load_from_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#index_load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#list2index	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#list2index(list, dictionary, is_string) "{{{$/;"	f
neocomplcache#cache#load_from_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplcache#cache#readfile	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplcache#cache#save_cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#save_cache_old	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#save_cache_old(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplcache#cache#writefile	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^function! neocomplcache#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplcache#cancel_popup	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#cancel_popup()$/;"	f
neocomplcache#check_completion_length_match	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_completion_length_match(complete_str, completion_length) "{{{$/;"	f
neocomplcache#check_invalid_omnifunc	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplcache#check_match_filter	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#check_match_filter(complete_str) "{{{$/;"	f
neocomplcache#close_popup	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#close_popup()$/;"	f
neocomplcache#commands#_clean	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_clean() "{{{$/;"	f
neocomplcache#commands#_initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_initialize() "{{{$/;"	f
neocomplcache#commands#_lock	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock() "{{{$/;"	f
neocomplcache#commands#_lock_source	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_lock_source(source_name) "{{{$/;"	f
neocomplcache#commands#_set_file_type	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplcache#commands#_toggle_lock	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_toggle_lock() "{{{$/;"	f
neocomplcache#commands#_unlock	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock() "{{{$/;"	f
neocomplcache#commands#_unlock_source	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! neocomplcache#commands#_unlock_source(source_name) "{{{$/;"	f
neocomplcache#complete#auto_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#auto_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#manual_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#sources_manual_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#sources_manual_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#unite_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#unite_complete(findstart, base) "{{{$/;"	f
neocomplcache#complete#_get_complete_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplcache#complete#_get_results	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_get_words	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplcache#complete#_set_results_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplcache#complete#_set_results_words	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^function! neocomplcache#complete#_set_results_words(sources) "{{{$/;"	f
neocomplcache#complete_check	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_check() "{{{$/;"	f
neocomplcache#complete_common_string	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#complete_common_string()$/;"	f
neocomplcache#context_filetype#get	.vim/bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#get(filetype) "{{{$/;"	f
neocomplcache#context_filetype#initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#initialize() "{{{$/;"	f
neocomplcache#context_filetype#set	.vim/bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^function! neocomplcache#context_filetype#set() "{{{$/;"	f
neocomplcache#custom_source	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplcache#define_filter	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#define_filter(filter) "{{{$/;"	f
neocomplcache#define_source	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#define_source(source) "{{{$/;"	f
neocomplcache#dictionary_filter	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#disable_default_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#dup_filter	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#dup_filter(list) "{{{$/;"	f
neocomplcache#escape_match	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#escape_match(str) "{{{$/;"	f
neocomplcache#exists_echodoc	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#exists_echodoc() "{{{$/;"	f
neocomplcache#filetype_complete	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#filters#converter_abbr#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^function! neocomplcache#filters#converter_abbr#define() "{{{$/;"	f
neocomplcache#filters#converter_case#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^function! neocomplcache#filters#converter_case#define() "{{{$/;"	f
neocomplcache#filters#converter_delimiter#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^function! neocomplcache#filters#converter_delimiter#define() "{{{$/;"	f
neocomplcache#filters#converter_nothing#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^function! neocomplcache#filters#converter_nothing#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#define() "{{{$/;"	f
neocomplcache#filters#converter_remove_next_keyword#get_next_keyword	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^function! neocomplcache#filters#converter_remove_next_keyword#get_next_keyword(source_name) "{{{$/;"	f
neocomplcache#filters#dictionary_filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#dictionary_filter(dictionary, complete_str) "{{{$/;"	f
neocomplcache#filters#keyword_filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^function! neocomplcache#filters#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#filters#matcher_fuzzy#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^function! neocomplcache#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplcache#filters#matcher_head#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^function! neocomplcache#filters#matcher_head#define() "{{{$/;"	f
neocomplcache#filters#matcher_old#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^function! neocomplcache#filters#matcher_old#define() "{{{$/;"	f
neocomplcache#filters#sorter_length#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! neocomplcache#filters#sorter_length#define() "{{{$/;"	f
neocomplcache#filters#sorter_nothing#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! neocomplcache#filters#sorter_nothing#define() "{{{$/;"	f
neocomplcache#filters#sorter_rank#define	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! neocomplcache#filters#sorter_rank#define() "{{{$/;"	f
neocomplcache#get_completion_length	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_completion_length(source_name) "{{{$/;"	f
neocomplcache#get_context	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context() "{{{$/;"	f
neocomplcache#get_context_filetype	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype(...) "{{{$/;"	f
neocomplcache#get_context_filetype_range	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_context_filetype_range(...) "{{{$/;"	f
neocomplcache#get_current_neocomplcache	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_current_neocomplcache() "{{{$/;"	f
neocomplcache#get_cur_text	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_cur_text(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_keyword_pattern_end	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplcache#get_next_keyword	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword() "{{{$/;"	f
neocomplcache#get_next_keyword_pattern	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_next_keyword_pattern(...) "{{{$/;"	f
neocomplcache#get_sources_list	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_sources_list(dictionary, filetype) "{{{$/;"	f
neocomplcache#get_source_filetypes	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#get_temporary_directory	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#get_temporary_directory() "{{{$/;"	f
neocomplcache#handler#_change_update_time	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_change_update_time() "{{{$/;"	f
neocomplcache#handler#_do_auto_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplcache#handler#_on_complete_done	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_complete_done() "{{{$/;"	f
neocomplcache#handler#_on_insert_enter	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_enter() "{{{$/;"	f
neocomplcache#handler#_on_insert_leave	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_insert_leave() "{{{$/;"	f
neocomplcache#handler#_on_moved_i	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_moved_i() "{{{$/;"	f
neocomplcache#handler#_on_write_post	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_on_write_post() "{{{$/;"	f
neocomplcache#handler#_restore_update_time	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! neocomplcache#handler#_restore_update_time() "{{{$/;"	f
neocomplcache#has_vimproc	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#has_vimproc() "{{{$/;"	f
neocomplcache#head_match	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#head_match(checkstr, headstr) "{{{$/;"	f
neocomplcache#helper#call_filters	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplcache#helper#call_hook	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplcache#helper#clear_result	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#clear_result() "{{{$/;"	f
neocomplcache#helper#complete_check	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#complete_check() "{{{$/;"	f
neocomplcache#helper#filetype_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplcache#helper#ftdictionary2list	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplcache#helper#get_completion_length	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_completion_length(plugin_name) "{{{$/;"	f
neocomplcache#helper#get_cur_text	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_cur_text() "{{{$/;"	f
neocomplcache#helper#get_sources_list	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_sources_list(...) "{{{$/;"	f
neocomplcache#helper#get_source_filetypes	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplcache#helper#get_syn_name	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplcache#helper#is_enabled_source	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#helper#is_omni_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#is_omni_complete(cur_text) "{{{$/;"	f
neocomplcache#helper#keyword_escape	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#helper#match_word	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplcache#helper#unite_patterns	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^function! neocomplcache#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplcache#init#disable	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#disable() "{{{$/;"	f
neocomplcache#init#enable	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#enable() "{{{$/;"	f
neocomplcache#init#is_enabled	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#is_enabled() "{{{$/;"	f
neocomplcache#init#lazy	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#lazy() "{{{$/;"	f
neocomplcache#init#_autocmds	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_autocmds() "{{{$/;"	f
neocomplcache#init#_current_neocomplcache	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_current_neocomplcache() "{{{$/;"	f
neocomplcache#init#_filter	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filter(filter) "{{{$/;"	f
neocomplcache#init#_filters	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_filters(names) "{{{$/;"	f
neocomplcache#init#_others	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_others() "{{{$/;"	f
neocomplcache#init#_source	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_source(source) "{{{$/;"	f
neocomplcache#init#_sources	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_sources(names) "{{{$/;"	f
neocomplcache#init#_variables	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! neocomplcache#init#_variables() "{{{$/;"	f
neocomplcache#initialize	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#initialize() "{{{$/;"	f
neocomplcache#is_auto_complete	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_complete() "{{{$/;"	f
neocomplcache#is_auto_select	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_auto_select() "{{{$/;"	f
neocomplcache#is_disabled_source	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_disabled_source(source_name) "{{{$/;"	f
neocomplcache#is_enabled	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled() "{{{$/;"	f
neocomplcache#is_enabled_source	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_enabled_source(source_name) "{{{$/;"	f
neocomplcache#is_eskk_convertion	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplcache#is_eskk_enabled	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_eskk_enabled() "{{{$/;"	f
neocomplcache#is_locked	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_locked(...) "{{{$/;"	f
neocomplcache#is_multibyte_input	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplcache#is_plugin_locked	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_plugin_locked(source_name) "{{{$/;"	f
neocomplcache#is_prefetch	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_prefetch() "{{{$/;"	f
neocomplcache#is_sources_complete	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_sources_complete() "{{{$/;"	f
neocomplcache#is_text_mode	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_text_mode() "{{{$/;"	f
neocomplcache#is_win	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_win() "{{{$/;"	f
neocomplcache#is_windows	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#is_windows() "{{{$/;"	f
neocomplcache#keyword_escape	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_escape(complete_str) "{{{$/;"	f
neocomplcache#keyword_filter	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#keyword_filter(list, complete_str) "{{{$/;"	f
neocomplcache#mappings#cancel_popup	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#cancel_popup() "{{{$/;"	f
neocomplcache#mappings#close_popup	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#close_popup() "{{{$/;"	f
neocomplcache#mappings#complete_common_string	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#complete_common_string() "{{{$/;"	f
neocomplcache#mappings#define_default_mappings	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#define_default_mappings() "{{{$/;"	f
neocomplcache#mappings#popup_post	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#popup_post() "{{{$/;"	f
neocomplcache#mappings#smart_close_popup	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#smart_close_popup() "{{{$/;"	f
neocomplcache#mappings#start_manual_complete	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplcache#mappings#start_manual_complete_list	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#start_manual_complete_list(complete_pos, complete_str, candidates) "{{{$/;"	f
neocomplcache#mappings#undo_completion	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^function! neocomplcache#mappings#undo_completion() "{{{$/;"	f
neocomplcache#match_word	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#match_word(...) "{{{$/;"	f
neocomplcache#pack_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#pack_dictionary(list) "{{{$/;"	f
neocomplcache#print_caching	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_caching(string) "{{{$/;"	f
neocomplcache#print_debug	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_debug(expr) "{{{$/;"	f
neocomplcache#print_error	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_error(string) "{{{$/;"	f
neocomplcache#print_warning	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#print_warning(string) "{{{$/;"	f
neocomplcache#set_completion_length	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_completion_length(source_name, length) "{{{$/;"	f
neocomplcache#set_dictionary_helper	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplcache#skip_next_complete	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#skip_next_complete() "{{{$/;"	f
neocomplcache#smart_close_popup	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#smart_close_popup()$/;"	f
neocomplcache#sources#buffer_complete#caching_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_buffer(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_block	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_block() "{{{$/;"	f
neocomplcache#sources#buffer_complete#caching_current_line	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#buffer_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#define() "{{{$/;"	f
neocomplcache#sources#buffer_complete#disable_caching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#disable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#enable_caching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#enable_caching(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#get_frequencies	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#get_frequencies() "{{{$/;"	f
neocomplcache#sources#buffer_complete#output_keyword	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#output_keyword(name) "{{{$/;"	f
neocomplcache#sources#buffer_complete#print_source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! neocomplcache#sources#buffer_complete#print_source(name) "{{{$/;"	f
neocomplcache#sources#dictionary_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#define() "{{{$/;"	f
neocomplcache#sources#dictionary_complete#recaching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! neocomplcache#sources#dictionary_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#filename_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#define() "{{{$/;"	f
neocomplcache#sources#filename_complete#get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! neocomplcache#sources#filename_complete#get_complete_words(complete_str, path) "{{{$/;"	f
neocomplcache#sources#filename_include#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! neocomplcache#sources#filename_include#define() "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_ruby_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_ruby_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#analyze_vim_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#analyze_vim_include_files(lines, path) "{{{$/;"	f
neocomplcache#sources#include_complete#caching_include	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#caching_include(bufname) "{{{$/;"	f
neocomplcache#sources#include_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#define() "{{{$/;"	f
neocomplcache#sources#include_complete#get_current_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_current_include_files() "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_files(bufnumber) "{{{$/;"	f
neocomplcache#sources#include_complete#get_include_tags	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! neocomplcache#sources#include_complete#get_include_tags(bufnumber) "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_buffer() "{{{$/;"	f
neocomplcache#sources#member_complete#caching_current_line	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#caching_current_line() "{{{$/;"	f
neocomplcache#sources#member_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! neocomplcache#sources#member_complete#define() "{{{$/;"	f
neocomplcache#sources#omni_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! neocomplcache#sources#omni_complete#define() "{{{$/;"	f
neocomplcache#sources#snippets_complete#define	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! neocomplcache#sources#snippets_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#define() "{{{$/;"	f
neocomplcache#sources#syntax_complete#recaching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! neocomplcache#sources#syntax_complete#recaching(filetype) "{{{$/;"	f
neocomplcache#sources#tags_complete#caching_tags	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#caching_tags(force) "{{{$/;"	f
neocomplcache#sources#tags_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! neocomplcache#sources#tags_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#define	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#define() "{{{$/;"	f
neocomplcache#sources#vim_complete#get_command	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_command(cur_text) "{{{$/;"	f
neocomplcache#sources#vim_complete#get_cur_text	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! neocomplcache#sources#vim_complete#get_cur_text() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#augroup	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#augroup(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#autocmd_args	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#autocmd_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#buffer	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#buffer(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#colorscheme_args	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#colorscheme_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#command_args	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#command_args(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#custom	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#custom(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#customlist	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#customlist(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#dir	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#dir(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#environment	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#environment(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#event	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#event(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#execute	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#execute(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expand	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expand(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#expression	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#expression(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#feature	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#feature(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#file	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#file(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#filetype	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#filetype(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#function	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#function(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_command_completion	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_command_completion(command_name, cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#get_completion_name	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#get_completion_name(command_name) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#help	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#help(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#highlight	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#highlight(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#let	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#let(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#mapping	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#mapping(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#menu	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#menu(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#on_filetype	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#on_filetype() "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#option	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#option(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#recaching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#recaching(bufname) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#shellcmd	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#shellcmd(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#tag_listfiles	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#tag_listfiles(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var(cur_text, complete_str) "{{{$/;"	f
neocomplcache#sources#vim_complete#helper#var_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! neocomplcache#sources#vim_complete#helper#var_dictionary(cur_text, complete_str) "{{{$/;"	f
neocomplcache#start_manual_complete	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#start_manual_complete(...)$/;"	f
neocomplcache#system	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#system(...) "{{{$/;"	f
neocomplcache#undo_completion	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#undo_completion()$/;"	f
neocomplcache#unpack_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#unpack_dictionary(dict) "{{{$/;"	f
neocomplcache#util#convert2list	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#convert2list(expr) "{{{$/;"	f
neocomplcache#util#disable_default_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplcache#util#dup_filter	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#dup_filter(list) "{{{$/;"	f
neocomplcache#util#escape_pattern	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#escape_pattern(...) "{{{$/;"	f
neocomplcache#util#expand	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#expand(path) "{{{$/;"	f
neocomplcache#util#get_last_status	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#get_last_status(...) "{{{$/;"	f
neocomplcache#util#glob	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#glob(pattern, ...) "{{{$/;"	f
neocomplcache#util#has_lua	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_lua() "{{{$/;"	f
neocomplcache#util#has_vimproc	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc() "{{{$/;"	f
neocomplcache#util#has_vimproc	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#has_vimproc(...) "{{{$/;"	f
neocomplcache#util#iconv	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#iconv(...) "{{{$/;"	f
neocomplcache#util#is_mac	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_mac(...) "{{{$/;"	f
neocomplcache#util#is_sudo	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_sudo() "{{{$/;"	f
neocomplcache#util#is_windows	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#is_windows(...) "{{{$/;"	f
neocomplcache#util#join_rtp	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#join_rtp(list) "{{{$/;"	f
neocomplcache#util#mb_strlen	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#mb_strlen(...) "{{{$/;"	f
neocomplcache#util#set_default	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplcache#util#set_default_dictionary	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplcache#util#set_dictionary_helper	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#set_dictionary_helper(...) "{{{$/;"	f
neocomplcache#util#sort_by	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#sort_by(...) "{{{$/;"	f
neocomplcache#util#split_rtp	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#split_rtp(...) "{{{$/;"	f
neocomplcache#util#strchars	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strchars(...) "{{{$/;"	f
neocomplcache#util#strwidthpart	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart(...) "{{{$/;"	f
neocomplcache#util#strwidthpart_reverse	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplcache#util#substitute_path_separator	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#substitute_path_separator(...) "{{{$/;"	f
neocomplcache#util#system	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#system(...) "{{{$/;"	f
neocomplcache#util#truncate	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate(...) "{{{$/;"	f
neocomplcache#util#truncate_smart	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#truncate_smart(...) "{{{$/;"	f
neocomplcache#util#uniq	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(...) "{{{$/;"	f
neocomplcache#util#uniq	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#uniq(list) "{{{$/;"	f
neocomplcache#util#wcswidth	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^function! neocomplcache#util#wcswidth(...) "{{{$/;"	f
neocomplcache#variables#get_custom	.vim/bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_custom() "{{{$/;"	f
neocomplcache#variables#get_filters	.vim/bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_filters() "{{{$/;"	f
neocomplcache#variables#get_frequencies	.vim/bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_frequencies() "{{{$/;"	f
neocomplcache#variables#get_sources	.vim/bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^function! neocomplcache#variables#get_sources() "{{{$/;"	f
neocomplcache#within_comment	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^function! neocomplcache#within_comment() "{{{$/;"	f
NeoComplCacheCachingBuffer	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheCachingBuffer$/;"	c
NeoComplCacheCachingDictionary	.vim/bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^      \\ NeoComplCacheCachingDictionary$/;"	c
NeoComplCacheCachingInclude	.vim/bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^command! -nargs=? -complete=buffer NeoComplCacheCachingInclude$/;"	c
NeoComplCacheCachingSyntax	.vim/bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^      \\ NeoComplCacheCachingSyntax$/;"	c
NeoComplCacheCachingTags	.vim/bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^      \\ NeoComplCacheCachingTags$/;"	c
NeoComplCacheClean	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheClean$/;"	c
NeoComplCacheDisable	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheDisable$/;"	c
NeoComplCacheDisableCaching	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheDisableCaching$/;"	c
NeoComplCacheEnable	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheEnable$/;"	c
NeoComplCacheEnableCaching	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheEnableCaching$/;"	c
NeoComplCacheLock	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheLock$/;"	c
NeoComplCacheLockSource	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheLockSource$/;"	c
NeoComplcacheOmniFuncs	.vim/conf.d/plugins/neocomplcache.vim	/^	augroup NeoComplcacheOmniFuncs$/;"	a
NeoComplCacheOutputKeyword	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCacheOutputKeyword$/;"	c
NeoComplCachePrintSource	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^      \\ NeoComplCachePrintSource$/;"	c
NeoComplCacheSetFileType	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar -complete=filetype NeoComplCacheSetFileType$/;"	c
NeoComplCacheSetFileType	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^  command! -nargs=1 -bar NeoComplCacheSetFileType$/;"	c
NeoComplCacheToggle	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheToggle$/;"	c
NeoComplCacheUnlock	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=0 -bar NeoComplCacheUnlock$/;"	c
NeoComplCacheUnlockSource	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^command! -nargs=1 -bar NeoComplCacheUnlockSource$/;"	c
neocomplcache_source.gather_candidates	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.gather_candidates(args, context) "{{{$/;"	f
neocomplcache_source.hooks.on_init	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:neocomplcache_source.hooks.on_init(args, context) "{{{$/;"	f
neocomplete#sources#neosnippet#define	.vim/bundle/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! neocomplete#sources#neosnippet#define() "{{{$/;"	f
NeoCompleteOmniFuncs	.vim/conf.d/plugins/neocomplete.vim	/^	augroup NeoCompleteOmniFuncs$/;"	a
neosnippet	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^augroup neosnippet "{{{$/;"	a
neosnippet#anonymous	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#anonymous(snippet) "{{{$/;"	f
neosnippet#commands#_clear_markers	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_clear_markers() "{{{$/;"	f
neosnippet#commands#_complete_target_snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_complete_target_snippets(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_edit	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit(args) "{{{$/;"	f
neosnippet#commands#_edit_complete	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_edit_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_filetype_complete	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neosnippet#commands#_make_cache	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_make_cache(filetype) "{{{$/;"	f
neosnippet#commands#_source	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^function! neosnippet#commands#_source(filename) "{{{$/;"	f
neosnippet#expand	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expand(trigger) "{{{$/;"	f
neosnippet#expandable	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable() "{{{$/;"	f
neosnippet#expandable_or_jumpable	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#expandable_or_jumpable() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_mirror_placeholder_marker_substitute_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_mirror_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_default_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_placeholder_marker_substitute_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_marker_substitute_pattern() "{{{$/;"	f
neosnippet#get_placeholder_target_marker_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_placeholder_target_marker_pattern() "{{{$/;"	f
neosnippet#get_runtime_snippets_directory	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_runtime_snippets_directory() "{{{$/;"	f
neosnippet#get_snippets_directory	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_snippets_directory() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_default_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_default_pattern() "{{{$/;"	f
neosnippet#get_sync_placeholder_marker_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_sync_placeholder_marker_pattern() "{{{$/;"	f
neosnippet#get_user_snippets_directory	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#get_user_snippets_directory() "{{{$/;"	f
neosnippet#handlers#_complete_done	.vim/bundle/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_complete_done() "{{{$/;"	f
neosnippet#handlers#_cursor_moved	.vim/bundle/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_cursor_moved() "{{{$/;"	f
neosnippet#handlers#_get_in_paren	.vim/bundle/neosnippet.vim/autoload/neosnippet/handlers.vim	/^function! neosnippet#handlers#_get_in_paren(str) abort "{{{$/;"	f
neosnippet#helpers#delete_selected_text	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#delete_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_completion_snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_completion_snippets() "{{{$/;"	f
neosnippet#helpers#get_cursor_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_cursor_snippet(snippets, cur_text) "{{{$/;"	f
neosnippet#helpers#get_filetype	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_filetype() "{{{$/;"	f
neosnippet#helpers#get_selected_text	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_selected_text(type, ...) "{{{$/;"	f
neosnippet#helpers#get_snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets() "{{{$/;"	f
neosnippet#helpers#get_snippets_directory	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#get_snippets_directory() "{{{$/;"	f
neosnippet#helpers#substitute_selected_text	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^function! neosnippet#helpers#substitute_selected_text(type, text) "{{{$/;"	f
neosnippet#init#check	.vim/bundle/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#check() "{{{$/;"	f
neosnippet#init#_initialize	.vim/bundle/neosnippet.vim/autoload/neosnippet/init.vim	/^function! neosnippet#init#_initialize() "{{{$/;"	f
neosnippet#jumpable	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^function! neosnippet#jumpable() "{{{$/;"	f
neosnippet#mappings#expandable	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable() "{{{$/;"	f
neosnippet#mappings#expandable_or_jumpable	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expandable_or_jumpable() "{{{$/;"	f
neosnippet#mappings#expand_impl	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_impl()$/;"	f
neosnippet#mappings#expand_or_jump_impl	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#expand_or_jump_impl()$/;"	f
neosnippet#mappings#jumpable	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jumpable() "{{{$/;"	f
neosnippet#mappings#jump_impl	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_impl()$/;"	f
neosnippet#mappings#jump_or_expand_impl	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#jump_or_expand_impl()$/;"	f
neosnippet#mappings#_anonymous	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_anonymous(snippet) "{{{$/;"	f
neosnippet#mappings#_clear_select_mode_mappings	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_clear_select_mode_mappings() "{{{$/;"	f
neosnippet#mappings#_expand	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand(trigger) "{{{$/;"	f
neosnippet#mappings#_expand_target	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target() "{{{$/;"	f
neosnippet#mappings#_expand_target_trigger	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_expand_target_trigger(trigger) "{{{$/;"	f
neosnippet#mappings#_register_oneshot_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_register_oneshot_snippet() "{{{$/;"	f
neosnippet#mappings#_trigger	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! neosnippet#mappings#_trigger(function) "{{{$/;"	f
neosnippet#parser#_initialize_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet(dict, path, line, pattern, name) "{{{$/;"	f
neosnippet#parser#_initialize_snippet_options	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_initialize_snippet_options() "{{{$/;"	f
neosnippet#parser#_parse_snippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippet(filename, trigger) "{{{$/;"	f
neosnippet#parser#_parse_snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! neosnippet#parser#_parse_snippets(filename) "{{{$/;"	f
neosnippet#util#escape_pattern	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#escape_pattern(...) "{{{$/;"	f
neosnippet#util#expand	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#expand(path) "{{{$/;"	f
neosnippet#util#get_cur_text	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_cur_text() "{{{$/;"	f
neosnippet#util#get_last_status	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_last_status(...) "{{{$/;"	f
neosnippet#util#get_vital	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#get_vital() "{{{$/;"	f
neosnippet#util#has_vimproc	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#has_vimproc(...) "{{{$/;"	f
neosnippet#util#iconv	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#iconv(...) "{{{$/;"	f
neosnippet#util#is_mac	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_mac(...) "{{{$/;"	f
neosnippet#util#is_sudo	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_sudo() "{{{$/;"	f
neosnippet#util#is_windows	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#is_windows(...) "{{{$/;"	f
neosnippet#util#option2list	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#option2list(str) "{{{$/;"	f
neosnippet#util#parse_options	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#parse_options(args, options_list) "{{{$/;"	f
neosnippet#util#print_error	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#print_error(string) "{{{$/;"	f
neosnippet#util#set_default	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_default(var, val, ...)  "{{{$/;"	f
neosnippet#util#set_dictionary_helper	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#set_dictionary_helper(...) "{{{$/;"	f
neosnippet#util#strwidthpart	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#strwidthpart(...) "{{{$/;"	f
neosnippet#util#substitute_path_separator	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#substitute_path_separator(...) "{{{$/;"	f
neosnippet#util#system	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#system(...) "{{{$/;"	f
neosnippet#util#truncate	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^function! neosnippet#util#truncate(...) "{{{$/;"	f
neosnippet#variables#clear_expand_stack	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#clear_expand_stack() "{{{$/;"	f
neosnippet#variables#current_neosnippet	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#current_neosnippet() "{{{$/;"	f
neosnippet#variables#data_dir	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#data_dir() "{{{$/;"	f
neosnippet#variables#expand_stack	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#expand_stack() "{{{$/;"	f
neosnippet#variables#runtime_dir	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#runtime_dir() "{{{$/;"	f
neosnippet#variables#set_snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#set_snippets(list) "{{{$/;"	f
neosnippet#variables#snippets	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets() "{{{$/;"	f
neosnippet#variables#snippets_dir	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^function! neosnippet#variables#snippets_dir() "{{{$/;"	f
neosnippet#view#_expand	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_expand(cur_text, col, trigger_name) "{{{$/;"	f
neosnippet#view#_get_snippet_range	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_get_snippet_range(begin_line, begin_patterns, end_line, end_patterns) "{{{$/;"	f
neosnippet#view#_insert	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_insert(snippet, options, cur_text, col) "{{{$/;"	f
neosnippet#view#_jump	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_jump(cur_text, col) "{{{$/;"	f
neosnippet#view#_search_snippet_range	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! neosnippet#view#_search_snippet_range(start, end, cnt, ...) "{{{$/;"	f
NeoSnippetClearMarkers	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^command! NeoSnippetClearMarkers$/;"	c
NeoSnippetEdit	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetEdit$/;"	c
NeoSnippetMakeCache	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetMakeCache$/;"	c
NeoSnippetSource	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^      \\ NeoSnippetSource$/;"	c
neovim	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^import neovim$/;"	i
nested_app_ebins	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
NewTags	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
new_file	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:new_file() "{{{$/;"	f
NextNormalWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
next_chars_match	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:next_chars_match(regex) " {{{1$/;"	f
No numbers in backmatter 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\backmatter$/;"	c
No numbers in backmatter 1	.vim/bundle/vimtex/test/feature/table-of-contents/backmatter.tex	/^\\chapter{No numbers in backmatter 1}$/;"	c
No numbers in backmatter 2	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{Section 2}$/;"	c
No numbers in backmatter 2	.vim/bundle/vimtex/test/feature/table-of-contents/backmatter.tex	/^\\section{Section 2}$/;"	c
NormalTag.getPrototype	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
not  	.vim/bundle/vim-css3-syntax/test/test.css	/^  (display: auto) {$/;"	s
nowait_expr	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_expr(map) "{{{$/;"	f
nowait_map	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:nowait_map(mode) "{{{$/;"	f
nowait_nmap	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:nowait_nmap() "{{{$/;"	f
NO_EXEC_NEOBUNDLE_INSTALL	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^:NO_EXEC_NEOBUNDLE_INSTALL$/;"	l
NO_EXEC_NEOBUNDLE_INSTALL	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^:NO_EXEC_NEOBUNDLE_INSTALL$/;"	l
nr2byte	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:nr2byte(nr)$/;"	f
nr2byte	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2byte	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:nr2enc_char(charcode)$/;"	f
nr2enc_char	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2enc_char	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nr2hex	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:nr2hex(nr)$/;"	f
nr2hex	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nr2hex	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
nsplit	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:nsplit(expr, n, ...)$/;"	f
nsplit	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
nsplit	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
number_increment	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:number_increment(level) " {{{1$/;"	f
number_reset	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:number_reset(part) " {{{1$/;"	f
OBJS	.tools/makefile	/^OBJS    = $(subst $(SRC_DIR),$(OBJ_DIR), $(SOURCES:.cpp=.o))$/;"	m
OBJS	.vim/bundle/vimproc.vim/make_msvc.mak	/^OBJS = $(OUTDIR)\/proc_w32.obj$/;"	m
OBJ_DIR	.tools/makefile	/^OBJ_DIR = .\/obj$/;"	m
of	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:of(command, dir, initial_queries) abort$/;"	f
on_BufReadCmd	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:on_BufReadCmd(source_name, source_args, context)  "{{{1$/;"	f
on_BufWriteCmd	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:on_BufWriteCmd(source_name, source_args, context)  "{{{1$/;"	f
on_command_prefix	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:on_command_prefix() "{{{$/;"	f
on_complete_finish	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:on_complete_finish(context, result)$/;"	f
on_double_click	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:on_double_click() "{{{$/;"	f
on_entering_submode	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:on_entering_submode(submode)  "{{{2$/;"	f
on_executing_action	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:on_executing_action(submode)  "{{{2$/;"	f
on_exit	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:on_exit(job_id, data)$/;"	f
on_exit	.vim/bundle/vim-go/autoload/go/term.vim	/^function! s:on_exit(job_id, data)$/;"	f
on_FileAppendCmd	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:on_FileAppendCmd(source_name, source_args, context)  "{{{1$/;"	f
on_FileReadCmd	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:on_FileReadCmd(source_name, source_args, context)  "{{{1$/;"	f
on_filetype	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:on_filetype() "{{{$/;"	f
on_FileWriteCmd	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:on_FileWriteCmd(source_name, source_args, context)  "{{{$/;"	f
on_function	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:on_function() "{{{$/;"	f
on_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:on_gather_candidates(direction, context, start, max) "{{{$/;"	f
on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:on_init(args, context, name) "{{{$/;"	f
on_insert	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:on_insert() "{{{$/;"	f
on_leaving_submode	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:on_leaving_submode(submode)  "{{{2$/;"	f
on_path	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:on_path(path, event) "{{{$/;"	f
on_post_filter	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def on_post_filter(self, context):$/;"	m	class:Source
on_source	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:on_source(bundle) "{{{$/;"	f
on_stderr	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stderr(job_id, data)$/;"	f
on_stderr	.vim/bundle/vim-go/autoload/go/term.vim	/^function! s:on_stderr(job_id, data)$/;"	f
on_stdout	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:on_stdout(job_id, data)$/;"	f
on_stdout	.vim/bundle/vim-go/autoload/go/term.vim	/^function! s:on_stdout(job_id, data)$/;"	f
on_vim_enter	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:on_vim_enter() "{{{$/;"	f
open	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
open	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open(candidate) "{{{$/;"	f
open	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^function! s:open(filename) abort "{{{$/;"	f
open	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^function! s:open(filename) abort "{{{$/;"	f
open	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
open	.vim/bundle/vimproc.vim/src/proc_w32.c	182;"	d	file:
OpenFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
openpty	.vim/bundle/vimproc.vim/src/ptytty.c	/^openpty(int *amaster, int *aslave, char *name,$/;"	f
OpenWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
open_current_line	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! s:open_current_line(is_highlight) "{{{$/;"	f
open_file_in_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:open_file_in_another_vimfiler() "{{{$/;"	f
OPEN_MAX	.vim/bundle/vimproc.vim/src/fakepoll.h	26;"	d
open_result_window	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:open_result_window(config, session) abort$/;"	f
operator#clang_format#do	.vim/bundle/vim-clang-format/autoload/operator/clang_format.vim	/^function! operator#clang_format#do(motion_wise)$/;"	f
or	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:or(xs)$/;"	f
or	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:or(xs)$/;"	f
or	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or  	.vim/bundle/vim-css3-syntax/test/test.css	/^  (display: auto) not$/;"	s
ORIGIN_VIM	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^:ORIGIN_VIM$/;"	l
ORIGIN_VIM	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^:ORIGIN_VIM$/;"	l
os	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
os	.vim/bundle/vimproc.vim/tools/fork.py	/^import os$/;"	i
Other	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{Acknowledgements}$/;"	c
Other	.vim/bundle/vimtex/test/feature/table-of-contents/frontmatter.tex	/^\\section{Acknowledgements}$/;"	c
Other frontmatter chapter	.vim/bundle/vimtex/test/issue/241/preamble/preamble.tex	/^\\section*{Acknowledgements}$/;"	c
Other text $ Gamma r	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{Another test subsection}$/;"	b
Other text $ Gamma r	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsection{Another test subsection}$/;"	b
Other text $ Gamma r	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsection{Another test subsection}$/;"	b
OUTDIR	.vim/bundle/vimproc.vim/make_msvc.mak	/^OUTDIR = $(SRCDIR)\\obj$(CPU)$/;"	m
output	.vim/bundle/vim-css3-syntax/test/test.css	/^output,$/;"	s
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^function! s:outputter.finish(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.init	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^function! s:outputter.init(session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/null.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^function! s:outputter.output(data, session) abort$/;"	f
outputter.start	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:outputter.start(session) abort$/;"	f
outputter.start	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^function! s:outputter.start(session) abort$/;"	f
outputter.validate	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^function! s:outputter.validate() abort$/;"	f
output_not_readable	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:output_not_readable(output) " {{{1$/;"	f
p	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	s
p	.vim/bundle/vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	s
padding_by_displaywidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
padding_by_displaywidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
pad_between_letters	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:pad_between_letters(str, width, ...)$/;"	f
pad_between_letters	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_between_letters	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:pad_both_sides(str, width, ...)$/;"	f
pad_both_sides	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_both_sides	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:pad_left(str, width, ...)$/;"	f
pad_left	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_left	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:pad_right(str, width, ...)$/;"	f
pad_right	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
pad_right	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
parse	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse(snippets_file) "{{{$/;"	f
parseHeader	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:parseHeader(headers)$/;"	f
parser	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! s:parser(file, detailed, recursive, re, re_parser) " {{{1$/;"	f
ParseTagline	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
parse_arg	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! s:parse_arg(arg) "{{{$/;"	f
parse_argline	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:parse_argline(argline) abort$/;"	f
parse_back_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_back_quote(script, i) "{{{$/;"	f
parse_bib_input	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:parse_bib_input(line) " {{{1$/;"	f
parse_block	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_block(script) "{{{$/;"	f
parse_caption	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:parse_caption(line)$/;"	f
parse_caption_frame	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:parse_caption_frame(line)$/;"	f
parse_caption_table	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:parse_caption_table(line)$/;"	f
parse_cmdline	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_cmdline(cmdline) "{{{$/;"	f
parse_complete_result	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:parse_complete_result(output)$/;"	f
parse_complete_result	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:parse_complete_result(output)$/;"	f
parse_complete_result_line	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^function! s:parse_complete_result_line(line)$/;"	f
parse_complete_word	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:parse_complete_word(word)$/;"	f
parse_complete_word	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^function! s:parse_complete_word(word)$/;"	f
parse_double_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_double_quote(script, i) "{{{$/;"	f
parse_equal	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_equal(script) "{{{$/;"	f
parse_ignore_file	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! s:parse_ignore_file(file, prefix) "{{{$/;"	f
parse_keyword	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:parse_keyword(str)$/;"	f
parse_label	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:parse_label()$/;"	f
parse_line_sec	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:parse_line_sec(file, lnum, line) " {{{1$/;"	f
parse_module_option	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:parse_module_option(module, argline) abort$/;"	f
parse_options	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^function! s:parse_options(opts) "{{{$/;"	f
parse_other_pattern	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:parse_other_pattern(protocol, path, opts) "{{{$/;"	f
parse_path	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:parse_path(args) "{{{$/;"	f
parse_redirection	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_redirection(script) "{{{$/;"	f
parse_result	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^function! s:parse_result(result)$/;"	f
parse_single_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_single_quote(script, i) "{{{$/;"	f
parse_snippet_name	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:parse_snippet_name(snippets_file, line, linenr, dup_check) "{{{$/;"	f
parse_tilde	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_tilde(script) "{{{$/;"	f
parse_toc	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! s:parse_toc() " {{{1$/;"	f
parse_variables	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_variables(script) "{{{$/;"	f
parse_wildcard	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:parse_wildcard(script) "{{{$/;"	f
partition	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
partition	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:partition(f, xs)$/;"	f
partition	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
paste	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! s:paste(word, command, opt) "{{{$/;"	f
path	.vim/bundle/neobundle.vim/test/commands.vim	/^let path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
path	.vim/bundle/neobundle.vim/test/lock.vim	/^let path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
path	.vim/bundle/neobundle.vim/test/recipe.vim	/^let path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
path	.vim/bundle/neobundle.vim/test/sample.vim	/^let path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
path	.vim/bundle/neobundle.vim/test/source.vim	/^let path = expand('~\/test-bundle\/'.fnamemodify(expand('<sfile>'), ':t:r'))$/;"	v
path2directory	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2directory	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:path2directory(path)$/;"	f
path2directory	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2directory	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path2project_directory	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:path2project_directory(path, ...)$/;"	f
path2project_directory	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path2project_directory	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path_extensions	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:path_extensions() abort$/;"	f
path_extensions	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_extensions()$/;"	f
path_separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:path_separator() abort$/;"	f
path_separator	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:path_separator()$/;"	f
permutations	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
pgroup_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:pgroup_open(statements, is_pty, npipe) "{{{$/;"	f
phrasing_elements	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'picture', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data', 'content', 'shadow']$/;"	v
pid	.vim/bundle/vimproc.vim/tools/fork.py	/^pid = os.fork()$/;"	v
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^            PLATFORM = mingw32$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^            PLATFORM = mingw64$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^        PLATFORM = bsd$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^        PLATFORM = cygwin$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^        PLATFORM = mac$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^        PLATFORM = sunos$/;"	m
PLATFORM	.vim/bundle/vimproc.vim/Makefile	/^        PLATFORM = unix$/;"	m
plineopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:plineopen(npipe, commands, is_pty) "{{{$/;"	f
plugin	.vim/bundle/unite.vim/autoload/unite.vim	/^augroup plugin-unite$/;"	a
plugin	.vim/bundle/unite.vim/plugin/unite/buffer.vim	/^augroup plugin-unite-source-buffer$/;"	a
plugin	.vim/bundle/unite.vim/plugin/unite/window.vim	/^augroup plugin-unite-source-window$/;"	a
plugin	.vim/bundle/vim-clang-format/plugin/clang_format.vim	/^augroup plugin-clang-format-auto-format$/;"	a
plugin	.vim/bundle/vim-marching/after/ftplugin/c/marching.vim	/^augroup plugin-marching-filetype$/;"	a
plugin	.vim/bundle/vim-marching/after/ftplugin/cpp/marching.vim	/^augroup plugin-marching-filetype$/;"	a
plugin	.vim/bundle/vim-marching/autoload/marching.vim	/^augroup plugin-marching$/;"	a
plugin	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^augroup plugin-marching$/;"	a
plugin	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^augroup plugin-quickrun-concurrent-process$/;"	a
plugin	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^augroup plugin-quickrun-process-manager$/;"	a
plugin	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^augroup plugin-quickrun-vimproc$/;"	a
poll	.vim/bundle/vimproc.vim/src/fakepoll.h	/^int poll(struct pollfd *pollSet, int pollCount, int pollTimeout)$/;"	f
POLLERR	.vim/bundle/vimproc.vim/src/fakepoll.h	39;"	d
pollfd	.vim/bundle/vimproc.vim/src/fakepoll.h	/^typedef struct pollfd {$/;"	s
pollfd_t	.vim/bundle/vimproc.vim/src/fakepoll.h	/^} pollfd_t;$/;"	t	typeref:struct:pollfd
POLLHUP	.vim/bundle/vimproc.vim/src/fakepoll.h	50;"	d
POLLIN	.vim/bundle/vimproc.vim/src/fakepoll.h	37;"	d
POLLNORM	.vim/bundle/vimproc.vim/src/fakepoll.h	42;"	d
POLLNVAL	.vim/bundle/vimproc.vim/src/fakepoll.h	51;"	d
POLLOUT	.vim/bundle/vimproc.vim/src/fakepoll.h	38;"	d
POLLPRI	.vim/bundle/vimproc.vim/src/fakepoll.h	43;"	d
POLLRDBAND	.vim/bundle/vimproc.vim/src/fakepoll.h	45;"	d
POLLRDNORM	.vim/bundle/vimproc.vim/src/fakepoll.h	44;"	d
POLLWRBAND	.vim/bundle/vimproc.vim/src/fakepoll.h	47;"	d
POLLWRNORM	.vim/bundle/vimproc.vim/src/fakepoll.h	46;"	d
pop	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:pop(list)$/;"	f
pop	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:pop(list)$/;"	f
pop	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:pop(list) abort$/;"	f
popd	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:popd() "{{{$/;"	f
popup_shell	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:popup_shell() "{{{$/;"	f
pos	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            let pos = getpos('.')$/;"	v
pos	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let pos = getpos('.')$/;"	v
position_restore	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:position_restore() dict " {{{1$/;"	f
position_save	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:position_save() dict " {{{1$/;"	f
post	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:post(url, ...)$/;"	f
post_rename_callback	.vim/bundle/vimfiler/autoload/vimfiler/exrename.vim	/^function! s:post_rename_callback(exrename)$/;"	f
post_wandbox	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^function! s:post_wandbox(query)$/;"	f
Preface	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\frontmatter$/;"	c
Preface	.vim/bundle/vimtex/test/feature/table-of-contents/frontmatter.tex	/^\\chapter{Preface}$/;"	c
Preface	.vim/bundle/vimtex/test/issue/241/preamble/preamble.tex	/^\\chapter*{Preface}$/;"	c
PrevNonBlankNonString	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
pre_trigger	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:pre_trigger() "{{{$/;"	f
PrintHelp	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
print_candidate	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_candidate() "{{{$/;"	f
print_dict	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:print_dict(dict, ...) " {{{1$/;"	f
print_dict_sort_1	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:print_dict_sort_1(i1, i2) " {{{1$/;"	f
print_dict_sort_2	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! s:print_dict_sort_2(i1, i2) " {{{1$/;"	f
print_entries	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:print_entries() dict " {{{1$/;"	f
print_error	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:print_error(message)$/;"	f
print_error	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:print_error(string)$/;"	f
print_filename	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:print_filename() "{{{$/;"	f
print_function	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	.vim/bundle/syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
print_help	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:print_help() dict " {{{1$/;"	f
print_message_log	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:print_message_log() "{{{$/;"	f
print_snippets_complete_error	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^function! s:print_snippets_complete_error()$/;"	f
process	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:process(cmd)$/;"	f
process	.vim/bundle/vimproc.vim/tools/leak_check.vim	/^  let process = vimproc#pgroup_open('ls')$/;"	v
process	.vim/bundle/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('ls && ls')$/;"	v
process	.vim/bundle/vimproc.vim/tools/leak_check2.vim	/^let process = vimproc#pgroup_open('python ' . pwd . '\/fork.py')$/;"	v
process.get	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^	function! process.get()$/;"	f
ProcessFile	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
product	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:product(lists) abort$/;"	f
progress	.vim/bundle/vim-css3-syntax/test/test.css	/^progress,$/;"	s
PseudoTag.isPseudoTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
ptsname_compat	.vim/bundle/vimproc.vim/src/ptytty.c	/^ptsname_compat(int fd, char **buf)$/;"	f	file:
push	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:push(list, val)$/;"	f
push	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:push(list, val)$/;"	f
push	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
pushd	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:pushd() "{{{$/;"	f
PWD	.vim/bundle/html5.vim/Makefile	/^PWD=`pwd`$/;"	m
PWD	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^PWD=`pwd`$/;"	m
pwd	.vim/bundle/vimproc.vim/tools/leak_check2.vim	/^let pwd = fnamemodify(expand('<sfile>'), ':p:h')$/;"	v
Python2or3	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^    command! -nargs=1 Python2or3 python <args>$/;"	c
Python2or3	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^    command! -nargs=1 Python2or3 python3 <args>$/;"	c
qflist_to_unite	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! s:qflist_to_unite(val)$/;"	f
qq	.vim/conf.d/keymapping/misc.keymapping.vim	/^nnoremap qq :qall<CR>$/;"	m
queue	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:queue(label, queries) abort$/;"	f
QuickRun	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^command! -nargs=* -range=0 -complete=customlist,quickrun#complete QuickRun$/;"	c
quickrun#command	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#command(config, use_range, line1, line2) abort$/;"	f
quickrun#complete	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#complete(lead, cmd, pos) abort$/;"	f
quickrun#config	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#config(config) abort$/;"	f
quickrun#execute	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#execute(cmd) abort$/;"	f
quickrun#expand	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#expand(input) abort$/;"	f
quickrun#get_module	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#get_module(kind, ...) abort$/;"	f
quickrun#hook#back_buffer#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_buffer.vim	/^function! quickrun#hook#back_buffer#new()$/;"	f
quickrun#hook#back_tabpage#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_tabpage.vim	/^function! quickrun#hook#back_tabpage#new()$/;"	f
quickrun#hook#back_window#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_window.vim	/^function! quickrun#hook#back_window#new()$/;"	f
quickrun#hook#cd#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^function! quickrun#hook#cd#new() abort$/;"	f
quickrun#hook#close_buffer#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^function! quickrun#hook#close_buffer#new()$/;"	f
quickrun#hook#close_quickfix#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_quickfix.vim	/^function! quickrun#hook#close_quickfix#new()$/;"	f
quickrun#hook#close_unite_quickfix#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_unite_quickfix.vim	/^function! quickrun#hook#close_unite_quickfix#new()$/;"	f
quickrun#hook#copen#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^function! quickrun#hook#copen#new()$/;"	f
quickrun#hook#echo#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/echo.vim	/^function! quickrun#hook#echo#new()$/;"	f
quickrun#hook#eval#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/eval.vim	/^function! quickrun#hook#eval#new() abort$/;"	f
quickrun#hook#extend_config#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/extend_config.vim	/^function! quickrun#hook#extend_config#new()$/;"	f
quickrun#hook#hier_update#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/hier_update.vim	/^function! quickrun#hook#hier_update#new()$/;"	f
quickrun#hook#hi_hi_hi_#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/hi_hi_hi_.vim	/^function! quickrun#hook#hi_hi_hi_#new()$/;"	f
quickrun#hook#inu#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/inu.vim	/^function! quickrun#hook#inu#new()$/;"	f
quickrun#hook#koshikoshi#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/koshikoshi.vim	/^function! quickrun#hook#koshikoshi#new()$/;"	f
quickrun#hook#neco#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/neco.vim	/^function! quickrun#hook#neco#new()$/;"	f
quickrun#hook#nuko#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/nuko.vim	/^function! quickrun#hook#nuko#new()$/;"	f
quickrun#hook#output_command#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_command.vim	/^function! quickrun#hook#output_command#new()$/;"	f
quickrun#hook#output_config#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_config.vim	/^function! quickrun#hook#output_config#new()$/;"	f
quickrun#hook#output_encode#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/output_encode.vim	/^function! quickrun#hook#output_encode#new() abort$/;"	f
quickrun#hook#qfsigns_update#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/qfsigns_update.vim	/^function! quickrun#hook#qfsigns_update#new()$/;"	f
quickrun#hook#qfstatusline_update#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/qfstatusline_update.vim	/^function! quickrun#hook#qfstatusline_update#new()$/;"	f
quickrun#hook#quickfix_replace_tempname_to_bufnr#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^function! quickrun#hook#quickfix_replace_tempname_to_bufnr#new()$/;"	f
quickrun#hook#quickfix_replate_tempname_to_bufnr#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^function! quickrun#hook#quickfix_replate_tempname_to_bufnr#new()$/;"	f
quickrun#hook#quickfix_status_enable#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_status_enable.vim	/^function! quickrun#hook#quickfix_status_enable#new()$/;"	f
quickrun#hook#redraw_unite_quickfix#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/redraw_unite_quickfix.vim	/^function! quickrun#hook#redraw_unite_quickfix#new()$/;"	f
quickrun#hook#shabadoubi_touch_henshin#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/shabadoubi_touch_henshin.vim	/^function! quickrun#hook#shabadoubi_touch_henshin#new()$/;"	f
quickrun#hook#shebang#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/shebang.vim	/^function! quickrun#hook#shebang#new() abort$/;"	f
quickrun#hook#sweep#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/sweep.vim	/^function! quickrun#hook#sweep#new() abort$/;"	f
quickrun#hook#time#new	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^function! quickrun#hook#time#new() abort$/;"	f
quickrun#hook#unite_quickfix#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^function! quickrun#hook#unite_quickfix#new()$/;"	f
quickrun#hook#vim_vimlint#new	.vim/bundle/shabadou.vim/autoload/quickrun/hook/vim_vimlint.vim	/^function! quickrun#hook#vim_vimlint#new()$/;"	f
quickrun#is_running	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#is_running() abort$/;"	f
quickrun#module#exists	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#exists(kind, name) abort$/;"	f
quickrun#module#get	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#get(kind, ...) abort$/;"	f
quickrun#module#get_kinds	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#get_kinds() abort$/;"	f
quickrun#module#load	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#load(...) abort$/;"	f
quickrun#module#register	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#register(module, ...) abort$/;"	f
quickrun#module#unregister	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! quickrun#module#unregister(...) abort$/;"	f
quickrun#new	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#new(...) abort$/;"	f
quickrun#operator	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#operator(wise) abort$/;"	f
quickrun#outputter#browser#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^function! quickrun#outputter#browser#new() abort$/;"	f
quickrun#outputter#buffer#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! quickrun#outputter#buffer#new() abort$/;"	f
quickrun#outputter#buffered#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^function! quickrun#outputter#buffered#new() abort$/;"	f
quickrun#outputter#error#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^function! quickrun#outputter#error#new() abort$/;"	f
quickrun#outputter#file#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^function! quickrun#outputter#file#new() abort$/;"	f
quickrun#outputter#message#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^function! quickrun#outputter#message#new() abort$/;"	f
quickrun#outputter#multi#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^function! quickrun#outputter#multi#new() abort$/;"	f
quickrun#outputter#null#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/null.vim	/^function! quickrun#outputter#null#new() abort$/;"	f
quickrun#outputter#quickfix#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^function! quickrun#outputter#quickfix#new() abort$/;"	f
quickrun#outputter#variable#new	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^function! quickrun#outputter#variable#new() abort$/;"	f
quickrun#register_hook	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#register_hook(name, hook) abort$/;"	f
quickrun#register_module	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#register_module(kind, name, module) abort$/;"	f
quickrun#register_outputter	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#register_outputter(name, outputter) abort$/;"	f
quickrun#register_runner	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#register_runner(name, runner) abort$/;"	f
quickrun#run	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#run(...) abort$/;"	f
quickrun#runner#concurrent_process#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! quickrun#runner#concurrent_process#new() abort$/;"	f
quickrun#runner#process_manager#kill	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! quickrun#runner#process_manager#kill() abort$/;"	f
quickrun#runner#process_manager#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! quickrun#runner#process_manager#new() abort$/;"	f
quickrun#runner#python#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^function! quickrun#runner#python#new() abort$/;"	f
quickrun#runner#remote#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! quickrun#runner#remote#new() abort$/;"	f
quickrun#runner#shell#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^function! quickrun#runner#shell#new() abort$/;"	f
quickrun#runner#system#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/system.vim	/^function! quickrun#runner#system#new() abort$/;"	f
quickrun#runner#vimproc#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! quickrun#runner#vimproc#new() abort$/;"	f
quickrun#runner#vimscript#new	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimscript.vim	/^function! quickrun#runner#vimscript#new() abort$/;"	f
quickrun#session	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#session(key, ...) abort$/;"	f
quickrun#sweep_sessions	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#sweep_sessions() abort$/;"	f
quickrun#trigger_keys	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! quickrun#trigger_keys() abort$/;"	f
quickrun_config	.vim/bundle/shabadou.vim/autoload/quickrun/hook/extend_config.vim	/^function! s:quickrun_config()$/;"	f
quick_help	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:quick_help() "{{{$/;"	f
quick_look	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:quick_look() "{{{$/;"	f
QuitIfOnlyWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook(fname) abort " {{{2$/;"	f
quote_arg	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:quote_arg(arg)$/;"	f
Ragrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Ragrep$/;"	c
RagrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file RagrepAdd$/;"	c
RaisesException	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^function! RaisesException(cmd)$/;"	f
rand	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:rand(max) "{{{$/;"	f
rb	.vim/bundle/vim-css3-syntax/test/test.css	/^rb,$/;"	s
rdfa_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
re	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^import re$/;"	i
re	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
read	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:read(i, endpatterns) abort$/;"	f
read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:read(...) dict "{{{$/;"	f
read	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^function! s:read(cmdline) "{{{$/;"	f
read	.vim/bundle/vimproc.vim/src/proc_w32.c	184;"	d	file:
reader.read	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.read()$/;"	f
reader.unread	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! s:reader.unread()$/;"	f
readfile	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:readfile(cache_dir, filename)$/;"	f
readfile	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readfile	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
readfile	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
README_FILES	.vim/bundle/html5.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
README_FILES	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
read_line	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:read_line(...) dict "{{{$/;"	f
read_lines	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:read_lines(...) dict "{{{$/;"	f
read_pgroup	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pgroup(...) dict "{{{$/;"	f
read_pipes	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:read_pipes(...) dict "{{{$/;"	f
read_wait	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:read_wait(i, wait, endpatterns) abort$/;"	f
rebar_file	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
recache_candidates_loop	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! s:recache_candidates_loop(context, is_force) "{{{$/;"	f
receive	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! s:receive(key) abort$/;"	f
receive	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! s:receive(key) abort$/;"	f
receive_vimproc_result	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! s:receive_vimproc_result(key, read_timeout) abort$/;"	f
record_file	.vim/bundle/html5.vim/Makefile	/^record_file = \\$/;"	m
RECORD_FILE	.vim/bundle/html5.vim/Makefile	/^RECORD_FILE=.record$/;"	m
record_file	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^record_file = \\$/;"	m
RECORD_FILE	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	.vim/bundle/html5.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
RECORD_SCRIPT	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
redraw	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:redraw() "{{{$/;"	f
redraw_prompt	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! s:redraw_prompt() "{{{$/;"	f
refresh_folded_sections	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! s:refresh_folded_sections()$/;"	f
register	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:register(...)$/;"	f
register	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:register(...)$/;"	f
Regrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Regrep$/;"	c
RegrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file RegrepAdd$/;"	c
regularize	.vim/bundle/lexima.vim/autoload/lexima.vim	/^function! s:regularize(rule)$/;"	f
relationship_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let relationship_attributes = {'aria-activedescendant': [], 'aria-controls': [], 'aria-describedby': [], 'aria-flowto': [], 'aria-labelledby': [], 'aria-owns': [], 'aria-posinset': [], 'aria-setsize': []}$/;"	v
release_winsock	.vim/bundle/vimproc.vim/src/proc_w32.c	/^release_winsock()$/;"	f	file:
reload	.vim/bundle/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
reload	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:reload(bundles) "{{{$/;"	f
relrev	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
RemoveCarriageReturn	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RemoveTrailingComments	.vim/bundle/vim-javascript/indent/javascript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
remove_comment	.vim/bundle/vim-marching/autoload/marching.vim	/^function! s:remove_comment(str)$/;"	f
remove_flag	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:remove_flag(s, c)  "{{{2$/;"	f
remove_last_separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:remove_last_separator(path) abort$/;"	f
remove_last_separator	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:remove_last_separator(path)$/;"	f
rename	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:rename() "{{{$/;"	f
RenderContent	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
replace	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:replace(str, from, to)$/;"	f
replace	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_cmd	.vim/bundle/vim-quickrun/autoload/quickrun/hook/shebang.vim	/^function! s:replace_cmd(cmd) abort$/;"	f
replace_first	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
replace_first	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:replace_first(str, from, to)$/;"	f
replace_first	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_first	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_temp_to_bufnr	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^function! s:replace_temp_to_bufnr(qf, tempname, bufnr)$/;"	f
replace_temp_to_bufnr	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^function! s:replace_temp_to_bufnr(qf, tempname, bufnr)$/;"	f
request	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:request(...)$/;"	f
reset_ftplugin	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:reset_ftplugin() "{{{$/;"	f
resolve	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:resolve(file) "{{{$/;"	f
restart	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:restart() "{{{$/;"	f
RestoreSession	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
restore_cursor	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:restore_cursor(dir, fullpath, save_pos, previous_current_dir) "{{{$/;"	f
restore_options	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:restore_options()  "{{{2$/;"	f
restore_position	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:restore_position(position) "{{{$/;"	f
restore_screen_pos	.vim/bundle/vim-clang-format/autoload/operator/clang_format.vim	/^function! s:restore_screen_pos()$/;"	f
restore_statusline	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! s:restore_statusline()  "{{{$/;"	f
restore_vimfiler_mode	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:restore_vimfiler_mode() "{{{$/;"	f
revents	.vim/bundle/vimproc.vim/src/fakepoll.h	/^    short revents;                  \/* events that occurred on fd *\/$/;"	m	struct:pollfd
reverse	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:reverse(str)$/;"	f
reverse	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:reverse(str)$/;"	f
reverse	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
reverse	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
Rfgrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Rfgrep$/;"	c
RfgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file RfgrepAdd$/;"	c
Rgrep	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file Rgrep$/;"	c
RgrepAdd	.vim/bundle/grep.vim/plugin/grep.vim	/^command! -nargs=* -complete=file RgrepAdd$/;"	c
rmdir	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(...) abort$/;"	f
rmdir	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:rmdir(path, ...) abort$/;"	f
rmdir	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:rmdir(...) abort$/;"	f
rmdir	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:rmdir(path, ...) abort$/;"	f
rm_command	.vim/bundle/neobundle.vim/test/commands.vim	/^  let rm_command = neobundle#util#is_windows() ? 'rmdir \/S \/Q' : 'rm -rf'$/;"	v
rm_command	.vim/bundle/neobundle.vim/test/lock.vim	/^  let rm_command = neobundle#util#is_windows() ? 'rmdir \/S \/Q' : 'rm -rf'$/;"	v
rm_command	.vim/bundle/neobundle.vim/test/recipe.vim	/^  let rm_command = neobundle#util#is_windows() ? 'rmdir \/S \/Q' : 'rm -rf'$/;"	v
rm_command	.vim/bundle/neobundle.vim/test/sample.vim	/^  let rm_command = neobundle#util#is_windows() ? 'rmdir \/S \/Q' : 'rm -rf'$/;"	v
rm_command	.vim/bundle/neobundle.vim/test/source.vim	/^  let rm_command = neobundle#util#is_windows() ? 'rmdir \/S \/Q' : 'rm -rf'$/;"	v
role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
rooter	.vim/bundle/vim-rooter/plugin/rooter.vim	/^  augroup rooter$/;"	a
Rooter	.vim/bundle/vim-rooter/plugin/rooter.vim	/^command! Rooter :call <SID>ChangeToRootDirectory()$/;"	c
rotate_bundle	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:rotate_bundle(bundles)$/;"	f
rotate_source	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:rotate_source(is_next) "{{{$/;"	f
rp	.vim/bundle/vim-css3-syntax/test/test.css	/^rp,$/;"	s
Rsp	.vim/conf.d/basic/commands.basic.vim	/^command! -complete=file -nargs=1 Rsp rightbelow vsplit <args>$/;"	c
rt	.vim/bundle/vim-css3-syntax/test/test.css	/^rt,$/;"	s
rtc	.vim/bundle/vim-css3-syntax/test/test.css	/^rtc,$/;"	s
ruby	.vim/bundle/vim-css3-syntax/test/test.css	/^ruby,$/;"	s
RunGrep	.vim/bundle/grep.vim/plugin/grep.vim	/^function! s:RunGrep(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepCmd	.vim/bundle/grep.vim/plugin/grep.vim	/^function! s:RunGrepCmd(cmd, pattern, action)$/;"	f
RunGrepRecursive	.vim/bundle/grep.vim/plugin/grep.vim	/^function! s:RunGrepRecursive(cmd_name, grep_cmd, action, ...)$/;"	f
RunGrepSpecial	.vim/bundle/grep.vim/plugin/grep.vim	/^function! s:RunGrepSpecial(cmd_name, which, action, ...)$/;"	f
runner.init	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^function! s:runner.init(session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/system.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimscript.vim	/^function! s:runner.run(commands, input, session) abort$/;"	f
runner.shellescape	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! s:runner.shellescape(str) abort$/;"	f
runner.sweep	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! s:runner.sweep() abort$/;"	f
runner.sweep	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! s:runner.sweep() abort$/;"	f
runner.sweep	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! s:runner.sweep() abort$/;"	f
runner.validate	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! s:runner.validate() abort$/;"	f
runner.validate	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! s:runner.validate() abort$/;"	f
runner.validate	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^function! s:runner.validate() abort$/;"	f
runner.validate	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:runner.validate() abort$/;"	f
runner.validate	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^function! s:runner.validate() abort$/;"	f
RunOracle	.vim/bundle/vim-go/autoload/go/oracle.vim	/^func! s:RunOracle(mode, selected, needs_package) range abort$/;"	f
RUN_ARGS	.tools/makefile	/^  RUN_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))$/;"	m
Rv	.vim/conf.d/basic/commands.basic.vim	/^command! Rv source $MYVIMRC$/;"	c
s	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap s <Nop>$/;"	m
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.expand = {$/;"	v
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.preview = {$/;"	v
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:action_table.unite__new_candidate = {$/;"	v
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:action_table.neosnippet_source = {$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^let s:action_table.delete = {$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^let s:action_table.change = {$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table.cd = {$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:action_table.delete = {$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:action_table = {}$/;"	v
s:action_table	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:action_table.sort = {$/;"	v
s:anim_outputs	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^let s:anim_outputs = {}$/;"	v
s:assert	.vim/bundle/neobundle.vim/test/lock.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/neobundle.vim/test/parse.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/neobundle.vim/test/source.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/neobundle.vim/test/toml.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/neobundle.vim/test/tsort.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/neosnippet.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/unite.vim/test/matcher.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/unite.vim/test/sorter.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/unite.vim/test/source.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimfiler/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/fopen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/functions.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/lexer.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/parser.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/popen.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/socket.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	.vim/bundle/vimproc.vim/test/system.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:async_dictionary_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:async_tags_list = {}$/;"	v
s:autocommands_done	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:B	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:B = s:V.import('Vim.Buffer')$/;"	v
s:B	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^let s:B = lexima#vital().B$/;"	v
s:b	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:b      = ",bold"$/;"	v
s:base	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^let s:base = {$/;"	v
s:base	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^let s:base = {$/;"	v
s:base	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^let s:base = {$/;"	v
s:base	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^let s:base = {$/;"	v
s:base	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Timer.vim	/^let s:base = {$/;"	v
s:BaseTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:base_path	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:bg_none	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:bg_none = ' guibg=NONE ctermbg=NONE'$/;"	v
s:bg_processes	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:bg_processes = {}$/;"	v
s:BLOCKLEVEL_TAGS	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:block_regex	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:bookmarks	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:bookmarks = {}$/;"	v
s:bstfile	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^let s:bstfile = expand('<sfile>:p:h') . '\/vimcomplete'$/;"	v
s:buffer_bookmark_action	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:buffer_bookmark_action = {$/;"	v
s:buffer_list	.vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:buffer_list = {}$/;"	v
s:buffer_sources	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^  let s:buffer_sources = {}$/;"	v
s:bufsize	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^let s:bufsize = -1$/;"	v
s:buf_nr	.vim/bundle/vim-go/autoload/go/doc.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr	.vim/bundle/vim-go/autoload/go/ui.vim	/^let s:buf_nr = -1$/;"	v
s:c	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:c      = ",undercurl"$/;"	v
s:Cache	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:Cache = vital#of('unite').import('System.Cache')$/;"	v
s:Cache	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:Cache = vital#of('neocomplcache').import('System.Cache')$/;"	v
s:Cache	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^let s:Cache = neosnippet#util#get_vital().import('System.Cache')$/;"	v
s:Cache	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:Cache = unite#util#get_vital().import('System.Cache')$/;"	v
s:Cache	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:Cache	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:Cache	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^let s:Cache = vimfiler#util#get_vital().import('System.Cache.Deprecated')$/;"	v
s:cached_files	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:cached_files = {}$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:cached_result = []$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:cached_result = []$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:cached_result = []$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:cached_result = []$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:cached_result = {}$/;"	v
s:cached_result	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:cached_result = []$/;"	v
s:cache_files	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:cache_files = {}$/;"	v
s:cache_ignore_files	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:cache_ignore_files = {}$/;"	v
s:cache_module_path	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_module_path	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_module_path	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:cache_sid = {}$/;"	v
s:case_indent	.vim/bundle/vim-javascript/indent/javascript.vim	/^    let s:case_indent = m[1]$/;"	v
s:case_indent	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:case_indent = &sw$/;"	v
s:case_indent_after	.vim/bundle/vim-javascript/indent/javascript.vim	/^    let s:case_indent_after = m[1]$/;"	v
s:case_indent_after	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:case_indent_after = &sw$/;"	v
s:cdable_action_file	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:cdable_action_file = {$/;"	v
s:cdable_action_rec	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec = {$/;"	v
s:cdable_action_rec_async	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_async = {$/;"	v
s:cdable_action_rec_parent	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent = {$/;"	v
s:cdable_action_rec_parent_async	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_parent_async = {$/;"	v
s:cdable_action_rec_project	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project = {$/;"	v
s:cdable_action_rec_project_async	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:cdable_action_rec_project_async = {$/;"	v
s:checked_ctags	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:check_file	.vim/bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:clients	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:clients = {}$/;"	v
s:clients	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:clients.curl = {}$/;"	v
s:clients	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:clients.python = {}$/;"	v
s:clients	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:clients.wget = {}$/;"	v
s:closed_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:closed_icon = vimfiler#util#escape_pattern($/;"	v
s:cmd	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:cmd = {}$/;"	v
s:cmd_tmp	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        let s:cmd_tmp = g:clang_format#command$/;"	v
s:column	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^let s:column = {$/;"	v
s:column	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^let s:column = {$/;"	v
s:column	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^let s:column = {$/;"	v
s:comma_first	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:compare_typeinfo	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:complete_cache	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^let s:complete_cache = []$/;"	v
s:complete_process	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^let s:complete_process = {$/;"	v
s:complete_process	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^let s:complete_process = {$/;"	v
s:contents	.vim/bundle/vimproc.vim/test/fopen.vim	/^let s:contents = ['foo', 'bar']$/;"	v
s:continuation	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:continuation = { 'directory' : {}, 'file' : {} }$/;"	v
s:continuation_regex	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=].*,\\)' . s:line_term$/;"	v
s:converter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_abbr_word.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:converter = {$/;"	v
s:converter	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:converter = {$/;"	v
s:CP	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^let s:CP = g:quickrun#V.import('ConcurrentProcess')$/;"	v
s:cpo_save	.vim/bundle/cpp-vim/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim/bundle/grep.vim/plugin/grep.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim/bundle/html5.vim/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim/bundle/vimtex/indent/bib.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	.vim/bundle/vimtex/indent/tex.vim	/^let s:cpo_save = &cpo$/;"	v
s:cr_key	.vim/bundle/lexima.vim/autoload/lexima/endwise_rule.vim	/^let s:cr_key = '<CR>'$/;"	v
s:cssindent	.vim/bundle/html5.vim/indent/html.vim	/^let s:cssindent = &indentexpr$/;"	v
s:ctags_types	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:current_fileencodings	.vim/bundle/.neobundle/ftdetect/ftdetect.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileencodings	.vim/bundle/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	.vim/bundle/.neobundle/ftdetect/ftdetect.vim	/^let s:current_fileformats = ''$/;"	v
s:current_fileformats	.vim/bundle/vim-go/ftdetect/gofiletype.vim	/^let s:current_fileformats = ''$/;"	v
s:current_submode	.vim/bundle/vim-submode/autoload/submode.vim	/^let s:current_submode = ''$/;"	v
s:current_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^let s:current_vimfiler = {}$/;"	v
s:debug	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_converters	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:default_converters = ['converter_nothing']$/;"	v
s:default_includes	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_libs	.vim/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:default_libs = [$/;"	v
s:default_matchers	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:default_matchers = ['matcher_context']$/;"	v
s:default_name	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^let s:default_name = tempname() . '.html'$/;"	v
s:default_rule	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:default_rule = {$/;"	v
s:default_settings	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:default_settings = {$/;"	v
s:default_sorters	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:default_sorters = ['sorter_nothing']$/;"	v
s:dictionary_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^  let s:dictionary_list = {}$/;"	v
s:dict_t	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:dict_t = type({})$/;"	v
s:directory_stack	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:directory_stack = []$/;"	v
s:dll_handle	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:dll_handle = s:vp_dlopen(g:vimproc#dll_path)$/;"	v
s:doc_dict	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:doc_dict = {$/;"	v
s:doc_dict	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:doc_dict = {$/;"	v
s:edit_options	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:edit_options = [$/;"	v
s:emmet_settings	.vim/bundle/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:EMPTY_TAGS	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:envs_lists	.vim/bundle/vimtex/indent/tex.vim	/^let s:envs_lists = 'itemize\\|description\\|enumerate\\|thebibliography'$/;"	v
s:envs_noindent	.vim/bundle/vimtex/indent/tex.vim	/^let s:envs_noindent = 'document\\|verbatim\\|lstlisting'$/;"	v
s:exists	.vim/bundle/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists_md5	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 0$/;"	v
s:exists_md5	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^  let s:exists_md5 = 1$/;"	v
s:exists_unite_version	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^  let s:exists_unite_version = unite#version()$/;"	v
s:expand_bufnr	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:expr_case	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:expr_case = '^\\s*\\(case\\s\\+[^\\:]*\\|default\\)\\s*:\\s*'$/;"	v
s:extensions	.vim/bundle/vim-marching/autoload/marching.vim	/^let s:extensions = {$/;"	v
s:fg_none	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:fg_none = ' guifg=NONE ctermfg=NONE'$/;"	v
s:file	.vim/bundle/vimtex/autoload/vimtex.vim	/^let s:file = expand('<sfile>')$/;"	v
s:FileInfo	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:filename	.vim/bundle/vimproc.vim/test/fopen.vim	/^let s:filename = 'test.txt'$/;"	v
s:file_bookmark_action	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:file_bookmark_action = {$/;"	v
s:file_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:file_icon = vimfiler#util#escape_pattern($/;"	v
s:filter	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^let s:filter = {$/;"	v
s:filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_files.vim	/^let s:filter = {$/;"	v
s:filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_pattern.vim	/^let s:filter = {$/;"	v
s:filter	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_wildignore.vim	/^let s:filter = {$/;"	v
s:filtermx	.vim/bundle/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_sign_id	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:ft	.vim/bundle/cpp-vim/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:funcs	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^let s:funcs =  keys(filter(copy(s:global), "type(v:val) == type(function('tr'))"))$/;"	v
s:function_return_types	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:function_return_types = {}$/;"	v
s:ghc_mod_new	.vim/bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:global	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^let s:global = s:make()$/;"	v
s:global_candidates_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:global_candidates_list = { 'dictionary_variables' : {} }$/;"	v
s:globpath_third_arg	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	.vim/bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:goarch	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goarch = '*'$/;"	v
s:goarch	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goarch = g:golang_goarch$/;"	v
s:goarch	.vim/bundle/vim-go/autoload/go/package.vim	/^let s:goarch = $GOARCH$/;"	v
s:goos	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goos = '*'$/;"	v
s:goos	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goos = 'darwin'$/;"	v
s:goos	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goos = 'windows'$/;"	v
s:goos	.vim/bundle/vim-go/autoload/go/package.vim	/^        let s:goos = g:golang_goos$/;"	v
s:goos	.vim/bundle/vim-go/autoload/go/package.vim	/^let s:goos = $GOOS$/;"	v
s:got_fmt_error	.vim/bundle/vim-go/autoload/go/fmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:has_highlighting	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:Highlight	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^let s:Highlight = vital#of("unite_quickfix").import("Coaster.Highlight")$/;"	v
s:highlighter	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^let s:highlighter = s:Highlight.make()$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_buffer.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_tabpage.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_window.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_quickfix.vim	/^let s:hook = shabadou#make_hook_command({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_unite_quickfix.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^let s:hook = shabadou#make_hook_command({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/extend_config.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_command.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_config.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/redraw_unite_quickfix.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^let s:hook = shabadou#make_hook_points_module({$/;"	v
s:hook	.vim/bundle/shabadou.vim/autoload/quickrun/hook/vim_vimlint.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/eval.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/output_encode.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/shebang.vim	/^let s:hook = {}$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/sweep.vim	/^let s:hook = {$/;"	v
s:hook	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^let s:hook = {$/;"	v
s:html_indent_tags	.vim/bundle/html5.vim/indent/html.vim	/^    let s:html_indent_tags = s:html_indent_tags.'\\|'.g:html_indent_tags$/;"	v
s:html_indent_tags	.vim/bundle/html5.vim/indent/html.vim	/^let s:html_indent_tags = join(s:tags, '\\|')$/;"	v
s:html_indent_tags	.vim/bundle/html5.vim/indent/html.vim	/^let s:html_indent_tags = s:html_indent_tags.'\\|\\w\\+\\(-\\w\\+\\)\\+'$/;"	v
s:HTTP	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^let s:HTTP = marching#vital().import("Web.HTTP")$/;"	v
s:i	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:i      = ",italic"$/;"	v
s:icon_closed	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:IGNORE_ERRORS	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:imports	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:initialized	.vim/bundle/vimtex/autoload/vimtex.vim	/^  let s:initialized = 0$/;"	v
s:initial_go_path	.vim/bundle/vim-go/autoload/go/path.vim	/^let s:initial_go_path = ""$/;"	v
s:init_vim_path	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:init_vim_path = fnamemodify(expand('<sfile>'), ':h')$/;"	v
s:INLINE_TAGS	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:input_stack	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^let s:input_stack = lexima#charstack#new()$/;"	v
s:install_info_version	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:install_info_version = '3.0'$/;"	v
s:internal_candidates_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:internal_candidates_list = {}$/;"	v
s:is_case_tolerant	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_case_tolerant	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_case_tolerant = filereadable(expand('<sfile>:r') . '.VIM')$/;"	v
s:is_cygwin	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_cygwin	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_mac	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_win	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let s:is_win = s:V.Prelude.is_windows()$/;"	v
s:is_win	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:is_windows = has('win32')$/;"	v
s:is_windows	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:is_windows = unite#util#is_windows()$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/unite/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64')$/;"	v
s:is_windows	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^let s:is_windows = has('win32')$/;"	v
s:jobs	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^let s:jobs = {}$/;"	v
s:jobs	.vim/bundle/vim-go/autoload/go/term.vim	/^let s:jobs = {}$/;"	v
s:job_info	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:job_info = {}$/;"	v
s:job_info	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:job_info = {}$/;"	v
s:jsindent	.vim/bundle/html5.vim/indent/html.vim	/^let s:jsindent = &indentexpr$/;"	v
s:JSON	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^let s:JSON = marching#vital().import("Web.JSON")$/;"	v
s:js_keywords	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:js_keywords = '^\\s*\\(break\\|catch\\|const\\|continue\\|debugger\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|let\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:kind	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.reinstall = {$/;"	v
s:kind	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:kind.action_table.update = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.fdelete = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.goto = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.unload = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:kind.action_table.wipeout = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.cd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.lcd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.narrow = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.project_cd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_cd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabnew_lcd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimfiler = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.tabvimshell = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimfiler = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table.vimshell = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec\/async'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_parent\/async'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:kind.action_table['rec_project\/async'] =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:kind.action_table.grep = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.append = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.echo = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.ex = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.insert_directory = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.nop = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:kind.action_table.yank_escape = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.insert = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.backup = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.diff = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.dirdiff = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.exrename = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.find = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.grep = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.mkdir = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.read = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.rename = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.vimgrep = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:kind.action_table.wunix = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy = deepcopy(s:kind.action_table.vimfiler__copy)$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.copy.is_listed = 1$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.move.is_listed = 1$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.unite__new_candidate =$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__copy = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__delete = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__execute = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__external_filer = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__mkdir = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__move = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__newfile = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__rename = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shell = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__shellcmd = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:kind.action_table.vimfiler__write = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:kind.action_table.execute = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.above = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.below = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.choose = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.left = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.persist_open = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.right = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.split = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.splitswitch = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.switch = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabopen = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabsplit = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.tabswitch = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplit = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:kind.action_table.vsplitswitch = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.edit = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.action_table.rename = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^  let s:kind.parents = ['cdable']$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:kind.action_table.unite__new_candidate = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:kind.action_table.start = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.delete = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.only = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.open = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:kind.action_table.preview = {$/;"	v
s:kind	.vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:kind = {$/;"	v
s:KindheaderTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:known_files	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:L	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:L = s:V.import('Data.List')$/;"	v
s:L	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^let s:L = lexima#vital().L$/;"	v
s:lasterr	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:lasterr = []$/;"	v
s:last_errmsg	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:last_errmsg = ''$/;"	v
s:last_highlight_tline	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_process_type	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^let s:last_process_type = ''$/;"	v
s:last_status	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:last_status = 0$/;"	v
s:lazy_rtp_bundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let s:lazy_rtp_bundles = []$/;"	v
s:leaf_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:leaf_icon = vimfiler#util#escape_pattern($/;"	v
s:lexer	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:lexer = {}$/;"	v
s:lexima_vital	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:lexima_vital = {$/;"	v
s:libs	.vim/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:libs = [$/;"	v
s:line_term	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:List	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:List	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:List = vital#of('neocomplcache').import('Data.List')$/;"	v
s:list_t	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:list_t = type([])$/;"	v
s:loaded	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:loaded = {}$/;"	v
s:loaded	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:loaded = {}$/;"	v
s:loaded_columns	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let s:loaded_columns = {}$/;"	v
s:loaded_filters	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let s:loaded_filters = {}$/;"	v
s:local_candidates_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:local_candidates_list = {}$/;"	v
s:log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:log = []$/;"	v
s:log_data	.vim/bundle/vim-marching/autoload/marching.vim	/^let s:log_data = ""$/;"	v
s:log_data	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^let s:log_data = ""$/;"	v
s:M	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^let s:M = g:quickrun#V.import('Vim.Message')$/;"	v
s:manager	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let s:manager = vimfiler#util#get_vital().import('Vim.Buffer')$/;"	v
s:mapped_chars	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^let s:mapped_chars = []$/;"	v
s:mapped_chars	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^let s:mapped_chars = []$/;"	v
s:marked_file_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:marked_file_icon = vimfiler#util#escape_pattern($/;"	v
s:matcher	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:matcher = {$/;"	v
s:matcher	.vim/bundle/vimfiler/autoload/unite/filters/matcher_vimfiler_mask.vim	/^let s:matcher = {$/;"	v
s:math_delimiters_close	.vim/bundle/vimtex/indent/tex.vim	/^let s:math_delimiters_close = '\\(' . join([$/;"	v
s:math_delimiters_open	.vim/bundle/vimtex/indent/tex.vim	/^let s:math_delimiters_open = '\\(' . join([$/;"	v
s:member_sources	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^  let s:member_sources = {}$/;"	v
s:modemap	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:module	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:module = {'config': {}, 'config_order': []}$/;"	v
s:modules	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:modules = map(copy(s:templates), '{}')$/;"	v
s:modules	.vim/bundle/vimtex/autoload/vimtex.vim	/^  let s:modules = map($/;"	v
s:msl_regex	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:msl_regex = s:continuation_regex.'|'.s:expr_case$/;"	v
s:mx	.vim/bundle/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:my_snippet	.vim/conf.d/plugins/neosnippet.vim	/^	let s:my_snippet = '~\/.vim\/snippet\/'$/;"	v
s:n	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:n      = "NONE"$/;"	v
s:nearby_disabled	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:need_trans	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neobundles	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let s:neobundles = {}$/;"	v
s:neobundle_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:neobundle_dir = ''$/;"	v
s:neobundle_runtime_dir	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:neobundle_runtime_dir = neobundle#util#substitute_path_separator($/;"	v
s:neocomplcache_source	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:neocomplcache_source = {$/;"	v
s:neovim_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:neovim_candidates = []$/;"	v
s:neovim_eof	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:neovim_eof = 0$/;"	v
s:new_window	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:node_file	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:none	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:none   = "NONE"$/;"	v
s:NormalTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:notifiers	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:null_device	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:null_device = vimproc#util#is_windows() ? 'NUL' : '\/dev\/null'$/;"	v
s:ocamlpp	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:omittable	.vim/bundle/html5.vim/indent/html.vim	/^let s:omittable = [ $/;"	v
s:one_line_scope_regex	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_time_notices_issued	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:opened_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:opened_icon = vimfiler#util#escape_pattern($/;"	v
s:open_quickfix_window	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^let s:open_quickfix_window = 0$/;"	v
s:options_overridden_p	.vim/bundle/vim-submode/autoload/submode.vim	/^  let s:options_overridden_p = 0$/;"	v
s:origin	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^let s:origin = unite#sources#grep#define()$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^let s:outputter = quickrun#outputter#file#new()$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^let s:outputter.init_file = s:outputter.init$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^let s:outputter = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^let s:outputter = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^let s:outputter = quickrun#outputter#buffered#new()$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^let s:outputter.config = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^let s:outputter.config_order = ['success', 'error']$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^let s:outputter = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^let s:outputter = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^let s:outputter = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/null.vim	/^let s:outputter = {}$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^let s:outputter = quickrun#outputter#buffered#new()$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^let s:outputter.config = {$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^let s:outputter.init_buffered = s:outputter.init$/;"	v
s:outputter	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^let s:outputter = {$/;"	v
s:P	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^let s:P = g:quickrun#V.import('ProcessManager')$/;"	v
s:packages	.vim/bundle/vim-go/plugin/go.vim	/^let s:packages = [$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.aqua       = { 'dark' : "109" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.aqua       = { 'dark' : "14" }  " LightCyan$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.blue       = { 'dark' : "110" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.blue       = { 'dark' : "12" }  " LightBlue$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.comment    = { 'dark' : "243" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.comment    = { 'dark' : "7" }   " LightGrey$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.delbg      = { 'dark' : "167" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.delbg      = { 'dark' : "9" }   " LightRed$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.foreground = { 'dark' : "15" }  " White$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.foreground = { 'dark' : "250" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.green      = { 'dark' : "10" }  " LightGreen$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.green      = { 'dark' : "143" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.line       = { 'dark' : "0" }   " Black$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.line       = { 'dark' : "235" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.orange     = { 'dark' : "173" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.orange     = { 'dark' : "3" }   " DarkYellow$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.purple     = { 'dark' : "13" }  " LightMagenta$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.purple     = { 'dark' : "139" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.red        = { 'dark' : "167" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.red        = { 'dark' : "9" }   " LightRed$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.selection  = { 'dark' : "237" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.selection  = { 'dark' : "8" }   " DarkGrey$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.yellow     = { 'dark' : "11" }  " LightYellow$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^  let s:palette.cterm.yellow     = { 'dark' : "221" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette = {'gui' : {} , 'cterm' : {}}$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.addbg      = { 'dark' : "65" , 'light' : "194" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.addfg      = { 'dark' : "193", 'light' : "22"  }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.aqua.light       = "23"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.background = { 'dark' : "234", 'light' : "254" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.blue.light       = "17"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.changebg   = { 'dark' : "60" , 'light' : "189" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.changefg   = { 'dark' : "189", 'light' : "53"  }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.comment.light    = "59"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.darkblue   = { 'dark' : "17",  'light' : "194" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.darkcolumn = { 'dark' : "234", 'light' : "244" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.darkcyan   = { 'dark' : "24",  'light' : "22" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.darkpurple = { 'dark' : "53",  'light' : "53" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.darkred    = { 'dark' : "52",  'light' : "189" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.delbg.light      = "224"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.foreground.light = "16"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.green.light      = "22"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.line.light       = "252"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.orange.light     = "94"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.purple.light     = "53"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.red.light        = "52"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.selection.light  = "250"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.window     = { 'dark' : "236", 'light' : "247" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.cterm.yellow.light     = "58"$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.addbg      = { 'dark' : "#5F875F", 'light' : "#d7ffd7" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.addfg      = { 'dark' : "#d7ffaf", 'light' : "#005f00" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.aqua       = { 'dark' : "#8abeb7", 'light' : "#005f5f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.background = { 'dark' : "#1d1f21", 'light' : "#e4e4e4" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.blue       = { 'dark' : "#81a2be", 'light' : "#00005f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.changebg   = { 'dark' : "#5F5F87", 'light' : "#d7d7ff" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.changefg   = { 'dark' : "#d7d7ff", 'light' : "#5f005f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.comment    = { 'dark' : "#707880", 'light' : "#5f5f5f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.darkblue   = { 'dark' : "#00005f", 'light' : "#d7ffd7" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.darkcolumn = { 'dark' : "#1c1c1c", 'light' : "#808080" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.darkcyan   = { 'dark' : "#005f5f", 'light' : "#005f00" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.darkpurple = { 'dark' : "#5f005f", 'light' : "#5f005f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.darkred    = { 'dark' : "#5f0000", 'light' : "#d7d7ff" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.delbg      = { 'dark' : "#cc6666", 'light' : "#ffd7d7" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.foreground = { 'dark' : "#c5c8c6", 'light' : "#000000" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.green      = { 'dark' : "#b5bd68", 'light' : "#005f00" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.line       = { 'dark' : "#282a2e", 'light' : "#d0d0d0" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.orange     = { 'dark' : "#de935f", 'light' : "#875f00" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.purple     = { 'dark' : "#b294bb", 'light' : "#5f005f" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.red        = { 'dark' : "#cc6666", 'light' : "#5f0000" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.selection  = { 'dark' : "#373b41", 'light' : "#bcbcbc" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.window     = { 'dark' : "#303030", 'light' : "#9e9e9e" }$/;"	v
s:palette	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:palette.gui.yellow     = { 'dark' : "#f0c674", 'light' : "#5f5f00" }$/;"	v
s:path	.vim/bundle/javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:path = expand('<sfile>:p:h')$/;"	v
s:path_separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:path_separator	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_separator = s:is_windows ? ';' : ':'$/;"	v
s:path_sep_pattern	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:path_sep_pattern	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:path_sep_pattern = (exists('+shellslash') ? '[\\\\\/]' : '\/') . '\\+'$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	.vim/bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:plugin_names	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:plugin_names = []$/;"	v
s:pos_on_insertenter	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let s:pos_on_insertenter = []$/;"	v
s:PREFIX	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^let s:PREFIX = unite#util#is_windows() ? '[exrename]' : '*exrename*'$/;"	v
s:PseudoTag	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:pwin_by_tagbar	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:python_loaded	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^  let s:python_loaded = 1$/;"	v
s:python_loaded	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^let s:python_loaded = 0$/;"	v
s:quiet_warnings	.vim/bundle/syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	.vim/bundle/syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:r      = ",reverse"$/;"	v
s:reader	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:reader = {}$/;"	v
s:read_timeout	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:read_timeout = 100$/;"	v
s:registry	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repository_cache	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:repository_cache = []$/;"	v
s:Reunions	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^let s:Reunions = marching#vital().import("Reunions")$/;"	v
s:root	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:root = expand('<sfile>:p:h')$/;"	v
s:root_dir	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^let s:root_dir = ChompHead(Chomp(system('git rev-parse --show-cdup')))$/;"	v
s:ro_file_icon	.vim/bundle/vimfiler/syntax/vimfiler.vim	/^let s:ro_file_icon = vimfiler#util#escape_pattern($/;"	v
s:rst2pseudoxml	.vim/bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:rules	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^let s:rules = lexima#sortedlist#new([], function('lexima#cmdmode#_priority_order'))$/;"	v
s:rules	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^let s:rules = lexima#sortedlist#new([], function('lexima#insmode#_priority_order'))$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^let s:runner = {$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^let s:runner = {$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^let s:runner = {}$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^let s:runner = {$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^let s:runner = {$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/system.vim	/^let s:runner = {}$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^let s:runner = {$/;"	v
s:runner	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimscript.vim	/^let s:runner = {}$/;"	v
s:S	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:S = s:V.import('Data.String')$/;"	v
s:S	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^let s:S = lexima#vital().S$/;"	v
s:s	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:s      = ",standout"$/;"	v
s:sass_cache_location	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	.vim/bundle/auto-ctags.vim/autoload/auto_ctags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/auto-ctags.vim/plugin/auto_ctags.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim/bundle/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/cmdmode.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/endwise_rule.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/insmode.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/lexima/string.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/lexima.vim/plugin/lexima.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/plugin/neobundle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neobundle.vim/syntax/vimrecipe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/converter_remove_next_keyword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/matcher_old.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/neocomplcache/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache/buffer_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache/dictionary_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache/include_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache/syntax_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/plugin/neocomplcache/tags_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neocomplcache/vest/test-neocomplcache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/helpers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/ftplugin/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/plugin/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/neosnippet.vim/syntax/neosnippet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_tabpage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/back_window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_quickfix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/close_unite_quickfix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/copen.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/echo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/extend_config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/hier_update.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/hi_hi_hi_.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/inu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/koshikoshi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/neco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/nuko.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/output_config.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/qfsigns_update.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/qfstatusline_update.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replace_tempname_to_bufnr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_replate_tempname_to_bufnr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/quickfix_status_enable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/redraw_unite_quickfix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/shabadoubi_touch_henshin.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/unite_quickfix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/quickrun/hook/vim_vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/jade/jade_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_abbr_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/file_list.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/start.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/unite/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/plugin/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/plugin/unite/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/plugin/unite/window.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/unite.vim/syntax/unite.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-go/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/marching.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/marching/sync_clang_command.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Timer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/autoload/vital/_marching/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-marching/plugin/marching.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/cd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/eval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/output_encode.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/shebang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/sweep.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/hook/time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/browser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffered.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/error.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/multi.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/null.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/quickfix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/variable.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/shell.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/system.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/quickrun/runner/vimscript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vim-quickrun/plugin/quickrun.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/filters/matcher_vimfiler_mask.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_drive.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_execute.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_files.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_pattern.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_wildignore.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^let s:save_cpo = &cpo$/;"	v
s:script_candidates_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^  let s:script_candidates_list = {}$/;"	v
s:sdir	.vim/bundle/neocomplcache/autoload/neocomplcache/cache.vim	/^let s:sdir = neocomplcache#util#substitute_path_separator($/;"	v
s:seed	.vim/bundle/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:seen	.vim/bundle/sudo.vim/plugin/sudo.vim	/^let s:seen=1$/;"	v
s:self_file	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:self_file = s:_unify_path(expand('<sfile>'))$/;"	v
s:self_file	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:Session	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let s:Session = {}  " {{{1$/;"	v
s:sessions	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let s:sessions = {}  " Store for sessions.$/;"	v
s:setup_done	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	.vim/bundle/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:short_help	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:skip_expr	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_pattern	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^let s:skip_pattern = '\\C^\\%(\\_s\\+\\|' . "#[^\\r\\n]*" . '\\)'$/;"	v
s:sortedlist	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^let s:sortedlist = {$/;"	v
s:sorter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^let s:sorter = {$/;"	v
s:sorter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^let s:source.converters = s:source.source__converter$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^let s:source.action_table.source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.action_table.install = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.action_table.yank = {$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.converters = s:source.source__converter$/;"	v
s:source	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^let s:source.sorters = s:source.source__sorter$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^let s:source.action_table = s:action_table$/;"	v
s:source	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^let s:source.action_table.do = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/file_list.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.call = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^let s:source = deepcopy(s:origin)$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^let s:source['description'] = 'candidates from git grep'$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^let s:source['name'] = 'grep\/git'$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:source.action_table.start = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^let s:source.action_table.narrow = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^let s:source.action_table.preview = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigint = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigkill = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.sigterm = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^let s:source.action_table.unite__new_candidate = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^let s:source.action_table.edit = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.delete = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.open = {$/;"	v
s:source	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^let s:source.action_table.rename = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_drive.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_execute.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:source = {$/;"	v
s:source	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^let s:source.action_table['*'] = s:action_table$/;"	v
s:source_buffer_all	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_all = {$/;"	v
s:source_buffer_tab	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab = deepcopy(s:source_buffer_all)$/;"	v
s:source_buffer_tab	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.description =$/;"	v
s:source_buffer_tab	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^let s:source_buffer_tab.name = 'buffer_tab'$/;"	v
s:source_directory	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory = {$/;"	v
s:source_directory_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async = deepcopy(s:source_file_async)$/;"	v
s:source_directory_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.default_kind = 'directory'$/;"	v
s:source_directory_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.description =$/;"	v
s:source_directory_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_async.name = 'directory_rec\/async'$/;"	v
s:source_directory_new	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^let s:source_directory_new = {$/;"	v
s:source_directory_rec	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec = deepcopy(s:source_file_rec)$/;"	v
s:source_directory_rec	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.default_kind = 'directory'$/;"	v
s:source_directory_rec	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.description =$/;"	v
s:source_directory_rec	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_directory_rec.name = 'directory_rec'$/;"	v
s:source_file	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file = {$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async = deepcopy(s:source_file)$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.description = 'asynchronous candidates from file list'$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_async.name = 'file\/async'$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async = deepcopy(s:source_file_rec)$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.description =$/;"	v
s:source_file_async	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_async.name = 'file_rec\/async'$/;"	v
s:source_file_git	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git = deepcopy(s:source_file_async)$/;"	v
s:source_file_git	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.description =$/;"	v
s:source_file_git	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_git.name = 'file_rec\/git'$/;"	v
s:source_file_neovim	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim = deepcopy(s:source_file_rec)$/;"	v
s:source_file_neovim	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.description =$/;"	v
s:source_file_neovim	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim.name = 'file_rec\/neovim'$/;"	v
s:source_file_neovim2	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim2 = deepcopy(s:source_file_rec)$/;"	v
s:source_file_neovim2	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim2.description =$/;"	v
s:source_file_neovim2	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_neovim2.name = 'file_rec\/neovim2'$/;"	v
s:source_file_new	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^let s:source_file_new = {$/;"	v
s:source_file_rec	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^let s:source_file_rec = {$/;"	v
s:source_install	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_install = {$/;"	v
s:source_line	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line = {$/;"	v
s:source_line	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:source_line.converters = [s:source_line.source__converter]$/;"	v
s:source_runtime	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime = {$/;"	v
s:source_runtime	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_runtime.action_table.unite__new_candidate = {$/;"	v
s:source_update	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update = deepcopy(s:source_install)$/;"	v
s:source_update	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update.description = 'update bundles'$/;"	v
s:source_update	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^let s:source_update.name = 'neobundle\/update'$/;"	v
s:source_user	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user = {$/;"	v
s:source_user	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^let s:source_user.action_table.unite__new_candidate = {$/;"	v
s:sphinx_cache_location	.vim/bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:stack	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^let s:stack = {$/;"	v
s:state	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^let s:state = {}$/;"	v
s:statusline_in_use	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:STEALTH_TYPEAHEAD	.vim/bundle/vim-submode/autoload/submode.vim	/^let s:STEALTH_TYPEAHEAD =$/;"	v
s:String	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:String = vital#of('neocomplcache').import('Data.String')$/;"	v
s:style	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:style = &background$/;"	v
s:suite	.vim/bundle/neobundle.vim/test/lock.vim	/^let s:suite = themis#suite('lock')$/;"	v
s:suite	.vim/bundle/neobundle.vim/test/parse.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/neobundle.vim/test/source.vim	/^let s:suite = themis#suite('source')$/;"	v
s:suite	.vim/bundle/neobundle.vim/test/toml.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	.vim/bundle/neobundle.vim/test/tsort.vim	/^let s:suite = themis#suite('tsort')$/;"	v
s:suite	.vim/bundle/neosnippet.vim/test/functions.vim	/^let s:suite = themis#suite('toml')$/;"	v
s:suite	.vim/bundle/unite.vim/test/matcher.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/unite.vim/test/sorter.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/unite.vim/test/source.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/vimfiler/test/functions.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/fopen.vim	/^let s:suite = themis#suite('fopen')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/functions.vim	/^let s:suite = themis#suite('functions')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/lexer.vim	/^let s:suite = themis#suite('lexer')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/parser.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/popen.vim	/^let s:suite = themis#suite('popen')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/socket.vim	/^let s:suite = themis#suite('socket')$/;"	v
s:suite	.vim/bundle/vimproc.vim/test/system.vim	/^let s:suite = themis#suite('system')$/;"	v
s:supported_search_direction	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^let s:supported_search_direction =$/;"	v
s:syng_linecom	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syntax_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^  let s:syntax_list = {}$/;"	v
s:System	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:System	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^let s:System = unite#util#get_vital().import('System.File')$/;"	v
s:table_key_pattern	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^let s:table_key_pattern = s:table_name_pattern$/;"	v
s:table_name_pattern	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^let s:table_name_pattern = '\\%([^ [:tab:]#.[\\]=]\\+\\)'$/;"	v
s:tags	.vim/bundle/html5.vim/indent/html.vim	/^let s:tags = []$/;"	v
s:tags_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^  let s:tags_list = {}$/;"	v
s:templates	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:templates = {}$/;"	v
s:templates	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:templates.hook = deepcopy(s:module)$/;"	v
s:templates	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:templates.hook.config.enable = 1$/;"	v
s:templates	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:templates.outputter = deepcopy(s:module)$/;"	v
s:templates	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^let s:templates.runner = deepcopy(s:module)$/;"	v
s:ternary	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:tex_delimiters_close	.vim/bundle/vimtex/indent/tex.vim	/^let s:tex_delimiters_close = '\\(' . join([$/;"	v
s:tex_delimiters_open	.vim/bundle/vimtex/indent/tex.vim	/^let s:tex_delimiters_open = '\\(' . join([$/;"	v
s:tikz_commands	.vim/bundle/vimtex/indent/tex.vim	/^let s:tikz_commands = '\\\\\\(' . join([$/;"	v
s:tikz_indented	.vim/bundle/vimtex/indent/tex.vim	/^let s:tikz_indented = 0$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^let s:type = {$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^let s:type = {$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^let s:type = {$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^let s:type = {$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^let s:type = {$/;"	v
s:type	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^let s:type = {$/;"	v
s:TypeInfo	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:TYPE_DICT	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_DICT	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:type_init_done	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:TYPE_LIST	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_LIST	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:type_map	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:TYPE_STRING	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TYPE_STRING	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TYPE_STRING	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TYPE_STRING	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:t_none	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:t_none = "NONE"$/;"	v
s:u	.vim/bundle/vim-hybrid/colors/hybrid.vim	/^let s:u      = ",underline"$/;"	v
s:unite_histories	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories = []$/;"	v
s:unite_histories_file_mtime	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^let s:unite_histories_file_mtime = 0$/;"	v
s:updates_log	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^let s:updates_log = []$/;"	v
s:use_current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^  let s:use_current_unite = 1$/;"	v
s:V	.vim/bundle/lexima.vim/autoload/lexima.vim	/^let s:V = vital#of('lexima')$/;"	v
s:V	.vim/bundle/neocomplcache/autoload/neocomplcache/util.vim	/^let s:V = vital#of('neocomplcache')$/;"	v
s:V	.vim/bundle/neosnippet.vim/autoload/neosnippet/util.vim	/^let s:V = vital#of('neosnippet')$/;"	v
s:V	.vim/bundle/vim-marching/autoload/marching.vim	/^let s:V = vital#of("marching")$/;"	v
s:V	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^let s:V = vital#of('quickrun').load($/;"	v
s:V	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^let s:V = vital#of('vimfiler')$/;"	v
s:vamkr	.vim/bundle/neobundle.vim/autoload/neobundle/vamkr.vim	/^let s:vamkr = {}$/;"	v
s:var_stmt	.vim/bundle/vim-javascript/indent/javascript.vim	/^let s:var_stmt = '^\\s*(const\\|let\\|var)'$/;"	v
s:VERSION	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^let s:VERSION = '0.1.0'$/;"	v
s:viewers	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^let s:viewers = [$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_cygwin.dll'$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux32.so'$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_linux64.so'$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_mac.so'$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = 'vimproc_unix.so'$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = has('win64') ?$/;"	v
s:vimproc_dll_basename	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  let s:vimproc_dll_basename = system($/;"	v
s:vimtex_next_id	.vim/bundle/vimtex/autoload/vimtex.vim	/^    let s:vimtex_next_id = get(s:, 'vimtex_next_id', -1) + 1$/;"	v
s:vim_shell_error	.vim/bundle/vim-go/autoload/go/complete.vim	/^    let s:vim_shell_error = ''$/;"	v
s:vim_shell_error	.vim/bundle/vim-go/autoload/go/complete.vim	/^    let s:vim_shell_error = get(g:, 'gocomplete#shell_error_function', 'vimproc#get_last_status')$/;"	v
s:vim_system	.vim/bundle/vim-go/autoload/go/complete.vim	/^    let s:vim_system = get(g:, 'gocomplete#system_function', 'system')$/;"	v
s:vim_system	.vim/bundle/vim-go/autoload/go/complete.vim	/^    let s:vim_system = get(g:, 'gocomplete#system_function', 'vimproc#system2')$/;"	v
s:visibility_symbols	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:VOID	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^let s:VOID = function('s:void')$/;"	v
s:warnings	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:window_expanded	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	.vim/bundle/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:within_block	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^  let s:within_block = 0$/;"	v
s:write_timeout	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^let s:write_timeout = 100$/;"	v
s:_DEBUG_DUMP_OPTIONS	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_float2str	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_isDebugEnabled	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_NOTIFIER_TYPES	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_processes	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^let s:_processes = {}$/;"	v
s:_process_info	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^let s:_process_info = {}$/;"	v
s:_quit_pre	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:_quit_pre = []$/;"	v
s:_running_windows	.vim/bundle/syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_str2float	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_unify_path_cache	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_width	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:_wid_base	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:_wid_base = 'syntastic_' . getpid() . '_' . reltimestr(g:_SYNTASTIC_START) . '_'$/;"	v
s:_wid_pool	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^let s:_wid_pool = 0$/;"	v
s:_YCM_TYPES	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s<C-]>	.vim/conf.d/keymapping/window.keymapping.vim	/^  nnoremap <silent> s<C-]> :TagbarToggle<CR>$/;"	m
s=	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap s= <C-w>=$/;"	m
save	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:save(filename, bookmark)  "{{{$/;"	f
SaveClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
save_foldinfo	.vim/bundle/neocomplcache/autoload/neocomplcache/handler.vim	/^function! s:save_foldinfo() "{{{$/;"	f
save_install_info	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:save_install_info(bundles) "{{{$/;"	f
save_lockfile	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:save_lockfile(bundles) "{{{$/;"	f
save_session	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:save_session(session) abort$/;"	f
sB	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sB :<C-u>Unite buffer -buffer-name=file<CR>$/;"	m
sb	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sb :<C-u>Unite buffer_tab -buffer-name=file<CR>$/;"	m
scan	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
scan	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:scan(str, pattern)$/;"	f
scan	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scan	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
score	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^def score():$/;"	f
search	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:search(pattern) abort$/;"	f
search	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:search(pattern) abort$/;"	f
search	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:search(pattern)$/;"	f
search	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:search(pattern) abort$/;"	f
search	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:search(pattern)$/;"	f
search	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:search(pattern) abort$/;"	f
search	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:search(pattern) abort$/;"	f
search_and_skip_comments	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! s:search_and_skip_comments(pat, ...) " {{{1$/;"	f
search_and_skip_comments	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! s:search_and_skip_comments(pat, ...) " {{{1$/;"	f
search_buffer	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:search_buffer(candidate) "{{{$/;"	f
search_cursor	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! s:search_cursor(filename, dest_dir, candidate) "{{{$/;"	f
search_dict	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict()$/;"	f
search_dict2	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! s:search_dict2(name)$/;"	f
search_outof_range	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:search_outof_range(col) "{{{$/;"	f
search_sync_placeholder	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:search_sync_placeholder(start, end, number) "{{{$/;"	f
section	.vim/bundle/vim-css3-syntax/test/test.css	/^section,$/;"	s
Section 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\chapter{No numbers in backmatter 1}$/;"	s
Section 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\chapter{No numbers in backmatter 2}$/;"	s
Section 1	.vim/bundle/vimtex/test/feature/table-of-contents/backmatter.tex	/^\\chapter{No numbers in backmatter 1}$/;"	s
Section 1	.vim/bundle/vimtex/test/feature/table-of-contents/backmatter.tex	/^\\chapter{No numbers in backmatter 2}$/;"	s
Section 2	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{Section 1}$/;"	s
Section 2	.vim/bundle/vimtex/test/feature/table-of-contents/backmatter.tex	/^\\section{Section 1}$/;"	s
SelectJavascript	.vim/bundle/.neobundle/ftdetect/ftdetect.vim	/^fun! s:SelectJavascript()$/;"	f
SelectJavascript	.vim/bundle/vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
select_sort_type	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:select_sort_type() "{{{$/;"	f
self	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^	let self.process.base_kill = self.process.kill$/;"	v
self	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^	let self.process.tempfile = tempfile$/;"	v
self	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^	let self.process.base_kill = self.process.kill$/;"	v
self	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^	let self.process.tempfile = tempfile$/;"	v
self.process.kill	.vim/bundle/vim-marching/autoload/marching/clang_command.vim	/^	function! self.process.kill()$/;"	f
self.process.kill	.vim/bundle/vim-marching/autoload/marching/complete.vim	/^	function! self.process.kill()$/;"	f
separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:separator() abort$/;"	f
separator	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:separator()$/;"	f
Session.build_command	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.build_command(tmpl) abort$/;"	f
Session.continue	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.continue() abort$/;"	f
Session.finish	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.finish(...) abort$/;"	f
Session.initialize	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.initialize(config) abort$/;"	f
Session.invoke_hook	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.invoke_hook(point, ...) abort$/;"	f
Session.make_module	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.make_module(kind, line) abort$/;"	f
Session.normalize	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.normalize(config) abort$/;"	f
Session.output	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.output(data) abort$/;"	f
Session.run	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.run() abort$/;"	f
Session.setup	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.setup() abort$/;"	f
Session.sweep	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.sweep() abort$/;"	f
Session.tempname	.vim/bundle/vim-quickrun/autoload/quickrun.vim	/^function! s:Session.tempname(...) abort$/;"	f
SetCompilerType	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetFoldLevel	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetStatusLine	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
SetTagbar	.vim/bundle/vim-go/ftplugin/go/tagbar.vim	/^function! s:SetTagbar()$/;"	f
setup_insmode	.vim/bundle/lexima.vim/plugin/lexima.vim	/^function! s:setup_insmode()$/;"	f
setup_keymaps	.vim/bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	.vim/bundle/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
set_auto_completion_length	.vim/bundle/neocomplcache/autoload/neocomplcache/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_current_mask	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:set_current_mask() "{{{$/;"	f
set_default	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:set_default(var, val)$/;"	f
set_default	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_custom	.vim/bundle/neocomplcache/autoload/neocomplcache/init.vim	/^function! s:set_default_custom() "{{{$/;"	f
set_dictionary_helper	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:set_dictionary_helper(variable, keys, value) "{{{$/;"	f
set_dictionary_helper	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_dictionary_helper	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_dictionary_helper	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern)$/;"	f
set_dictionary_helper	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_file_content	.vim/bundle/auto-ctags.vim/spec/auto_ctags_spec.rb	/^def set_file_content(file, string)$/;"	f
set_running_mark	.vim/bundle/vim-quickrun/autoload/quickrun/outputter/buffer.vim	/^function! s:set_running_mark(mark) abort$/;"	f
set_snippet_dict	.vim/bundle/neosnippet.vim/autoload/neosnippet/parser.vim	/^function! s:set_snippet_dict(snippet_dict, snippets, dup_check, snippets_file) "{{{$/;"	f
set_syntax	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! s:set_syntax() "{{{$/;"	f
set_up_options	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:set_up_options(submode)  "{{{2$/;"	f
sf	.vim/conf.d/plugins/vimfiler.vim	/^nnoremap <silent>sf :VimFilerMyExplorer<CR>$/;"	m
sH	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sH <C-w>H$/;"	m
shabadou#get_anim_output	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^function! shabadou#get_anim_output(name)$/;"	f
shabadou#make_hook_command	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^function! shabadou#make_hook_command(base)$/;"	f
shabadou#make_hook_points_module	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^function! shabadou#make_hook_points_module(base)$/;"	f
shabadou#make_quickrun_hook_anim	.vim/bundle/shabadou.vim/autoload/shabadou.vim	/^function! shabadou#make_quickrun_hook_anim(name, aa_list, wait)$/;"	f
SHELL	.vim/bundle/html5.vim/Makefile	/^SHELL=bash$/;"	m
SHELL	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^SHELL=bash$/;"	m
shellescape	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^  function! s:shellescape(...)$/;"	f
shellescape	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^  function! s:shellescape(command)$/;"	f
shellescape	.vim/bundle/vim-quickrun/autoload/quickrun/runner/remote.vim	/^function! s:shellescape(str) abort$/;"	f
shellescape	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellescape	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shell_error	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:shell_error()$/;"	f
shift	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:shift(list)$/;"	f
shift	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:shift(list)$/;"	f
shift	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:shift(list) abort$/;"	f
ShowInPreviewWin	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
show_category	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	.vim/bundle/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
ShrinkIfExpanded	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
shutdown	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:shutdown(label) abort$/;"	f
sidwrap	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! s:sidwrap(func) " {{{1$/;"	f
SID_PREFIX	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:SID_PREFIX() "{{{$/;"	f
SID_PREFIX	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:SID_PREFIX()$/;"	f
SID_PREFIX	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:SID_PREFIX()$/;"	f
size	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:size()$/;"	f
size	.vim/bundle/vimproc.vim/src/vimstack.c	/^    size_t size; \/* stack size *\/$/;"	m	struct:vp_stack_t	file:
sJ	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sJ <C-w>J$/;"	m
sK	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sK <C-w>K$/;"	m
skip_back_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_back_quote(script, i) "{{{$/;"	f
skip_double_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_double_quote(script, i) "{{{$/;"	f
skip_else	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_else(args, script, i) "{{{$/;"	f
skip_next_auto_completion	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:skip_next_auto_completion() "{{{$/;"	f
skip_single_quote	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! s:skip_single_quote(script, i) "{{{$/;"	f
sL	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sL <C-w>L$/;"	m
smart_execute_command	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_execute_command	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:smart_execute_command(action, word)$/;"	f
smart_execute_command	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_execute_command	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smart_imap	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap(map) "{{{$/;"	f
smart_imap2	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_imap2(map) "{{{$/;"	f
smart_preview	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:smart_preview() "{{{$/;"	f
sN	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sN :<C-u>bn<CR>$/;"	m
sn	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sn gt$/;"	m
SnippetsIndent	.vim/bundle/neosnippet.vim/indent/neosnippet.vim	/^function! SnippetsIndent() "{{{$/;"	f
snippets_expand	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand(cur_text, col) "{{{$/;"	f
snippets_expand_or_jump	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_expand_or_jump(cur_text, col) "{{{$/;"	f
snippets_jump_or_expand	.vim/bundle/neosnippet.vim/autoload/neosnippet/mappings.vim	/^function! s:snippets_jump_or_expand(cur_text, col) "{{{$/;"	f
snprintf	.vim/bundle/vimproc.vim/src/proc_w32.c	63;"	d	file:
sO	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sO <C-w>=$/;"	m
so	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap so <C-w>_<C-w>|$/;"	m
sockets_number	.vim/bundle/vimproc.vim/src/proc_w32.c	/^static int sockets_number = 0;$/;"	v	file:
sort	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:sort(list, expr) "{{{$/;"	f
sort	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:sort(list, expr)$/;"	f
sort	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:sort(list, expr)$/;"	f
sort	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! s:sort(files, type) "{{{$/;"	f
sort	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sortedlist.add	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^function! s:sortedlist.add(x)$/;"	f
sortedlist.as_list	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^function! s:sortedlist.as_list()$/;"	f
sortedlist.clear	.vim/bundle/lexima.vim/autoload/lexima/sortedlist.vim	/^function! s:sortedlist.clear()$/;"	f
sorter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_nothing.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	.vim/bundle/neocomplcache/autoload/neocomplcache/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sorter.filter(candidates, context)$/;"	f
sorter.filter	.vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! s:sorter.filter(candidates, context) "{{{$/;"	f
SortTags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
sort_buffer_name	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! s:sort_buffer_name(lhs, rhs) "{{{$/;"	f
sort_by	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:sort_by(list, expr)$/;"	f
sort_by	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_lua	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_lua(candidates, inputs) "{{{$/;"	f
sort_python	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! s:sort_python(candidates, inputs)$/;"	f
sort_vim	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! s:sort_vim(candidates, inputs) "{{{$/;"	f
Source	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^class Source(Base):$/;"	c
source	.vim/bundle/vim-css3-syntax/test/test.css	/^source,$/;"	s
source.action_table.call.func	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.call.func(candidate) "{{{$/;"	f
source.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.delete.func	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.delete.func(candidates) "{{{$/;"	f
source.action_table.do.func	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.action_table.do.func(candidate) "{{{$/;"	f
source.action_table.edit.func	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.edit.func(candidates) "{{{$/;"	f
source.action_table.edit.func	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.action_table.edit.func(candidate) "{{{$/;"	f
source.action_table.install.func	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.action_table.install.func(candidates) "{{{$/;"	f
source.action_table.narrow.func	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.narrow.func	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.action_table.narrow.func(candidate) "{{{$/;"	f
source.action_table.open.func	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.open.func(candidate) "{{{$/;"	f
source.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.preview.func	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.action_table.preview.func(candidate) "{{{$/;"	f
source.action_table.rename.func	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.action_table.rename.func(candidate) "{{{$/;"	f
source.action_table.sigint.func	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigint.func(candidates) "{{{$/;"	f
source.action_table.sigkill.func	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigkill.func(candidates) "{{{$/;"	f
source.action_table.sigterm.func	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.sigterm.func(candidates) "{{{$/;"	f
source.action_table.source.func	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! s:source.action_table.source.func(candidates) "{{{$/;"	f
source.action_table.start.func	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.action_table.start.func(candidate) "{{{$/;"	f
source.action_table.unite__new_candidate.func	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.action_table.unite__new_candidate.func(candidates) "{{{$/;"	f
source.action_table.unite__new_candidate.func	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source.action_table.yank.func	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.action_table.yank.func(candidates) "{{{$/;"	f
source.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.async_gather_candidates(args, context) "{{{$/;"	f
source.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.change_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^function! s:source.change_candidates(args, context) "{{{$/;"	f
source.complete	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.complete	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.finalize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.finalize() "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/neobundle/sources/github.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/neobundle/sources/neobundle_vim_recipes.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^function! s:source.gather_candidates(args, context)$/;"	f
source.gather_candidates	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! s:source.gather_candidates(args, context)$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^function! s:source.gather_candidates(args, context) abort "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_drive.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_execute.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.gather_candidates	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_complete_words(complete_pos, complete_str) "{{{$/;"	f
source.get_complete_words	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_complete_words(cur_keyword_pos, cur_keyword_str) "{{{$/;"	f
source.get_keyword_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_list	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.get_keyword_list(complete_str) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.get_keyword_pos	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.get_keyword_pos(cur_text) "{{{$/;"	f
source.hooks.on_close	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^function! s:source.hooks.on_close(args, context)$/;"	f
source.hooks.on_close	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! s:source.hooks.on_close(args, context)$/;"	f
source.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_close(args, context) "{{{$/;"	f
source.hooks.on_final	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_execute.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_init	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	.vim/bundle/neosnippet.vim/autoload/neocomplete/sources/neosnippet.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
source.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_post_filter(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^function! s:source.hooks.on_syntax(args, context)$/;"	f
source.hooks.on_syntax	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! s:source.hooks.on_syntax(args, context)$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! s:source.hooks.on_syntax(args, context) "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/dictionary_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/filename_include.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/include_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/member_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/omni_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/tags_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.initialize	.vim/bundle/neosnippet.vim/autoload/neocomplcache/sources/snippets_complete.vim	/^function! s:source.initialize() "{{{$/;"	f
source.source__converter	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! s:source.source__converter(candidates, context) "{{{$/;"	f
source.source__converter	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.source__converter(candidates, context) "{{{$/;"	f
source.source__sorter	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:source.source__sorter(candidates, context) "{{{$/;"	f
source.vimfiler_check_filetype	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_check_filetype(args, context) "{{{$/;"	f
source.vimfiler_complete	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source.vimfiler_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! s:source.vimfiler_gather_candidates(args, context) "{{{$/;"	f
SOURCES	.tools/makefile	/^SOURCES = $(shell ls $(SRC_DIR)\/*.cpp) $/;"	m
source_buffer_all.complete	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_buffer_all.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.gather_candidates(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_init(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_post_filter(args, context) "{{{$/;"	f
source_buffer_all.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_all.hooks.on_syntax(args, context) "{{{$/;"	f
source_buffer_tab.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! s:source_buffer_tab.gather_candidates(args, context) "{{{$/;"	f
source_directory.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.change_candidates(args, context) "{{{$/;"	f
source_directory.complete	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_directory.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory.hooks.on_close(args, context) "{{{$/;"	f
source_directory_async.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_init(args, context) "{{{$/;"	f
source_directory_async.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_async.hooks.on_post_filter(args, context) "{{{$/;"	f
source_directory_new.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! s:source_directory_new.change_candidates(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_init(args, context) "{{{$/;"	f
source_directory_rec.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_directory_rec.hooks.on_post_filter(args, context) "{{{$/;"	f
source_file.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.change_candidates(args, context) "{{{$/;"	f
source_file.complete	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.hooks.on_close(args, context) "{{{$/;"	f
source_file.vimfiler_check_filetype	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file.vimfiler_complete	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file.vimfiler_dummy_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file.vimfiler_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.async_gather_candidates(args, context) "{{{$/;"	f
source_file_async.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.change_candidates(args, context) "{{{$/;"	f
source_file_async.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.gather_candidates(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_close(args, context) "{{{$/;"	f
source_file_async.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_async.hooks.on_init(args, context) "{{{$/;"	f
source_file_git.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.async_gather_candidates(args, context) "{{{$/;"	f
source_file_git.complete	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_git.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_git.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.async_gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_close	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_close(args, context) "{{{$/;"	f
source_file_neovim.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim.hooks.on_init(args, context) "{{{$/;"	f
source_file_neovim2.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim2.async_gather_candidates(args, context) "{{{$/;"	f
source_file_neovim2.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim2.gather_candidates(args, context) "{{{$/;"	f
source_file_neovim2.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_neovim2.hooks.on_init(args, context) "{{{$/;"	f
source_file_new.change_candidates	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! s:source_file_new.change_candidates(args, context) "{{{$/;"	f
source_file_rec.async_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.async_gather_candidates(args, context) "{{{$/;"	f
source_file_rec.complete	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.gather_candidates(args, context) "{{{$/;"	f
source_file_rec.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.hooks.on_init(args, context) "{{{$/;"	f
source_file_rec.vimfiler_check_filetype	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_check_filetype(args, context) "{{{$/;"	f
source_file_rec.vimfiler_complete	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_file_rec.vimfiler_dummy_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_dummy_candidates(args, context) "{{{$/;"	f
source_file_rec.vimfiler_gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:source_file_rec.vimfiler_gather_candidates(args, context) "{{{$/;"	f
source_focus	.vim/bundle/neobundle.vim/autoload/neobundle/autoload.vim	/^function! s:source_focus() "{{{$/;"	f
source_install.async_gather_candidates	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.async_gather_candidates(args, context) "{{{$/;"	f
source_install.complete	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_install.hooks.on_close	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_close(args, context) "{{{$/;"	f
source_install.hooks.on_init	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_init(args, context) "{{{$/;"	f
source_install.hooks.on_syntax	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_install.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.complete	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.complete(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
source_line.gather_candidates	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.gather_candidates(args, context) "{{{$/;"	f
source_line.hooks.on_init	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_init(args, context) "{{{$/;"	f
source_line.hooks.on_post_filter	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_post_filter(args, context) "{{{$/;"	f
source_line.hooks.on_syntax	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.hooks.on_syntax(args, context) "{{{$/;"	f
source_line.source__converter	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! s:source_line.source__converter(candidates, context) "{{{$/;"	f
source_lockfile	.vim/bundle/neobundle.vim/autoload/neobundle/installer.vim	/^function! s:source_lockfile() "{{{$/;"	f
source_runtime.action_table.unite__new_candidate.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_runtime.gather_candidates	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_runtime.gather_candidates(args, context) "{{{$/;"	f
source_update.hooks.on_init	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! s:source_update.hooks.on_init(args, context) "{{{$/;"	f
source_user.action_table.unite__new_candidate.func	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.action_table.unite__new_candidate.func(candidate) "{{{$/;"	f
source_user.gather_candidates	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! s:source_user.gather_candidates(args, context) "{{{$/;"	f
sP	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sP :<C-u>bp<CR>$/;"	m
sp	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sp gT$/;"	m
span	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:span(f, xs)$/;"	f
span	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:span(f, xs)$/;"	f
span	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span 	.vim/bundle/vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	s
spawn	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	.vim/bundle/vim-go/autoload/go/jobcontrol.vim	/^function! s:spawn(desc, args)$/;"	f
spawn	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^function! s:spawn(expr, ...)$/;"	f
spawn	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spawn	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
split	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:split(path) abort$/;"	f
split	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  function! s:split(str, sep)$/;"	f
split	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:split(path)$/;"	f
split3	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split3	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:split3(expr, pattern)$/;"	f
split3	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split3	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
SplitClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
split_args	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/vim_complete/helper.vim	/^function! s:split_args(cur_text, complete_str) "{{{$/;"	f
split_by_displaywidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_displaywidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_edit_file	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:split_edit_file() "{{{$/;"	f
split_keys	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:split_keys(keyseq)  "{{{2$/;"	f
split_leftright	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_leftright	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:split_leftright(expr, pattern)$/;"	f
split_leftright	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_leftright	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_pattern	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:split_pattern(keyword_pattern) "{{{$/;"	f
split_rtp	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! s:split_rtp(...) "{{{$/;"	f
sQ	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sQ :<C-u>bd<CR>$/;"	m
sq	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sq :<C-u>q<CR>$/;"	m
sr	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sr <C-w>r$/;"	m
SRC	.vim/bundle/vimproc.vim/make_android.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_bsd.mak	/^SRC=src\/proc.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_cygwin.mak	/^SRC=src\/proc.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_mac.mak	/^SRC=src\/proc.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_mingw32.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_mingw64.mak	/^SRC=src\/proc_w32.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_sunos.mak	/^SRC=src\/proc.c src\/ptytty.c$/;"	m
SRC	.vim/bundle/vimproc.vim/make_unix.mak	/^SRC=src\/proc.c$/;"	m
SRCDIR	.vim/bundle/vimproc.vim/make_msvc.mak	/^SRCDIR = src$/;"	m
SRC_DIR	.tools/makefile	/^SRC_DIR = .\/src$/;"	m
ss	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap ss :<C-u>sp<CR>$/;"	m
st	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap st :<C-u>tabnew<CR>$/;"	m
sT	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sT :<C-u>Unite tab<CR>$/;"	m
stack.count	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.count()$/;"	f
stack.is_empty	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.is_empty()$/;"	f
stack.peek	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.peek(...)$/;"	f
stack.pop	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.pop(n)$/;"	f
stack.pop_all	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.pop_all()$/;"	f
stack.push	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack.push(str)$/;"	f
stack._fire_change_event	.vim/bundle/lexima.vim/autoload/lexima/charstack.vim	/^function! s:stack._fire_change_event()$/;"	f
start	.vim/bundle/vimproc.vim/tools/benchmark.vim	/^let start = reltime()$/;"	v
StartDebug	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
starts_with	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
start_complete	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
Stash	.vim/bundle/vim-submode/t/current.vim	/^function! Stash()$/;"	f
state	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:state(i) abort$/;"	f
status	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:status(i) abort$/;"	f
StopDebug	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
stop_before_leaving	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! s:stop_before_leaving() " {{{1$/;"	f
str2hd	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:str2hd(str)$/;"	f
str2list	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:str2list(str)$/;"	f
strchars	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^  function! s:strchars(str)$/;"	f
strchars	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^  function! s:strchars(str)$/;"	f
strchars	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strchars	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
string	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^import string$/;"	i
strwidthpart	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:strwidthpart(str, width)$/;"	f
strwidthpart	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
strwidthpart_reverse	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:strwidthpart_reverse(str, width)$/;"	f
strwidthpart_reverse	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
str_to_oflag	.vim/bundle/vimproc.vim/src/proc.c	/^str_to_oflag(const char *flags)$/;"	f	file:
str_to_oflag	.vim/bundle/vimproc.vim/src/proc_w32.c	/^str_to_oflag(const char *flags)$/;"	f	file:
sub	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{Appendix subsection}$/;"	b
sub	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{Test section 1}$/;"	b
sub	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\section{Appendix subsection}$/;"	b
sub	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\section{Test section 1}$/;"	b
submode#current	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#current()  "{{{2$/;"	f
submode#enter_with	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#enter_with(submode, modes, options, lhs, ...)  "{{{2$/;"	f
submode#leave_with	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#leave_with(submode, modes, options, lhs)  "{{{2$/;"	f
submode#map	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#map(submode, modes, options, lhs, rhs)  "{{{2$/;"	f
submode#restore_options	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#restore_options()  "{{{2$/;"	f
submode#unmap	.vim/bundle/vim-submode/autoload/submode.vim	/^function! submode#unmap(submode, modes, options, lhs)  "{{{2$/;"	f
SubmodeRestoreOptions	.vim/bundle/vim-submode/autoload/submode.vim	/^command! -bar -nargs=0 SubmodeRestoreOptions  call submode#restore_options()$/;"	c
subprocess	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^import subprocess$/;"	i
substitute_candidate	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/syntax_complete.vim	/^function! s:substitute_candidate(candidate) "{{{$/;"	f
substitute_last	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_last	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:substitute_last(expr, pat, sub)$/;"	f
substitute_last	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_last	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:substitute_path_separator(path)$/;"	f
substitute_path_separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_path_separator	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
substitute_placeholder_marker	.vim/bundle/neosnippet.vim/autoload/neosnippet/view.vim	/^function! s:substitute_placeholder_marker(start, end, snippet_holder_cnt) "{{{$/;"	f
subsub	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{sub}$/;"	b
subsub	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsection{sub}$/;"	b
subsub	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsection{sub}$/;"	b
success	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:success(result)$/;"	f
Sudo	.vim/bundle/sudo.vim/plugin/sudo.vim	/^augroup Sudo$/;"	a
SudoRead	.vim/bundle/sudo.vim/plugin/sudo.vim	/^command! -nargs=1 SudoRead call SudoRead(<f-args>)$/;"	c
SudoRead	.vim/bundle/sudo.vim/plugin/sudo.vim	/^function! SudoRead(url)$/;"	f
SudoWrite	.vim/bundle/sudo.vim/plugin/sudo.vim	/^command! -nargs=1 SudoWrite call SudoWrite(<f-args>)$/;"	c
SudoWrite	.vim/bundle/sudo.vim/plugin/sudo.vim	/^function! SudoWrite (url) abort$/;"	f
SUFFIX	.vim/bundle/vimproc.vim/make_unix.mak	/^	SUFFIX=linux$(if $(wildcard \/lib*\/ld-linux*64.so.2),64,32)$/;"	m
SUFFIX	.vim/bundle/vimproc.vim/make_unix.mak	/^	SUFFIX=unix$/;"	m
suite.after_each	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.after_each()$/;"	f
suite.after_each	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.after_each()$/;"	f
suite.after_each	.vim/bundle/unite.vim/test/matcher.vim	/^function! s:suite.after_each()$/;"	f
suite.after_each	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.after_each()$/;"	f
suite.append	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.append()$/;"	f
suite.autoload	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.autoload()$/;"	f
suite.backquote	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.backquote()$/;"	f
suite.before_each	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/unite.vim/test/matcher.vim	/^function! s:suite.before_each()$/;"	f
suite.before_each	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.before_each()$/;"	f
suite.block_convertion	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.block_convertion()$/;"	f
suite.bundled_circular_reference	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.bundled_circular_reference()$/;"	f
suite.bundled_normal	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.bundled_normal()$/;"	f
suite.bundled_normal2	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.bundled_normal2()$/;"	f
suite.bundled_no_depends	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.bundled_no_depends()$/;"	f
suite.cmd_system1	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system1()$/;"	f
suite.cmd_system2	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system2()$/;"	f
suite.cmd_system3	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.cmd_system3()$/;"	f
suite.comment	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.comment()$/;"	f
suite.default_options	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.default_options()$/;"	f
suite.deprecated	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.deprecated()$/;"	f
suite.escape	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.escape()$/;"	f
suite.fetch_plugins	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.fetch_plugins()$/;"	f
suite.functions	.vim/bundle/vimproc.vim/test/functions.vim	/^function! s:suite.functions()$/;"	f
suite.get_in_paren	.vim/bundle/neosnippet.vim/test/functions.vim	/^function! s:suite.get_in_paren()$/;"	f
suite.gitbucket_git_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.gitbucket_git_repos()$/;"	f
suite.github_git_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.github_git_repos()$/;"	f
suite.hg_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.hg_repos()$/;"	f
suite.invalid_fmode	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.invalid_fmode()$/;"	f
suite.join	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.join()$/;"	f
suite.lua	.vim/bundle/unite.vim/test/matcher.vim	/^function! s:suite.lua()$/;"	f
suite.name_conversion	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.name_conversion()$/;"	f
suite.normal	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.normal()$/;"	f
suite.normal	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.normal()$/;"	f
suite.no_depends	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.no_depends()$/;"	f
suite.no_plugins	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.no_plugins()$/;"	f
suite.no_repository	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.no_repository()$/;"	f
suite.no_toml	.vim/bundle/neobundle.vim/test/toml.vim	/^function! s:suite.no_toml()$/;"	f
suite.parse_directory	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.parse_directory()$/;"	f
suite.parse_redirection	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.parse_redirection()$/;"	f
suite.parse_statements	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.parse_statements()$/;"	f
suite.password_pattern	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.password_pattern()$/;"	f
suite.pattern_a	.vim/bundle/neobundle.vim/test/source.vim	/^function! s:suite.pattern_a()$/;"	f
suite.pattern_b	.vim/bundle/neobundle.vim/test/source.vim	/^function! s:suite.pattern_b()$/;"	f
suite.pattern_c	.vim/bundle/neobundle.vim/test/source.vim	/^function! s:suite.pattern_c()$/;"	f
suite.pattern_d	.vim/bundle/neobundle.vim/test/source.vim	/^function! s:suite.pattern_d()$/;"	f
suite.popen2	.vim/bundle/vimproc.vim/test/popen.vim	/^function! s:suite.popen2()$/;"	f
suite.popen3	.vim/bundle/vimproc.vim/test/popen.vim	/^function! s:suite.popen3()$/;"	f
suite.quote	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.quote()$/;"	f
suite.raw_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.raw_repos()$/;"	f
suite.read	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.read()$/;"	f
suite.read_line	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.read_line()$/;"	f
suite.read_lines	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.read_lines()$/;"	f
suite.read_write	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.read_write()$/;"	f
suite.redirection1	.vim/bundle/vimproc.vim/test/popen.vim	/^function! s:suite.redirection1()$/;"	f
suite.redirection2	.vim/bundle/vimproc.vim/test/popen.vim	/^function! s:suite.redirection2()$/;"	f
suite.revision_check	.vim/bundle/neobundle.vim/test/lock.vim	/^function! s:suite.revision_check()$/;"	f
suite.slash_convertion	.vim/bundle/vimproc.vim/test/parser.vim	/^function! s:suite.slash_convertion()$/;"	f
suite.socket	.vim/bundle/vimproc.vim/test/socket.vim	/^function! s:suite.socket()$/;"	f
suite.sort	.vim/bundle/vimfiler/test/functions.vim	/^function! s:suite.sort()$/;"	f
suite.sorter_rank	.vim/bundle/unite.vim/test/sorter.vim	/^function! s:suite.sorter_rank()$/;"	f
suite.source	.vim/bundle/unite.vim/test/source.vim	/^function! s:suite.source()$/;"	f
suite.ssh_protocol	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.ssh_protocol()$/;"	f
suite.svn_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.svn_repos()$/;"	f
suite.system1	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system1()$/;"	f
suite.system2	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system2()$/;"	f
suite.system_and1	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_and1()$/;"	f
suite.system_and2	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_and2()$/;"	f
suite.system_bg1	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_bg1()$/;"	f
suite.system_bg2	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_bg2()$/;"	f
suite.system_passwd1	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd1()$/;"	f
suite.system_passwd2	.vim/bundle/vimproc.vim/test/system.vim	/^function! s:suite.system_passwd2()$/;"	f
suite.token	.vim/bundle/vimproc.vim/test/lexer.vim	/^function! s:suite.token()$/;"	f
suite.tsort_circular_reference	.vim/bundle/neobundle.vim/test/tsort.vim	/^function! s:suite.tsort_circular_reference()$/;"	f
suite.value	.vim/bundle/vimproc.vim/test/lexer.vim	/^function! s:suite.value()$/;"	f
suite.vba_repos	.vim/bundle/neobundle.vim/test/parse.vim	/^function! s:suite.vba_repos()$/;"	f
suite.with_oflag	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.with_oflag()$/;"	f
suite.write	.vim/bundle/vimproc.vim/test/fopen.vim	/^function! s:suite.write()$/;"	f
sv	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sv :<C-u>vs<CR>$/;"	m
sw	.vim/bundle/vim-go/indent/go.vim	/^	func s:sw()$/;"	f
sw	.vim/conf.d/keymapping/window.keymapping.vim	/^nnoremap sw <C-w>w$/;"	m
switch	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! s:switch(candidate) "{{{$/;"	f
switch	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch() "{{{$/;"	f
switch_to_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch_to_another_vimfiler() "{{{$/;"	f
switch_to_drive	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch_to_drive() "{{{$/;"	f
switch_to_history_directory	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch_to_history_directory() "{{{$/;"	f
switch_to_other_window	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch_to_other_window() "{{{$/;"	f
switch_vim_buffer_mode	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:switch_vim_buffer_mode() "{{{$/;"	f
sync_with_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:sync_with_another_vimfiler() "{{{$/;"	f
sync_with_current_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:sync_with_current_vimfiler() "{{{$/;"	f
syntastic	.vim/bundle/syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	.vim/bundle/syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	.vim/bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	.vim/bundle/syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#dockerfile_lint	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#dockerfile_lint(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#argsescape	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#CygwinPath	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#DevNull	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#dictFilter	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#setWids	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#setWids() abort " {{{2$/;"	f
syntastic#util#shescape	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#Slash	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#stamp	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.AutoToggle	.vim/bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	.vim/bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	.vim/bundle/syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	.vim/bundle/syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.getExec	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.New	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args, ...) abort " {{{2$/;"	f
SyntasticChecker.setVersion	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec() abort " {{{2$/;"	f
SyntasticChecker.wantSort	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticChecker._getOpt	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	.vim/bundle/syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticInfo	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditClasspath$/;"	c
SyntasticJavacEditClasspath	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditConfig$/;"	c
SyntasticJavacEditConfig	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.balloons	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.New	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.setName	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.show	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.Instance	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	.vim/bundle/syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticNotifiers.Instance	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	.vim/bundle/syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticRefreshCursor	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticRegistry.Instance	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticReset	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	.vim/bundle/syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	.vim/bundle/syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
syntax	.vim/bundle/vimtex/after/syntax/tex.vim	/^  let syntax = get(entry, 'syntax', lang)$/;"	v
syntax	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! s:syntax() dict " {{{1$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	.vim/bundle/syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	.vim/bundle/syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	.vim/bundle/syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	.vim/bundle/syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	.vim/bundle/syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	.vim/bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	.vim/bundle/syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	.vim/bundle/syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	.vim/bundle/syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	.vim/bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	.vim/bundle/syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	.vim/bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	.vim/bundle/syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	.vim/bundle/syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	.vim/bundle/syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	.vim/bundle/syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	.vim/bundle/syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	.vim/bundle/syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	.vim/bundle/syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	.vim/bundle/syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	.vim/bundle/syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	.vim/bundle/syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	.vim/bundle/syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	.vim/bundle/syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	.vim/bundle/syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	.vim/bundle/syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/dockerfile/dockerfile_lint.vim	/^function! SyntaxCheckers_dockerfile_dockerfile_lint_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	.vim/bundle/syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	.vim/bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	.vim/bundle/syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	.vim/bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	.vim/bundle/syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	.vim/bundle/syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	.vim/bundle/syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	.vim/bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	.vim/bundle/syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	.vim/bundle/syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	.vim/bundle/syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	.vim/bundle/syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_go_go_GetLocList	.vim/bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	.vim/bundle/syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	.vim/bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	.vim/bundle/syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	.vim/bundle/syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	.vim/bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	.vim/bundle/syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	.vim/bundle/syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	.vim/bundle/syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	.vim/bundle/syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	.vim/bundle/syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	.vim/bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	.vim/bundle/syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	.vim/bundle/syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_jade_jade_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/jade/jade_lint.vim	/^function! SyntaxCheckers_jade_jade_lint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_mixedindentlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/mixedindentlint.vim	/^function! SyntaxCheckers_javascript_mixedindentlint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	.vim/bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	.vim/bundle/syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	.vim/bundle/syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	.vim/bundle/syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	.vim/bundle/syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	.vim/bundle/syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	.vim/bundle/syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	.vim/bundle/syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	.vim/bundle/syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	.vim/bundle/syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	.vim/bundle/syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	.vim/bundle/syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	.vim/bundle/syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	.vim/bundle/syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	.vim/bundle/syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	.vim/bundle/syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	.vim/bundle/syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	.vim/bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	.vim/bundle/syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_GetLocList	.vim/bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	.vim/bundle/syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	.vim/bundle/syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	.vim/bundle/syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	.vim/bundle/syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	.vim/bundle/syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	.vim/bundle/syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	.vim/bundle/syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	.vim/bundle/syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	.vim/bundle/syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	.vim/bundle/syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	.vim/bundle/syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	.vim/bundle/syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	.vim/bundle/syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	.vim/bundle/syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	.vim/bundle/syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	.vim/bundle/syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	.vim/bundle/syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	.vim/bundle/syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	.vim/bundle/syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lintr_GetLocList	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_GetLocList() dict$/;"	f
SyntaxCheckers_r_lintr_IsAvailable	.vim/bundle/syntastic/syntax_checkers/r/lintr.vim	/^function! SyntaxCheckers_r_lintr_IsAvailable() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	.vim/bundle/syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	.vim/bundle/syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	.vim/bundle/syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	.vim/bundle/syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	.vim/bundle/syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	.vim/bundle/syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	.vim/bundle/syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	.vim/bundle/syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	.vim/bundle/syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	.vim/bundle/syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	.vim/bundle/syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slim_lint_GetLocList	.vim/bundle/syntastic/syntax_checkers/slim/slim_lint.vim	/^function! SyntaxCheckers_slim_slim_lint_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	.vim/bundle/syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	.vim/bundle/syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	.vim/bundle/syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	.vim/bundle/syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	.vim/bundle/syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	.vim/bundle/syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	.vim/bundle/syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	.vim/bundle/syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	.vim/bundle/syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	.vim/bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	.vim/bundle/syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	.vim/bundle/syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	.vim/bundle/syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	.vim/bundle/syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	.vim/bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	.vim/bundle/syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	.vim/bundle/syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	.vim/bundle/syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	.vim/bundle/syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	.vim/bundle/syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	.vim/bundle/syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	.vim/bundle/syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	.vim/bundle/syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	.vim/bundle/syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	.vim/bundle/syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	.vim/bundle/syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	.vim/bundle/syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	.vim/bundle/syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
SYS	.vim/bundle/vimproc.vim/Makefile	/^    SYS := $(shell gcc -dumpmachine)$/;"	m
sys	.vim/bundle/vimproc.vim/tools/fork.py	/^import sys$/;"	i
system	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:system(str, ...)$/;"	f
system	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	.vim/bundle/unite.vim/autoload/vital/_unite/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:system(str, ...)$/;"	f
system	.vim/bundle/vim-go/autoload/go/complete.vim	/^fu! s:system(str, ...)$/;"	f
system	.vim/bundle/vim-marching/autoload/vital/_marching/Process.vim	/^function! s:system(str, ...)$/;"	f
system	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:system(cmdline, is_passwd, input, timeout, is_pty) "{{{$/;"	f
Tagbar	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
tagbar#autoopen	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#CloseWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#currentfile	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#OpenWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#toggle_pause	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
TagbarBalloonExpr	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	.vim/bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	.vim/bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
take_while	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
take_while	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:take_while(f, xs)$/;"	f
take_while	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
TAR	.vim/bundle/html5.vim/Makefile	/^TAR=tar czvf$/;"	m
TAR	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^TAR=tar czvf$/;"	m
TARGET	.tools/makefile	/^TARGET  = .\/bin\/$(shell basename `readlink -f .`)$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_android.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_bsd.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_cygwin.mak	/^TARGET=lib\/vimproc_cygwin.dll$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_mac.mak	/^TARGET=lib\/vimproc_mac.so$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_mingw32.mak	/^TARGET=lib\/vimproc_win32.dll$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_mingw64.mak	/^TARGET=lib\/vimproc_win64.dll$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_msvc.mak	/^TARGET = WINNT$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_sunos.mak	/^TARGET=lib\/vimproc_unix.so$/;"	m
TARGET	.vim/bundle/vimproc.vim/make_unix.mak	/^TARGET=lib\/vimproc_$(SUFFIX).so$/;"	m
task	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:task(...)$/;"	f
task_kill	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:task_kill(task)$/;"	f
template	.vim/bundle/vim-css3-syntax/test/test.css	/^template,$/;"	s
templates.hook.priority	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.hook.priority(point) abort$/;"	f
templates.outputter.finish	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.outputter.finish(session) abort$/;"	f
templates.outputter.output	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.outputter.output(data, session) abort$/;"	f
templates.outputter.start	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.outputter.start(session) abort$/;"	f
templates.runner.run	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.runner.run(commands, input, session) abort$/;"	f
templates.runner.shellescape	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:templates.runner.shellescape(str) abort$/;"	f
term	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:term(i) abort$/;"	f
test	.vim/bundle/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
Test chapter 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^Test of starred chapter.$/;"	c
Test chapter 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\mainmatter$/;"	c
Test chapter 1	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^Test of starred chapter.$/;"	c
Test chapter 1	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\chapter*{Test chapter 1}$/;"	c
Test chapter 2	.vim/bundle/vimtex/test/feature/folding/main.tex	/^Some text.$/;"	c
Test chapter 2	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^Some text.$/;"	c
Test section 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^This test document is created to test advanced TOC functionality.$/;"	s
Test section 1	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^This test document is created to test advanced TOC functionality.$/;"	s
Test section 1	.vim/bundle/vimtex/test/issue/241/chapter/section.tex	/^\\section{Test section 1}$/;"	s
Test sub section 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\section{$\\alpha$}$/;"	b
Test sub section 1	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsubsubsection{subsub}$/;"	b
Test sub section 1	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsubsubsection{subsub}$/;"	b
Test sub section 1	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\section{$\\alpha$}$/;"	b
Test sub section 1	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsubsubsection{subsub}$/;"	b
Test sub section 1	.vim/bundle/vimtex/test/issue/241/chapter/section.tex	/^\\section{Test section 1}$/;"	b
Test sub section 2	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{Test sub section 1}$/;"	b
Test sub section 2	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsection{Test sub section 1}$/;"	b
Test with subfile	.vim/bundle/vimtex/test/issue/218/section.tex	/^\\begin{document}$/;"	s
Test without subfile	.vim/bundle/vimtex/test/issue/218/main.tex	/^\\maketitle$/;"	s
Testing more appendix levels	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsubsection{Other text $\\Gamma^{r}$}$/;"	s
Testing more appendix levels	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsubsection{Other text $\\Gamma^{r}$}$/;"	s
Testing more appendix levels	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsubsection{Other text $\\Gamma^{r}$}$/;"	s
Testing TOC levels	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\chapter{Appendix 2}$/;"	s
Testing TOC levels	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\chapter{Test chapter 2}$/;"	s
Testing TOC levels	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\chapter{Appendix 2}$/;"	s
Testing TOC levels	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\chapter{Test chapter 2}$/;"	s
Testing TOC sub levels	.vim/bundle/vimtex/test/feature/folding/main.tex	/^Testing more input and TOC levels.$/;"	b
Testing TOC sub levels	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^Testing more input and TOC levels.$/;"	b
Testing TOC sub levels	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^Testing more input and TOC levels.$/;"	b
Testing TOC sub sub levels	.vim/bundle/vimtex/test/feature/folding/main.tex	/^\\subsection{Testing TOC sub levels}$/;"	b
Testing TOC sub sub levels	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^\\subsection{Testing TOC sub levels}$/;"	b
Testing TOC sub sub levels	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^\\subsection{Testing TOC sub levels}$/;"	b
TEST_CPP_FOR_OPERATOR_CLANG_FORMAT_LONG_MACRO	.vim/bundle/vim-clang-format/t/test.cpp	3;"	d	file:
test_make_context	.vim/bundle/vim-marching/test/autoload/marching.vim	/^function! s:test_make_context()$/;"	f
test_one	.vim/bundle/vim-go/scripts/test.sh	/^test_one() {$/;"	f
test_parse_complete_result_line	.vim/bundle/vim-marching/test/autoload/marching/clang_command.vim	/^function! s:test_parse_complete_result_line()$/;"	f
test_parse_keyword	.vim/bundle/vim-marching/test/autoload/marching.vim	/^function! s:test_parse_keyword()$/;"	f
test_remove_comment	.vim/bundle/vim-marching/test/autoload/marching.vim	/^function! s:test_remove_comment()$/;"	f
test_snippet_requirement	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:test_snippet_requirement(func_name) " {{{1$/;"	f
tex2tree	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:tex2tree(str) " {{{1$/;"	f
tex2unicode	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! s:tex2unicode(line) " {{{1$/;"	f
text	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	.vim/bundle/syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
Text $ Gamma r	.vim/bundle/vimtex/test/feature/folding/main.tex	/^Hello world.$/;"	b
Text $ Gamma r	.vim/bundle/vimtex/test/feature/table-of-contents/appendix.tex	/^Hello world.$/;"	b
Text $ Gamma r	.vim/bundle/vimtex/test/feature/table-of-contents/chapters.tex	/^Hello world.$/;"	b
THEMIS_VIM	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^set THEMIS_VIM=%APPVEYOR_BUILD_FOLDER%\\vim74-kaoriya-win%BIT%\\vim.exe$/;"	v
tick	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:tick(label) abort$/;"	f
TidyEncOptByFenc	.vim/bundle/syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	.vim/bundle/syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
time	.vim/bundle/vim-css3-syntax/test/test.css	/^time,$/;"	s
time	.vim/bundle/vimproc.vim/tools/fork.py	/^import time$/;"	i
timer	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:timer(...)$/;"	f
ToggleAutoclose	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleFold	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleSort	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
toggle_auto_highlight	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_highlight() "{{{$/;"	f
toggle_auto_preview	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_auto_preview() "{{{$/;"	f
toggle_delim_get_new	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! s:toggle_delim_get_new(d1,d2) " {{{1$/;"	f
toggle_mark	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark(map) "{{{$/;"	f
toggle_mark_all_candidates	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_all_candidates() "{{{$/;"	f
toggle_mark_all_lines	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_all_lines() "{{{$/;"	f
toggle_mark_candidates	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_mark_candidates(start, end) "{{{$/;"	f
toggle_mark_current_line	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_current_line(...) "{{{$/;"	f
toggle_mark_lines	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_mark_lines(start, end) "{{{$/;"	f
toggle_maximize_window	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_maximize_window() "{{{$/;"	f
toggle_safe_mode	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_safe_mode() "{{{$/;"	f
toggle_simple_mode	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_simple_mode() "{{{$/;"	f
toggle_transpose_window	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! s:toggle_transpose_window() "{{{$/;"	f
toggle_tree	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_tree(is_recursive) "{{{$/;"	f
toggle_visible_ignore_files	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:toggle_visible_ignore_files() "{{{$/;"	f
top	.vim/bundle/vimproc.vim/src/vimstack.c	/^    char *top;   \/* stack top *\/$/;"	m	struct:vp_stack_t	file:
touch	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:touch(name, cmd) abort$/;"	f
to_message	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^function! s:to_message(fname, line, col, error, text)$/;"	f
traceback	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^import traceback$/;"	i
track	.vim/bundle/vim-css3-syntax/test/test.css	/^track,$/;"	s
TransformUserTypeDef	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
translate_path	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	.vim/bundle/syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trim	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:trim(str)$/;"	f
trim	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:trim(str)$/;"	f
trim	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_bracket	.vim/bundle/vim-go/autoload/go/complete.vim	/^function! s:trim_bracket(val)$/;"	f
trim_end	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
truncate	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:truncate(str, width)$/;"	f
truncate	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_skipping	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator)$/;"	f
truncate_skipping	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
truncate_smart	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
truncate_smart	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator)$/;"	f
truncate_smart	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
tsort_impl	.vim/bundle/neobundle.vim/autoload/neobundle/config.vim	/^function! s:tsort_impl(target, bundles, mark, sorted) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.detect	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^function! s:type.detect(path, opts) "{{{$/;"	f
type.get_commit_date_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_commit_date_command(bundle) "{{{$/;"	f
type.get_gc_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_gc_command(bundle) "{{{$/;"	f
type.get_log_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_log_command(bundle, new_rev, old_rev) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_lock_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^function! s:type.get_revision_lock_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_number_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^function! s:type.get_revision_number_command(bundle) "{{{$/;"	f
type.get_revision_pretty_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_pretty_command(bundle) "{{{$/;"	f
type.get_revision_remote_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_revision_remote_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/git.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/hg.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/none.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/raw.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/svn.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
type.get_sync_command	.vim/bundle/neobundle.vim/autoload/neobundle/types/vba.vim	/^function! s:type.get_sync_command(bundle) "{{{$/;"	f
TypeInfo.createKinddict	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
TypeInfo.New	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
UNAME_S	.vim/bundle/vimproc.vim/Makefile	/^    UNAME_S := $(shell uname -s)$/;"	m
undefine_submode_mapping	.vim/bundle/vim-submode/autoload/submode.vim	/^function! s:undefine_submode_mapping(submode, mode, options, lhs)  "{{{2$/;"	f
unexpand_tree	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:unexpand_tree() "{{{$/;"	f
unify_separator	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^function! s:unify_separator(path) abort$/;"	f
unify_separator	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:unify_separator(path)$/;"	f
uniq	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:uniq(list, ...)$/;"	f
uniq	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:uniq(list)$/;"	f
uniq	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:uniq_by(list, f)$/;"	f
uniq_by	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
Unite	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ Unite$/;"	c
unite#action#do	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do(action_name, ...) "{{{$/;"	f
unite#action#do_candidates	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#do_candidates(action_name, candidates, ...) "{{{$/;"	f
unite#action#get_action_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_action_table(source_name, kind, self_func, ...) "{{{$/;"	f
unite#action#get_alias_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_alias_table(source_name, kind, ...) "{{{$/;"	f
unite#action#get_default_action	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#get_default_action(source_name, kind) "{{{$/;"	f
unite#action#take	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#take(action_name, candidate, is_parent_action) "{{{$/;"	f
unite#action#_get_candidate_action_table	.vim/bundle/unite.vim/autoload/unite/action.vim	/^function! unite#action#_get_candidate_action_table(candidate, sources) "{{{$/;"	f
unite#add_previewed_buffer_list	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#add_source_message	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#add_source_message(message, source_name) "{{{$/;"	f
unite#all_quit_session	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#all_quit_session(...)  "{{{$/;"	f
unite#args_complete	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#args_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#candidates#gather	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#gather(...) "{{{$/;"	f
unite#candidates#_gather_pos	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_gather_pos(offset) "{{{$/;"	f
unite#candidates#_recache	.vim/bundle/unite.vim/autoload/unite/candidates.vim	/^function! unite#candidates#_recache(input, is_force) "{{{$/;"	f
unite#clear_message	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#clear_message() "{{{$/;"	f
unite#complete#args	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#args(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#buffer_name	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#gather	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather(candidates, input) "{{{$/;"	f
unite#complete#gather_lua	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_lua(candidates, input) "{{{$/;"	f
unite#complete#gather_vim	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#gather_vim(candidates, input) "{{{$/;"	f
unite#complete#source	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete#vimfiler	.vim/bundle/unite.vim/autoload/unite/complete.vim	/^function! unite#complete#vimfiler(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_buffer_name	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_buffer_name(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#complete_source	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#complete_source(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#custom#action	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#action(kind, name, action) "{{{$/;"	f
unite#custom#alias	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#alias(kind, name, action) "{{{$/;"	f
unite#custom#default_action	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#default_action(kind, default_action) "{{{$/;"	f
unite#custom#get	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get() "{{{$/;"	f
unite#custom#get_context	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get_context(profile_name) "{{{$/;"	f
unite#custom#get_profile	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#get_profile(profile_name, option_name) "{{{$/;"	f
unite#custom#profile	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#profile(profile_name, option_name, value) "{{{$/;"	f
unite#custom#source	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#source(source_name, option_name, value) "{{{$/;"	f
unite#custom#substitute	.vim/bundle/unite.vim/autoload/unite/custom.vim	/^function! unite#custom#substitute(profile, pattern, subst, ...) "{{{$/;"	f
unite#custom_action	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_action(kind, name, action) "{{{$/;"	f
unite#custom_alias	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_alias(kind, name, action) "{{{$/;"	f
unite#custom_default_action	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_default_action(kind, default_action) "{{{$/;"	f
unite#custom_filters	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_filters(source_name, expr) "{{{$/;"	f
unite#custom_max_candidates	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_max_candidates(source_name, max) "{{{$/;"	f
unite#custom_source	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#custom_source(source_name, option_name, value) "{{{$/;"	f
unite#define_filter	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_filter(filter) "{{{$/;"	f
unite#define_kind	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_kind(kind) "{{{$/;"	f
unite#define_source	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#define_source(source) "{{{$/;"	f
unite#do_action	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#do_action(action) "{{{$/;"	f
unite#dummy_completefunc	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#dummy_completefunc(findstart, base) "{{{$/;"	f
unite#exrename#create_buffer	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! unite#exrename#create_buffer(candidates, ...) "{{{$/;"	f
unite#filters#converter_abbr_word#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_abbr_word.vim	/^function! unite#filters#converter_abbr_word#define() "{{{$/;"	f
unite#filters#converter_default#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#define() "{{{$/;"	f
unite#filters#converter_default#get	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#get() "{{{$/;"	f
unite#filters#converter_default#use	.vim/bundle/unite.vim/autoload/unite/filters/converter_default.vim	/^function! unite#filters#converter_default#use(converters) "{{{$/;"	f
unite#filters#converter_file_directory#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_file_directory.vim	/^function! unite#filters#converter_file_directory#define() "{{{$/;"	f
unite#filters#converter_full_path#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_full_path.vim	/^function! unite#filters#converter_full_path#define() "{{{$/;"	f
unite#filters#converter_nothing#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_nothing.vim	/^function! unite#filters#converter_nothing#define() "{{{$/;"	f
unite#filters#converter_quickfix_default#define	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^function! unite#filters#converter_quickfix_default#define()$/;"	f
unite#filters#converter_quickfix_default#to_message	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_default.vim	/^function! unite#filters#converter_quickfix_default#to_message(fname, line, col, error, text)$/;"	f
unite#filters#converter_quickfix_highlight#define	.vim/bundle/unite-quickfix/autoload/unite/filters/converter_quickfix_highlight.vim	/^function! unite#filters#converter_quickfix_highlight#define()$/;"	f
unite#filters#converter_relative_abbr#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_abbr.vim	/^function! unite#filters#converter_relative_abbr#define() "{{{$/;"	f
unite#filters#converter_relative_word#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#define() "{{{$/;"	f
unite#filters#converter_relative_word#lua	.vim/bundle/unite.vim/autoload/unite/filters/converter_relative_word.vim	/^function! unite#filters#converter_relative_word#lua(candidates, cwd) "{{{$/;"	f
unite#filters#converter_smart_path#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_smart_path.vim	/^function! unite#filters#converter_smart_path#define() "{{{$/;"	f
unite#filters#converter_tail#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail.vim	/^function! unite#filters#converter_tail#define() "{{{$/;"	f
unite#filters#converter_tail_abbr#define	.vim/bundle/unite.vim/autoload/unite/filters/converter_tail_abbr.vim	/^function! unite#filters#converter_tail_abbr#define() "{{{$/;"	f
unite#filters#escape	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#escape(string) "{{{$/;"	f
unite#filters#filter_matcher	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_matcher(list, expr, context) "{{{$/;"	f
unite#filters#filter_patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#fuzzy_escape	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#fuzzy_escape(string) "{{{$/;"	f
unite#filters#globs2lua_patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2lua_patterns(globs) "{{{$/;"	f
unite#filters#globs2patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2patterns(globs) "{{{$/;"	f
unite#filters#globs2vim_patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#globs2vim_patterns(globs) "{{{$/;"	f
unite#filters#lua_filter_head	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_head(candidates, input) "{{{$/;"	f
unite#filters#lua_filter_patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#filters#lua_fuzzy_matcher	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_fuzzy_matcher(candidates, input, ignorecase) "{{{$/;"	f
unite#filters#lua_matcher	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#lua_matcher(candidates, input, ignorecase) "{{{$/;"	f
unite#filters#matcher_context#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_context.vim	/^function! unite#filters#matcher_context#define() "{{{$/;"	f
unite#filters#matcher_default#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#define() "{{{$/;"	f
unite#filters#matcher_default#get	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#get() "{{{$/;"	f
unite#filters#matcher_default#use	.vim/bundle/unite.vim/autoload/unite/filters/matcher_default.vim	/^function! unite#filters#matcher_default#use(matchers) "{{{$/;"	f
unite#filters#matcher_fuzzy#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#define() "{{{$/;"	f
unite#filters#matcher_fuzzy#get_fuzzy_input	.vim/bundle/unite.vim/autoload/unite/filters/matcher_fuzzy.vim	/^function! unite#filters#matcher_fuzzy#get_fuzzy_input(input) "{{{$/;"	f
unite#filters#matcher_glob#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#define() "{{{$/;"	f
unite#filters#matcher_glob#glob_matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_glob.vim	/^function! unite#filters#matcher_glob#glob_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_hide_current_file#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_current_file.vim	/^function! unite#filters#matcher_hide_current_file#define() "{{{$/;"	f
unite#filters#matcher_hide_hidden_files#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_hide_hidden_files.vim	/^function! unite#filters#matcher_hide_hidden_files#define() "{{{$/;"	f
unite#filters#matcher_migemo#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_migemo.vim	/^function! unite#filters#matcher_migemo#define() "{{{$/;"	f
unite#filters#matcher_project_files#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_files.vim	/^function! unite#filters#matcher_project_files#define() "{{{$/;"	f
unite#filters#matcher_project_ignore_files#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! unite#filters#matcher_project_ignore_files#define() "{{{$/;"	f
unite#filters#matcher_project_ignore_files#get_ignore_results	.vim/bundle/unite.vim/autoload/unite/filters/matcher_project_ignore_files.vim	/^function! unite#filters#matcher_project_ignore_files#get_ignore_results(path) "{{{$/;"	f
unite#filters#matcher_regexp#define	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#define() "{{{$/;"	f
unite#filters#matcher_regexp#get_expr	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#get_expr(input, context) "{{{$/;"	f
unite#filters#matcher_regexp#regexp_matcher	.vim/bundle/unite.vim/autoload/unite/filters/matcher_regexp.vim	/^function! unite#filters#matcher_regexp#regexp_matcher(candidates, input, context) "{{{$/;"	f
unite#filters#matcher_vimfiler_mask#define	.vim/bundle/vimfiler/autoload/unite/filters/matcher_vimfiler_mask.vim	/^function! unite#filters#matcher_vimfiler_mask#define() "{{{$/;"	f
unite#filters#sorter_default#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#define() "{{{$/;"	f
unite#filters#sorter_default#get	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#get() "{{{$/;"	f
unite#filters#sorter_default#use	.vim/bundle/unite.vim/autoload/unite/filters/sorter_default.vim	/^function! unite#filters#sorter_default#use(sorters) "{{{$/;"	f
unite#filters#sorter_ftime#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_ftime.vim	/^function! unite#filters#sorter_ftime#define() "{{{$/;"	f
unite#filters#sorter_length#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_length.vim	/^function! unite#filters#sorter_length#define() "{{{$/;"	f
unite#filters#sorter_nothing#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_nothing.vim	/^function! unite#filters#sorter_nothing#define() "{{{$/;"	f
unite#filters#sorter_rank#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#define() "{{{$/;"	f
unite#filters#sorter_rank#_sort	.vim/bundle/unite.vim/autoload/unite/filters/sorter_rank.vim	/^function! unite#filters#sorter_rank#_sort(candidates, input_list, has_lua) "{{{$/;"	f
unite#filters#sorter_reverse#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_reverse.vim	/^function! unite#filters#sorter_reverse#define() "{{{$/;"	f
unite#filters#sorter_selecta#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#define()$/;"	f
unite#filters#sorter_selecta#_sort	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.vim	/^function! unite#filters#sorter_selecta#_sort(candidates, input)$/;"	f
unite#filters#sorter_word#define	.vim/bundle/unite.vim/autoload/unite/filters/sorter_word.vim	/^function! unite#filters#sorter_word#define() "{{{$/;"	f
unite#filters#vim_filter_head	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_head(candidates, input) "{{{$/;"	f
unite#filters#vim_filter_pattern	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_pattern(candidates, pattern) "{{{$/;"	f
unite#filters#vim_filter_patterns	.vim/bundle/unite.vim/autoload/unite/filters.vim	/^function! unite#filters#vim_filter_patterns(candidates, patterns, whites) "{{{$/;"	f
unite#force_quit_session	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#force_quit_session()  "{{{$/;"	f
unite#force_redraw	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#force_redraw(...) "{{{$/;"	f
unite#get_all_sources	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_all_sources(...) "{{{$/;"	f
unite#get_candidates	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_candidates(...) "{{{$/;"	f
unite#get_context	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_context() "{{{$/;"	f
unite#get_current_unite	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_current_unite() "{{{$/;"	f
unite#get_cur_text	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_cur_text() "{{{$/;"	f
unite#get_data_directory	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_data_directory() "{{{$/;"	f
unite#get_filters	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_filters(...) "{{{$/;"	f
unite#get_input	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_input() "{{{$/;"	f
unite#get_kinds	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_kinds(...) "{{{$/;"	f
unite#get_marked_candidates	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_marked_candidates() "{{{$/;"	f
unite#get_profile	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_profile(profile_name, option_name) "{{{$/;"	f
unite#get_self_functions	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_self_functions() "{{{$/;"	f
unite#get_sources	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_sources(...) "{{{$/;"	f
unite#get_status_string	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_status_string() "{{{$/;"	f
unite#get_unite_candidates	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_unite_candidates() "{{{$/;"	f
unite#get_unite_winnr	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#get_vimfiler_candidates	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_candidates(...) "{{{$/;"	f
unite#get_vimfiler_source_names	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#get_vimfiler_source_names() "{{{$/;"	f
unite#handlers#_on_bufwin_enter	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_bufwin_enter(bufnr)  "{{{$/;"	f
unite#handlers#_on_buf_unload	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_buf_unload(bufname)  "{{{$/;"	f
unite#handlers#_on_cursor_hold	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold()  "{{{$/;"	f
unite#handlers#_on_cursor_hold_i	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_hold_i()  "{{{$/;"	f
unite#handlers#_on_cursor_moved	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved()  "{{{$/;"	f
unite#handlers#_on_cursor_moved_i	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_cursor_moved_i()  "{{{$/;"	f
unite#handlers#_on_insert_char_pre	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_char_pre()  "{{{$/;"	f
unite#handlers#_on_insert_enter	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_enter()  "{{{$/;"	f
unite#handlers#_on_insert_leave	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_insert_leave()  "{{{$/;"	f
unite#handlers#_on_text_changed	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_on_text_changed()  "{{{$/;"	f
unite#handlers#_restore_updatetime	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_restore_updatetime()  "{{{$/;"	f
unite#handlers#_save_updatetime	.vim/bundle/unite.vim/autoload/unite/handlers.vim	/^function! unite#handlers#_save_updatetime()  "{{{$/;"	f
unite#helper#adjustments	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#adjustments(currentwinwidth, the_max_source_name, size) "{{{$/;"	f
unite#helper#call_filter	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_filter(filter_name, candidates, context) "{{{$/;"	f
unite#helper#call_hook	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_hook(sources, hook_name) "{{{$/;"	f
unite#helper#call_source_filters	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#call_source_filters(filters, candidates, context, source) "{{{$/;"	f
unite#helper#choose_window	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#choose_window() "{{{$/;"	f
unite#helper#complete_search_history	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#complete_search_history(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#helper#convert_source_name	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#convert_source_name(source_name) "{{{$/;"	f
unite#helper#cursor_prompt	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#cursor_prompt() "{{{$/;"	f
unite#helper#get_buffer_directory	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_buffer_directory(bufnr) "{{{$/;"	f
unite#helper#get_candidate_directory	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_candidate_directory(candidate) "{{{$/;"	f
unite#helper#get_choose_windows	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_choose_windows() "{{{$/;"	f
unite#helper#get_current_candidate	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate(...) "{{{$/;"	f
unite#helper#get_current_candidate_linenr	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_current_candidate_linenr(num) "{{{$/;"	f
unite#helper#get_input	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_input(...) "{{{$/;"	f
unite#helper#get_input_list	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_input_list(input) abort "{{{$/;"	f
unite#helper#get_marked_candidates	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_marked_candidates() "{{{$/;"	f
unite#helper#get_postfix	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_postfix(prefix, is_create, ...) "{{{$/;"	f
unite#helper#get_source_args	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_args(sources) "{{{$/;"	f
unite#helper#get_source_names	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_source_names(sources) "{{{$/;"	f
unite#helper#get_substitute_input	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input(input) "{{{$/;"	f
unite#helper#get_substitute_input_loop	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_substitute_input_loop(input, substitute_patterns) "{{{$/;"	f
unite#helper#get_unite_bufnr	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_bufnr(buffer_name) "{{{$/;"	f
unite#helper#get_unite_winnr	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#get_unite_winnr(buffer_name) "{{{$/;"	f
unite#helper#ignore_candidates	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#ignore_candidates(candidates, context) "{{{$/;"	f
unite#helper#invalidate_cache	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#invalidate_cache(source_name)  "{{{$/;"	f
unite#helper#is_prompt	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#is_prompt(line) "{{{$/;"	f
unite#helper#is_pty	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#is_pty(command) "{{{$/;"	f
unite#helper#join_targets	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#join_targets(targets) "{{{$/;"	f
unite#helper#parse_options	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options(cmdline) "{{{$/;"	f
unite#helper#parse_options_args	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_args(cmdline) "{{{$/;"	f
unite#helper#parse_options_user	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_options_user(args) "{{{$/;"	f
unite#helper#parse_source_args	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_source_args(args) "{{{$/;"	f
unite#helper#parse_source_path	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#parse_source_path(path) "{{{$/;"	f
unite#helper#paths2candidates	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^  function! unite#helper#paths2candidates(paths) "{{{$/;"	f
unite#helper#relative_target	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#relative_target(target) "{{{$/;"	f
unite#helper#skip_prompt	.vim/bundle/unite.vim/autoload/unite/helper.vim	/^function! unite#helper#skip_prompt() "{{{$/;"	f
unite#init#_candidates	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates(candidates) "{{{$/;"	f
unite#init#_candidates_source	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_candidates_source(candidates, source_name) "{{{$/;"	f
unite#init#_context	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_context(context, ...) "{{{$/;"	f
unite#init#_current_unite	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_current_unite(sources, context) "{{{$/;"	f
unite#init#_default_scripts	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_default_scripts(kind, names) "{{{$/;"	f
unite#init#_filters	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_filters() "{{{$/;"	f
unite#init#_kinds	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_kinds() "{{{$/;"	f
unite#init#_loaded_sources	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_loaded_sources(sources, context) "{{{$/;"	f
unite#init#_sources	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_sources(...) "{{{$/;"	f
unite#init#_tab_variables	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_tab_variables() "{{{$/;"	f
unite#init#_unite_buffer	.vim/bundle/unite.vim/autoload/unite/init.vim	/^function! unite#init#_unite_buffer() "{{{$/;"	f
unite#is_win	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#is_win() "{{{$/;"	f
unite#kinds#buffer#define	.vim/bundle/unite.vim/autoload/unite/kinds/buffer.vim	/^function! unite#kinds#buffer#define() "{{{$/;"	f
unite#kinds#cdable#define	.vim/bundle/unite.vim/autoload/unite/kinds/cdable.vim	/^function! unite#kinds#cdable#define() "{{{$/;"	f
unite#kinds#command#define	.vim/bundle/unite.vim/autoload/unite/kinds/command.vim	/^function! unite#kinds#command#define() "{{{$/;"	f
unite#kinds#common#define	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#define() "{{{$/;"	f
unite#kinds#common#insert_word	.vim/bundle/unite.vim/autoload/unite/kinds/common.vim	/^function! unite#kinds#common#insert_word(word, ...) "{{{$/;"	f
unite#kinds#completion#define	.vim/bundle/unite.vim/autoload/unite/kinds/completion.vim	/^function! unite#kinds#completion#define() "{{{$/;"	f
unite#kinds#directory#define	.vim/bundle/unite.vim/autoload/unite/kinds/directory.vim	/^function! unite#kinds#directory#define() "{{{$/;"	f
unite#kinds#file#complete_overwrite_method	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#complete_overwrite_method(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#kinds#file#define	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#define() "{{{$/;"	f
unite#kinds#file#do_action	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_action(candidates, dest_dir, action_name) "{{{$/;"	f
unite#kinds#file#do_rename	.vim/bundle/unite.vim/autoload/unite/kinds/file.vim	/^function! unite#kinds#file#do_rename(old_filename, new_filename) "{{{$/;"	f
unite#kinds#file_base#define	.vim/bundle/unite.vim/autoload/unite/kinds/file_base.vim	/^function! unite#kinds#file_base#define() "{{{$/;"	f
unite#kinds#file_vimfiler_base#define	.vim/bundle/unite.vim/autoload/unite/kinds/file_vimfiler_base.vim	/^function! unite#kinds#file_vimfiler_base#define() "{{{$/;"	f
unite#kinds#guicmd#define	.vim/bundle/unite.vim/autoload/unite/kinds/guicmd.vim	/^function! unite#kinds#guicmd#define() "{{{$/;"	f
unite#kinds#jump_list#define	.vim/bundle/unite.vim/autoload/unite/kinds/jump_list.vim	/^function! unite#kinds#jump_list#define() "{{{$/;"	f
unite#kinds#neobundle#define	.vim/bundle/neobundle.vim/autoload/unite/kinds/neobundle.vim	/^function! unite#kinds#neobundle#define() "{{{$/;"	f
unite#kinds#openable#define	.vim/bundle/unite.vim/autoload/unite/kinds/openable.vim	/^function! unite#kinds#openable#define() "{{{$/;"	f
unite#kinds#source#define	.vim/bundle/unite.vim/autoload/unite/kinds/source.vim	/^function! unite#kinds#source#define() "{{{$/;"	f
unite#kinds#tab#define	.vim/bundle/unite.vim/autoload/unite/kinds/tab.vim	/^function! unite#kinds#tab#define() "{{{$/;"	f
unite#kinds#uri#define	.vim/bundle/unite.vim/autoload/unite/kinds/uri.vim	/^function! unite#kinds#uri#define() "{{{$/;"	f
unite#kinds#window#define	.vim/bundle/unite.vim/autoload/unite/kinds/window.vim	/^function! unite#kinds#window#define() "{{{$/;"	f
unite#kinds#word#define	.vim/bundle/unite.vim/autoload/unite/kinds/word.vim	/^function! unite#kinds#word#define() "{{{$/;"	f
unite#loaded_sources_list	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_sources_list() "{{{$/;"	f
unite#loaded_source_names	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names() "{{{$/;"	f
unite#loaded_source_names_string	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#loaded_source_names_string() "{{{$/;"	f
unite#mappings#cursor_down	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_down(is_skip_not_matched) "{{{$/;"	f
unite#mappings#cursor_up	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#cursor_up(is_skip_not_matched) "{{{$/;"	f
unite#mappings#define_default_mappings	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#define_default_mappings() "{{{$/;"	f
unite#mappings#do_action	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#do_action(...) "{{{$/;"	f
unite#mappings#get_current_converters	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_converters() "{{{$/;"	f
unite#mappings#get_current_matchers	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_matchers() "{{{$/;"	f
unite#mappings#get_current_sorters	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#get_current_sorters() "{{{$/;"	f
unite#mappings#loop_cursor_down	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_down(mode) "{{{$/;"	f
unite#mappings#loop_cursor_up	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#loop_cursor_up(mode) "{{{$/;"	f
unite#mappings#narrowing	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#narrowing(word, ...) "{{{$/;"	f
unite#mappings#set_current_converters	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_converters(converters) "{{{$/;"	f
unite#mappings#set_current_matchers	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_matchers(matchers) "{{{$/;"	f
unite#mappings#set_current_sorters	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#set_current_sorters(sorters) "{{{$/;"	f
unite#mappings#_choose_action	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_choose_action(candidates, ...) "{{{$/;"	f
unite#mappings#_quick_match	.vim/bundle/unite.vim/autoload/unite/mappings.vim	/^function! unite#mappings#_quick_match(is_jump) "{{{$/;"	f
unite#path2directory	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#path2directory(path) "{{{$/;"	f
unite#print_error	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_error(message) "{{{$/;"	f
unite#print_message	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_message(message) "{{{$/;"	f
unite#print_source_error	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_error(message, source_name) "{{{$/;"	f
unite#print_source_message	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#print_source_message(message, source_name) "{{{$/;"	f
unite#quit_session	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#quit_session()  "{{{$/;"	f
unite#redraw	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#redraw(...) "{{{$/;"	f
unite#remove_previewed_buffer_list	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#resume	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#resume(...) "{{{$/;"	f
unite#set_buffer_name_option	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_buffer_name_option(buffer_name, option_name, value) "{{{$/;"	f
unite#set_context	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_context(context) "{{{$/;"	f
unite#set_current_unite	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_current_unite(unite) "{{{$/;"	f
unite#set_profile	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_profile(profile_name, option_name, value) "{{{$/;"	f
unite#set_substitute_pattern	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#set_substitute_pattern(buffer_name, pattern, subst, ...) "{{{$/;"	f
unite#smart_map	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#smart_map(narrow_map, select_map) "{{{$/;"	f
unite#sources#action#define	.vim/bundle/unite.vim/autoload/unite/sources/action.vim	/^function! unite#sources#action#define()$/;"	f
unite#sources#alias#define	.vim/bundle/unite.vim/autoload/unite/sources/alias.vim	/^function! unite#sources#alias#define()$/;"	f
unite#sources#bookmark#define	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#define() "{{{$/;"	f
unite#sources#bookmark#_append	.vim/bundle/unite.vim/autoload/unite/sources/bookmark.vim	/^function! unite#sources#bookmark#_append(filename) "{{{$/;"	f
unite#sources#buffer#define	.vim/bundle/unite.vim/autoload/unite/sources/buffer.vim	/^function! unite#sources#buffer#define() "{{{$/;"	f
unite#sources#buffer#variables#append	.vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#append(bufnr) "{{{$/;"	f
unite#sources#buffer#variables#get_buffer_list	.vim/bundle/unite.vim/autoload/unite/sources/buffer/variables.vim	/^function! unite#sources#buffer#variables#get_buffer_list() "{{{$/;"	f
unite#sources#change#define	.vim/bundle/unite.vim/autoload/unite/sources/change.vim	/^function! unite#sources#change#define() "{{{$/;"	f
unite#sources#command#define	.vim/bundle/unite.vim/autoload/unite/sources/command.vim	/^function! unite#sources#command#define() "{{{$/;"	f
unite#sources#directory#define	.vim/bundle/unite.vim/autoload/unite/sources/directory.vim	/^function! unite#sources#directory#define() "{{{$/;"	f
unite#sources#file#complete_directory	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_directory(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#complete_file	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#complete_file(args, context, arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#file#copy_files	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#copy_files(dest, srcs) "{{{$/;"	f
unite#sources#file#create_file_dict	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_file_dict(file, is_relative_path, ...) "{{{$/;"	f
unite#sources#file#create_vimfiler_dict	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#create_vimfiler_dict(candidate, exts) "{{{$/;"	f
unite#sources#file#define	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#define() "{{{$/;"	f
unite#sources#file#delete_files	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#delete_files(srcs) "{{{$/;"	f
unite#sources#file#get_file_source	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#get_file_source() "{{{$/;"	f
unite#sources#file#move_files	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#move_files(dest, srcs) "{{{$/;"	f
unite#sources#file#_clear_cache	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_clear_cache() "{{{$/;"	f
unite#sources#file#_get_files	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_files(input, context) "{{{$/;"	f
unite#sources#file#_get_input	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_input(path, context) "{{{$/;"	f
unite#sources#file#_get_path	.vim/bundle/unite.vim/autoload/unite/sources/file.vim	/^function! unite#sources#file#_get_path(args, context) "{{{$/;"	f
unite#sources#file_include#define	.vim/bundle/neocomplcache/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#file_list#define	.vim/bundle/unite.vim/autoload/unite/sources/file_list.vim	/^function! unite#sources#file_list#define() "{{{$/;"	f
unite#sources#file_point#define	.vim/bundle/unite.vim/autoload/unite/sources/file_point.vim	/^function! unite#sources#file_point#define() "{{{$/;"	f
unite#sources#find#define	.vim/bundle/unite.vim/autoload/unite/sources/find.vim	/^function! unite#sources#find#define() "{{{$/;"	f
unite#sources#function#define	.vim/bundle/unite.vim/autoload/unite/sources/function.vim	/^function! unite#sources#function#define() "{{{$/;"	f
unite#sources#grep#define	.vim/bundle/unite.vim/autoload/unite/sources/grep.vim	/^function! unite#sources#grep#define() "{{{$/;"	f
unite#sources#grep_git#define	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^function! unite#sources#grep_git#define() abort "{{{$/;"	f
unite#sources#grep_git#is_available	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^function! unite#sources#grep_git#is_available() abort "{{{$/;"	f
unite#sources#grep_git#repository_root	.vim/bundle/unite.vim/autoload/unite/sources/grep_git.vim	/^function! unite#sources#grep_git#repository_root() abort "{{{$/;"	f
unite#sources#history_input#define	.vim/bundle/unite.vim/autoload/unite/sources/history_input.vim	/^function! unite#sources#history_input#define()$/;"	f
unite#sources#history_unite#add	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#add(unite)"{{{$/;"	f
unite#sources#history_unite#define	.vim/bundle/unite.vim/autoload/unite/sources/history_unite.vim	/^function! unite#sources#history_unite#define()$/;"	f
unite#sources#interactive#define	.vim/bundle/unite.vim/autoload/unite/sources/interactive.vim	/^function! unite#sources#interactive#define()$/;"	f
unite#sources#jump#define	.vim/bundle/unite.vim/autoload/unite/sources/jump.vim	/^function! unite#sources#jump#define() "{{{$/;"	f
unite#sources#jump_point#define	.vim/bundle/unite.vim/autoload/unite/sources/jump_point.vim	/^function! unite#sources#jump_point#define() "{{{$/;"	f
unite#sources#launcher#define	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#define() "{{{$/;"	f
unite#sources#launcher#get_executables	.vim/bundle/unite.vim/autoload/unite/sources/launcher.vim	/^function! unite#sources#launcher#get_executables(path) "{{{$/;"	f
unite#sources#line#define	.vim/bundle/unite.vim/autoload/unite/sources/line.vim	/^function! unite#sources#line#define() "{{{$/;"	f
unite#sources#location_list#define	.vim/bundle/unite-quickfix/autoload/unite/sources/location_list.vim	/^function! unite#sources#location_list#define()$/;"	f
unite#sources#mapping#define	.vim/bundle/unite.vim/autoload/unite/sources/mapping.vim	/^function! unite#sources#mapping#define() "{{{$/;"	f
unite#sources#menu#define	.vim/bundle/unite.vim/autoload/unite/sources/menu.vim	/^function! unite#sources#menu#define()$/;"	f
unite#sources#neobundle#define	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle.vim	/^function! unite#sources#neobundle#define() "{{{$/;"	f
unite#sources#neobundle_install#define	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_install.vim	/^function! unite#sources#neobundle_install#define() "{{{$/;"	f
unite#sources#neobundle_lazy#define	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_lazy.vim	/^function! unite#sources#neobundle_lazy#define() "{{{$/;"	f
unite#sources#neobundle_log#define	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_log.vim	/^function! unite#sources#neobundle_log#define() "{{{$/;"	f
unite#sources#neobundle_search#complete_plugin_names	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! unite#sources#neobundle_search#complete_plugin_names(arglead, cmdline, cursorpos) "{{{$/;"	f
unite#sources#neobundle_search#define	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! unite#sources#neobundle_search#define() "{{{$/;"	f
unite#sources#neocomplcache#define	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#define() "{{{$/;"	f
unite#sources#neocomplcache#start_complete	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_complete() "{{{$/;"	f
unite#sources#neocomplcache#start_quick_match	.vim/bundle/neocomplcache/autoload/unite/sources/neocomplcache.vim	/^function! unite#sources#neocomplcache#start_quick_match() "{{{$/;"	f
unite#sources#neosnippet#define	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#define() "{{{$/;"	f
unite#sources#neosnippet#start_complete	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet.vim	/^function! unite#sources#neosnippet#start_complete() "{{{$/;"	f
unite#sources#neosnippet_file#define	.vim/bundle/neosnippet.vim/autoload/unite/sources/neosnippet_file.vim	/^function! unite#sources#neosnippet_file#define() "{{{$/;"	f
unite#sources#output#define	.vim/bundle/unite.vim/autoload/unite/sources/output.vim	/^function! unite#sources#output#define() "{{{$/;"	f
unite#sources#output_shellcmd#define	.vim/bundle/unite.vim/autoload/unite/sources/output_shellcmd.vim	/^function! unite#sources#output_shellcmd#define() "{{{$/;"	f
unite#sources#process#define	.vim/bundle/unite.vim/autoload/unite/sources/process.vim	/^function! unite#sources#process#define() "{{{$/;"	f
unite#sources#quickfix#color_tag_syntax	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#color_tag_syntax(name, first, last)$/;"	f
unite#sources#quickfix#define	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#define()$/;"	f
unite#sources#quickfix#get_quickfix_title	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#get_quickfix_title(...)$/;"	f
unite#sources#quickfix#highlight_disable	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#highlight_disable()$/;"	f
unite#sources#quickfix#highlight_enable	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#highlight_enable()$/;"	f
unite#sources#quickfix#hl_candidates	.vim/bundle/unite-quickfix/autoload/unite/sources/quickfix.vim	/^function! unite#sources#quickfix#hl_candidates(context)$/;"	f
unite#sources#rec#define	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#define() "{{{$/;"	f
unite#sources#rec#_append	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#_append() "{{{$/;"	f
unite#sources#rec#_remote_append	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! unite#sources#rec#_remote_append(candidates, eof) "{{{$/;"	f
unite#sources#register#define	.vim/bundle/unite.vim/autoload/unite/sources/register.vim	/^function! unite#sources#register#define() "{{{$/;"	f
unite#sources#resume#define	.vim/bundle/unite.vim/autoload/unite/sources/resume.vim	/^function! unite#sources#resume#define() "{{{$/;"	f
unite#sources#runtimepath#define	.vim/bundle/unite.vim/autoload/unite/sources/runtimepath.vim	/^function! unite#sources#runtimepath#define() "{{{$/;"	f
unite#sources#script#define	.vim/bundle/unite.vim/autoload/unite/sources/script.vim	/^function! unite#sources#script#define()$/;"	f
unite#sources#source#define	.vim/bundle/unite.vim/autoload/unite/sources/source.vim	/^function! unite#sources#source#define() "{{{$/;"	f
unite#sources#tab#define	.vim/bundle/unite.vim/autoload/unite/sources/tab.vim	/^function! unite#sources#tab#define() "{{{$/;"	f
unite#sources#vimfiler_drive#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_drive.vim	/^function! unite#sources#vimfiler_drive#define() "{{{$/;"	f
unite#sources#vimfiler_execute#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_execute.vim	/^function! unite#sources#vimfiler_execute#define() "{{{$/;"	f
unite#sources#vimfiler_history#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_history.vim	/^function! unite#sources#vimfiler_history#define() "{{{$/;"	f
unite#sources#vimfiler_mask#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_mask.vim	/^function! unite#sources#vimfiler_mask#define() "{{{$/;"	f
unite#sources#vimfiler_popd#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! unite#sources#vimfiler_popd#define() "{{{$/;"	f
unite#sources#vimfiler_popd#pushd	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_popd.vim	/^function! unite#sources#vimfiler_popd#pushd() "{{{$/;"	f
unite#sources#vimfiler_sort#define	.vim/bundle/vimfiler/autoload/unite/sources/vimfiler_sort.vim	/^function! unite#sources#vimfiler_sort#define() "{{{$/;"	f
unite#sources#vimgrep#define	.vim/bundle/unite.vim/autoload/unite/sources/vimgrep.vim	/^function! unite#sources#vimgrep#define() "{{{$/;"	f
unite#sources#window#define	.vim/bundle/unite.vim/autoload/unite/sources/window.vim	/^function! unite#sources#window#define() "{{{$/;"	f
unite#sources#window_gui#define	.vim/bundle/unite.vim/autoload/unite/sources/window_gui.vim	/^function! unite#sources#window_gui#define() "{{{$/;"	f
unite#start	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start(...) "{{{$/;"	f
unite#start#complete	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#complete(sources, ...) "{{{$/;"	f
unite#start#get_candidates	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_candidates(sources, ...) "{{{$/;"	f
unite#start#get_vimfiler_candidates	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#get_vimfiler_candidates(sources, ...) "{{{$/;"	f
unite#start#resume	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume(buffer_name, ...) "{{{$/;"	f
unite#start#resume_from_temporary	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#resume_from_temporary(context)  "{{{$/;"	f
unite#start#script	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#script(sources, ...) "{{{$/;"	f
unite#start#standard	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#standard(sources, ...) "{{{$/;"	f
unite#start#temporary	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#temporary(sources, ...) "{{{$/;"	f
unite#start#vimfiler_check_filetype	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#vimfiler_check_filetype(sources, ...) "{{{$/;"	f
unite#start#_pos	.vim/bundle/unite.vim/autoload/unite/start.vim	/^function! unite#start#_pos(buffer_name, direction, count) "{{{$/;"	f
unite#start_complete	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_complete(...) "{{{$/;"	f
unite#start_script	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_script(...) "{{{$/;"	f
unite#start_temporary	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#start_temporary(...) "{{{$/;"	f
unite#substitute_path_separator	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#substitute_path_separator(path) "{{{$/;"	f
unite#take_action	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#take_action(action_name, candidate) "{{{$/;"	f
unite#take_parents_action	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#take_parents_action(action_name, candidate, extend_candidate) "{{{$/;"	f
unite#undef_filter	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_filter(name) "{{{$/;"	f
unite#undef_kind	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_kind(name) "{{{$/;"	f
unite#undef_source	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#undef_source(name) "{{{$/;"	f
unite#util#alternate_buffer	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#alternate_buffer() "{{{$/;"	f
unite#util#command_with_restore_cursor	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#command_with_restore_cursor(command) "{{{$/;"	f
unite#util#convert2list	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#convert2list(expr) "{{{$/;"	f
unite#util#escape_file_searching	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_file_searching(buffer_name)$/;"	f
unite#util#escape_match	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_match(str) "{{{$/;"	f
unite#util#escape_pattern	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_pattern(...)$/;"	f
unite#util#escape_shell	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#escape_shell(str) "{{{$/;"	f
unite#util#expand	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#expand(path) "{{{$/;"	f
unite#util#get_last_errmsg	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_errmsg()$/;"	f
unite#util#get_last_status	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_last_status(...)$/;"	f
unite#util#get_name	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_name(list, name, default) "{{{$/;"	f
unite#util#get_vital	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#get_vital() "{{{$/;"	f
unite#util#glob	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#glob(pattern, ...) "{{{$/;"	f
unite#util#has_lua	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_lua()$/;"	f
unite#util#has_vimproc	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#has_vimproc(...)$/;"	f
unite#util#iconv	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#iconv(...)$/;"	f
unite#util#index_name	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#index_name(list, name) "{{{$/;"	f
unite#util#input	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input(prompt, ...) "{{{$/;"	f
unite#util#input_directory	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_directory(message) "{{{$/;"	f
unite#util#input_yesno	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#input_yesno(message) "{{{$/;"	f
unite#util#is_cmdwin	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_cmdwin() "{{{$/;"	f
unite#util#is_mac	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_mac(...)$/;"	f
unite#util#is_sudo	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_sudo() "{{{$/;"	f
unite#util#is_win	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_win(...)$/;"	f
unite#util#is_windows	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#is_windows(...)$/;"	f
unite#util#lcd	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#lcd(dir) "{{{$/;"	f
unite#util#move	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#move(src, dest) "{{{$/;"	f
unite#util#open	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#open(path) "{{{$/;"	f
unite#util#path2directory	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2directory(...)$/;"	f
unite#util#path2project_directory	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#path2project_directory(...)$/;"	f
unite#util#print_error	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#print_error(msg)$/;"	f
unite#util#read_lines	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#read_lines(source, ...) "{{{$/;"	f
unite#util#set_default	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default(var, val, ...)  "{{{$/;"	f
unite#util#set_default_dictionary_helper	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#set_dictionary_helper	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
unite#util#smart_execute_command	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_execute_command(action, word)$/;"	f
unite#util#smart_open_command	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#smart_open_command(action, word)$/;"	f
unite#util#sort_by	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#sort_by(...)$/;"	f
unite#util#strchars	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strchars(...)$/;"	f
unite#util#strwidthpart	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart(...)$/;"	f
unite#util#strwidthpart_reverse	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#strwidthpart_reverse(...)$/;"	f
unite#util#substitute_path_separator	.vim/bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(...)$/;"	f
unite#util#substitute_path_separator	.vim/bundle/unite.vim/autoload/unite/util.vim	/^  function! unite#util#substitute_path_separator(path)$/;"	f
unite#util#system	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system(...)$/;"	f
unite#util#system_passwd	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#system_passwd(...)$/;"	f
unite#util#truncate	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate(...)$/;"	f
unite#util#truncate_smart	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_smart(...)$/;"	f
unite#util#truncate_wrap	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#truncate_wrap(str, max, footer_width, separator) "{{{$/;"	f
unite#util#uniq	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq(...)$/;"	f
unite#util#uniq_by	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#uniq_by(...)$/;"	f
unite#util#wcswidth	.vim/bundle/unite.vim/autoload/unite/util.vim	/^function! unite#util#wcswidth(string)$/;"	f
unite#variables#all_sources	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#all_sources(...) "{{{$/;"	f
unite#variables#current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#current_unite() "{{{$/;"	f
unite#variables#default_context	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#default_context() "{{{$/;"	f
unite#variables#disable_current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#disable_current_unite() "{{{$/;"	f
unite#variables#dynamic	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#dynamic() "{{{$/;"	f
unite#variables#enable_current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#enable_current_unite() "{{{$/;"	f
unite#variables#filters	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#filters(...) "{{{$/;"	f
unite#variables#kinds	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#kinds(...) "{{{$/;"	f
unite#variables#loaded_defaults	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_defaults() "{{{$/;"	f
unite#variables#loaded_sources	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#loaded_sources(...) "{{{$/;"	f
unite#variables#options	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#options() "{{{$/;"	f
unite#variables#set_current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#set_current_unite(unite) "{{{$/;"	f
unite#variables#sources	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#sources(...) "{{{$/;"	f
unite#variables#static	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#static() "{{{$/;"	f
unite#variables#use_current_unite	.vim/bundle/unite.vim/autoload/unite/variables.vim	/^function! unite#variables#use_current_unite() "{{{$/;"	f
unite#version	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#version() "{{{$/;"	f
unite#view#_add_previewed_buffer_list	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_add_source_message	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_add_source_message(message, source_name) "{{{$/;"	f
unite#view#_bottom_cursor	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_bottom_cursor() "{{{$/;"	f
unite#view#_change_highlight	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_change_highlight()  "{{{$/;"	f
unite#view#_clear_match	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_match() "{{{$/;"	f
unite#view#_clear_match_highlight	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_match_highlight() "{{{$/;"	f
unite#view#_clear_message	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_clear_message() "{{{$/;"	f
unite#view#_close	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close(buffer_name)  "{{{$/;"	f
unite#view#_close_preview_window	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_close_preview_window() "{{{$/;"	f
unite#view#_convert_lines	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_convert_lines(candidates) "{{{$/;"	f
unite#view#_do_auto_highlight	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_highlight() "{{{$/;"	f
unite#view#_do_auto_preview	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_do_auto_preview() "{{{$/;"	f
unite#view#_get_source_candidates_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_candidates_string(source) "{{{$/;"	f
unite#view#_get_source_name_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_source_name_string(source) "{{{$/;"	f
unite#view#_get_status_head_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_head_string() "{{{$/;"	f
unite#view#_get_status_plane_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_plane_string() "{{{$/;"	f
unite#view#_get_status_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_string(unite) "{{{$/;"	f
unite#view#_get_status_tail_string	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_get_status_tail_string() "{{{$/;"	f
unite#view#_init_cursor	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_init_cursor() "{{{$/;"	f
unite#view#_match_line	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_match_line(highlight, line, id) "{{{$/;"	f
unite#view#_preview_file	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_preview_file(filename) "{{{$/;"	f
unite#view#_print_error	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_error(message) "{{{$/;"	f
unite#view#_print_message	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_message(message, ...) "{{{$/;"	f
unite#view#_print_source_error	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_error(message, source_name) "{{{$/;"	f
unite#view#_print_source_message	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_print_source_message(message, source_name) "{{{$/;"	f
unite#view#_quick_match_redraw	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quick_match_redraw(quick_match_table, is_define) "{{{$/;"	f
unite#view#_quit	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_quit(is_force, ...)  "{{{$/;"	f
unite#view#_redraw	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw(is_force, winnr, is_gather_all) "{{{$/;"	f
unite#view#_redraw_all_candidates	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_all_candidates() "{{{$/;"	f
unite#view#_redraw_candidates	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_candidates(...) "{{{$/;"	f
unite#view#_redraw_echo	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_echo(expr) "{{{$/;"	f
unite#view#_redraw_line	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_line(...) "{{{$/;"	f
unite#view#_redraw_prompt	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_redraw_prompt() "{{{$/;"	f
unite#view#_remove_previewed_buffer_list	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_remove_previewed_buffer_list(bufnr) "{{{$/;"	f
unite#view#_resize_window	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_resize_window() "{{{$/;"	f
unite#view#_save_position	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_save_position() "{{{$/;"	f
unite#view#_search_cursor	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_search_cursor(candidate) "{{{$/;"	f
unite#view#_set_candidates_lines	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_candidates_lines(lines) "{{{$/;"	f
unite#view#_set_cursor_line	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_cursor_line() "{{{$/;"	f
unite#view#_set_syntax	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_set_syntax() "{{{$/;"	f
unite#view#_switch_unite_buffer	.vim/bundle/unite.vim/autoload/unite/view.vim	/^function! unite#view#_switch_unite_buffer(buffer_name, context) "{{{$/;"	f
unite#vimfiler_check_filetype	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_check_filetype(...) "{{{$/;"	f
unite#vimfiler_complete	.vim/bundle/unite.vim/autoload/unite.vim	/^function! unite#vimfiler_complete(sources, arglead, cmdline, cursorpos) "{{{$/;"	f
UniteBookmarkAdd	.vim/bundle/unite.vim/plugin/unite/bookmark.vim	/^command! -nargs=? -complete=file UniteBookmarkAdd$/;"	c
UniteClose	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteClose call unite#view#_close(<q-args>)$/;"	c
UniteFirst	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteFirst call unite#start#_pos(<q-args>, 'first', 1)$/;"	c
UniteHandlers	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^class UniteHandlers(object):$/;"	c
UniteLast	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteLast call unite#start#_pos(<q-args>, 'last', 1)$/;"	c
UniteNext	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteNext call unite#start#_pos(<q-args>, 'next', expand('<count>'))$/;"	c
UnitePrevious	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UnitePrevious call unite#start#_pos(<q-args>, 'previous', expand('<count>'))$/;"	c
UniteResume	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteResume$/;"	c
UniteWithBufferDir	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithBufferDir$/;"	c
UniteWithCurrentDir	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCurrentDir$/;"	c
UniteWithCursorWord	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithCursorWord$/;"	c
UniteWithInput	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInput$/;"	c
UniteWithInputDirectory	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithInputDirectory$/;"	c
UniteWithProjectDir	.vim/bundle/unite.vim/plugin/unite.vim	/^      \\ UniteWithProjectDir$/;"	c
unite_rec	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^    def unite_rec(self, context, commands):$/;"	m	class:UniteHandlers
unlink_file	.vim/bundle/html5.vim/Makefile	/^unlink_file = \\$/;"	m
unlink_file	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^unlink_file = \\$/;"	m
unload	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:unload() abort$/;"	f
unload	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:unload()$/;"	f
unload	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:unload() abort$/;"	f
unload	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:unload()$/;"	f
unload	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:unload() abort$/;"	f
unload	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:unload()$/;"	f
unload	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:unload() abort$/;"	f
unload	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:unload() abort$/;"	f
unmapping_file_operations	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:unmapping_file_operations() "{{{$/;"	f
unshift	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
unshift	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:unshift(list, val)$/;"	f
unshift	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
update	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:update()$/;"	f
update	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:update()$/;"	f
UpdateErrors	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
update_in_cursorhold	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:update_in_cursorhold(...)$/;"	f
update_tags	.vim/bundle/neobundle.vim/autoload/neobundle/commands.vim	/^function! s:update_tags() "{{{$/;"	f
usage	.tools/iconvAll.sh	/^usage() {$/;"	f
utf16_to_utf8	.vim/bundle/vimproc.vim/src/proc_w32.c	/^utf16_to_utf8(LPCWSTR wstr)$/;"	f	file:
utf8_to_utf16	.vim/bundle/vimproc.vim/src/proc_w32.c	/^utf8_to_utf16(const char *str)$/;"	f	file:
validate_module	.vim/bundle/vim-quickrun/autoload/quickrun/module.vim	/^function! s:validate_module(module) abort$/;"	f
vamkr#AddCopyHook	.vim/bundle/neobundle.vim/autoload/neobundle/vamkr.vim	/^  function! vamkr#AddCopyHook(repository, files)$/;"	f
verify_command	.vim/bundle/vim-clang-format/autoload/clang_format.vim	/^function! s:verify_command()$/;"	f
VERSION	.vim/bundle/html5.vim/config.mk	/^VERSION=0.26$/;"	m
VERSION	.vim/bundle/html5.vim/Makefile	/^VERSION=0.1$/;"	m
VERSION	.vim/bundle/javascript-libraries-syntax.vim/config.mk	/^VERSION=0.4$/;"	m
VERSION	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^VERSION=0.1$/;"	m
video	.vim/bundle/vim-css3-syntax/test/test.css	/^video,$/;"	s
VIM	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^set VIM=%_VIM:\\vim.exe=%$/;"	v
VIM	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^set VIM=%_VIM:\\vim.exe=%$/;"	v
vim	.vim/bundle/unite.vim/autoload/unite/filters/sorter_selecta.py	/^import vim$/;"	i
vim	.vim/bundle/vim-go/plugin/go.vim	/^augroup vim-go$/;"	a
vim,	.vim/bundle/vim-quickrun/autoload/quickrun/runner/python.vim	/^import vim, threading, subprocess, re, time$/;"	m
vimfiler	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^augroup vimfiler$/;"	a
VimFiler	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFiler$/;"	c
vimfiler	.vim/conf.d/plugins/vimfiler.vim	/^augroup vimfiler$/;"	a
vimfiler#columns#size#define	.vim/bundle/vimfiler/autoload/vimfiler/columns/size.vim	/^function! vimfiler#columns#size#define()$/;"	f
vimfiler#columns#time#define	.vim/bundle/vimfiler/autoload/vimfiler/columns/time.vim	/^function! vimfiler#columns#time#define()$/;"	f
vimfiler#columns#type#define	.vim/bundle/vimfiler/autoload/vimfiler/columns/type.vim	/^function! vimfiler#columns#type#define()$/;"	f
vimfiler#complete	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#complete(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#complete_path	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#complete_path(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#custom#get	.vim/bundle/vimfiler/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#get() "{{{$/;"	f
vimfiler#custom#get_profile	.vim/bundle/vimfiler/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#get_profile(profile_name, option_name) "{{{$/;"	f
vimfiler#custom#profile	.vim/bundle/vimfiler/autoload/vimfiler/custom.vim	/^function! vimfiler#custom#profile(profile_name, option_name, value) "{{{$/;"	f
vimfiler#default_settings	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#default_settings() "{{{$/;"	f
vimfiler#do_action	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#do_action(action) "{{{$/;"	f
vimfiler#do_switch_action	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#do_switch_action(action) "{{{$/;"	f
vimfiler#exists_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#exists_another_vimfiler() "{{{$/;"	f
vimfiler#exrename#create_buffer	.vim/bundle/vimfiler/autoload/vimfiler/exrename.vim	/^function! vimfiler#exrename#create_buffer(files) " {{{$/;"	f
vimfiler#filters#matcher_ignore_files#define	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_files.vim	/^function! vimfiler#filters#matcher_ignore_files#define()$/;"	f
vimfiler#filters#matcher_ignore_pattern#define	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_pattern.vim	/^function! vimfiler#filters#matcher_ignore_pattern#define()$/;"	f
vimfiler#filters#matcher_ignore_wildignore#define	.vim/bundle/vimfiler/autoload/vimfiler/filters/matcher_ignore_wildignore.vim	/^function! vimfiler#filters#matcher_ignore_wildignore#define()$/;"	f
vimfiler#force_redraw_all_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#force_redraw_all_vimfiler(...) "{{{$/;"	f
vimfiler#force_redraw_screen	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#force_redraw_screen(...) "{{{$/;"	f
vimfiler#get_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_another_vimfiler() "{{{$/;"	f
vimfiler#get_datemark	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_datemark(file) "{{{$/;"	f
vimfiler#get_directory_files	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_directory_files(directory, ...) "{{{$/;"	f
vimfiler#get_escaped_marked_files	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_escaped_marked_files(vimfiler) "{{{$/;"	f
vimfiler#get_file	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_file(vimfiler, ...) "{{{$/;"	f
vimfiler#get_filename	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_filename(...) "{{{$/;"	f
vimfiler#get_filetype	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_filetype(file) "{{{$/;"	f
vimfiler#get_file_directory	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_file_directory(...) "{{{$/;"	f
vimfiler#get_file_index	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_file_index(vimfiler, line_num) "{{{$/;"	f
vimfiler#get_file_offset	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_file_offset(vimfiler) "{{{$/;"	f
vimfiler#get_histories	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_histories() "{{{$/;"	f
vimfiler#get_line_number	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_line_number(vimfiler, index) "{{{$/;"	f
vimfiler#get_marked_filenames	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_marked_filenames(vimfiler) "{{{$/;"	f
vimfiler#get_marked_files	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_marked_files(vimfiler) "{{{$/;"	f
vimfiler#get_original_file_index	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_original_file_index(line_num) "{{{$/;"	f
vimfiler#get_status_string	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#get_status_string() "{{{$/;"	f
vimfiler#handler#_event_bufwin_enter	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_bufwin_enter(bufnr) "{{{$/;"	f
vimfiler#handler#_event_bufwin_leave	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_bufwin_leave(bufnr) "{{{$/;"	f
vimfiler#handler#_event_cursor_moved	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_cursor_moved() "{{{$/;"	f
vimfiler#handler#_event_handler	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! vimfiler#handler#_event_handler(event_name, ...)  "{{{1$/;"	f
vimfiler#helper#_call_filters	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_call_filters(files, context) "{{{$/;"	f
vimfiler#helper#_complete	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#helper#_complete_path	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_complete_path(arglead, cmdline, cursorpos) "{{{$/;"	f
vimfiler#helper#_get_buffer_directory	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_buffer_directory(bufnr) "{{{$/;"	f
vimfiler#helper#_get_cd_path	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_cd_path(dir) "{{{$/;"	f
vimfiler#helper#_get_directory_files	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_directory_files(directory, ...) "{{{$/;"	f
vimfiler#helper#_get_file_directory	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_get_file_directory(...) "{{{$/;"	f
vimfiler#helper#_parse_path	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_parse_path(path) "{{{$/;"	f
vimfiler#helper#_set_cursor	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_set_cursor() "{{{$/;"	f
vimfiler#helper#_sort_files	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_sort_files(files) "{{{$/;"	f
vimfiler#helper#_sort_human	.vim/bundle/vimfiler/autoload/vimfiler/helper.vim	/^function! vimfiler#helper#_sort_human(candidates, has_lua) "{{{$/;"	f
vimfiler#init#_candidates	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_candidates(candidates, source_name) "{{{$/;"	f
vimfiler#init#_columns	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_columns(columns, context) "{{{$/;"	f
vimfiler#init#_command	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_command(default, args) "{{{$/;"	f
vimfiler#init#_context	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_context(context) "{{{$/;"	f
vimfiler#init#_default_settings	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_default_settings() "{{{$/;"	f
vimfiler#init#_filters	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_filters(filters, context) "{{{$/;"	f
vimfiler#init#_get_datemark	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_datemark(file) "{{{$/;"	f
vimfiler#init#_get_filetype	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_filetype(file) "{{{$/;"	f
vimfiler#init#_get_postfix	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_get_postfix(prefix, is_create) "{{{$/;"	f
vimfiler#init#_initialize	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_initialize() "{{{$/;"	f
vimfiler#init#_start	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_start(path, ...) "{{{$/;"	f
vimfiler#init#_switch_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_switch_vimfiler(bufnr, context, directory) "{{{$/;"	f
vimfiler#init#_vimfiler_directory	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_vimfiler_directory(directory, context) "{{{1$/;"	f
vimfiler#init#_vimfiler_file	.vim/bundle/vimfiler/autoload/vimfiler/init.vim	/^function! vimfiler#init#_vimfiler_file(path, lines, dict) "{{{1$/;"	f
vimfiler#initialize_context	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#initialize_context(context) "{{{$/;"	f
vimfiler#mappings#cd	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#cd(dir, ...) "{{{$/;"	f
vimfiler#mappings#cd_project	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#cd_project(...) "{{{$/;"	f
vimfiler#mappings#close	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#close(buffer_name) "{{{$/;"	f
vimfiler#mappings#create_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#create_another_vimfiler() "{{{$/;"	f
vimfiler#mappings#define_default_mappings	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#define_default_mappings(context) "{{{$/;"	f
vimfiler#mappings#do_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_action(vimfiler, action, ...) "{{{$/;"	f
vimfiler#mappings#do_current_dir_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_current_dir_action(vimfiler, action, ...) "{{{$/;"	f
vimfiler#mappings#do_dir_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_dir_action(vimfiler, action, directory, ...) "{{{$/;"	f
vimfiler#mappings#do_files_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_files_action(vimfiler, action, files, ...) "{{{$/;"	f
vimfiler#mappings#do_switch_action	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#do_switch_action(vimfiler, action) "{{{$/;"	f
vimfiler#mappings#expand_tree_rec	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#expand_tree_rec(file, ...) "{{{$/;"	f
vimfiler#mappings#search_cursor	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#search_cursor(path) "{{{$/;"	f
vimfiler#mappings#smart_cursor_map	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#smart_cursor_map(directory_map, file_map) "{{{$/;"	f
vimfiler#mappings#switch_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#switch_another_vimfiler(...) "{{{$/;"	f
vimfiler#mappings#_change_vim_current_dir	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! vimfiler#mappings#_change_vim_current_dir() "{{{$/;"	f
vimfiler#parse_path	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#parse_path(path) "{{{$/;"	f
vimfiler#redraw_all_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#redraw_all_vimfiler() "{{{$/;"	f
vimfiler#redraw_screen	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#redraw_screen() "{{{$/;"	f
vimfiler#set_execute_file	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#set_execute_file(exts, command) "{{{$/;"	f
vimfiler#set_extensions	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#set_extensions(kind, exts) "{{{$/;"	f
vimfiler#set_histories	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#set_histories(histories) "{{{$/;"	f
vimfiler#smart_cursor_map	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#smart_cursor_map(directory_map, file_map) "{{{$/;"	f
vimfiler#start	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#start(path, ...) "{{{$/;"	f
vimfiler#util#alternate_buffer	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#alternate_buffer(context) "{{{$/;"	f
vimfiler#util#convert2list	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#convert2list(expr) "{{{$/;"	f
vimfiler#util#delete_buffer	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#delete_buffer(...) "{{{$/;"	f
vimfiler#util#escape_file_searching	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#escape_file_searching(...)$/;"	f
vimfiler#util#escape_pattern	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#escape_pattern(...)$/;"	f
vimfiler#util#expand	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#expand(path) "{{{$/;"	f
vimfiler#util#get_last_status	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_last_status(...)$/;"	f
vimfiler#util#get_vimfiler_winnr	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_vimfiler_winnr(buffer_name) "{{{$/;"	f
vimfiler#util#get_vital	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#get_vital() "{{{$/;"	f
vimfiler#util#has_lua	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#has_lua()$/;"	f
vimfiler#util#has_vimproc	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#has_vimproc(...)$/;"	f
vimfiler#util#hide_buffer	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#hide_buffer(...) "{{{$/;"	f
vimfiler#util#is_cmdwin	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_cmdwin() "{{{$/;"	f
vimfiler#util#is_sudo	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_sudo() "{{{$/;"	f
vimfiler#util#is_windows	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_windows(...)$/;"	f
vimfiler#util#is_win_path	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#is_win_path(path)$/;"	f
vimfiler#util#path2directory	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#path2directory(...)$/;"	f
vimfiler#util#path2project_directory	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#path2project_directory(...)$/;"	f
vimfiler#util#print_error	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#print_error(msg)$/;"	f
vimfiler#util#resolve	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#resolve(filename) "{{{$/;"	f
vimfiler#util#restore_variables	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#restore_variables(variables_save) "{{{$/;"	f
vimfiler#util#set_default	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_default(...)$/;"	f
vimfiler#util#set_default_dictionary_helper	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_default_dictionary_helper(variable, keys, value) "{{{$/;"	f
vimfiler#util#set_dictionary_helper	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_dictionary_helper(...)$/;"	f
vimfiler#util#set_dictionary_helper	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
vimfiler#util#set_variables	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#set_variables(variables) "{{{$/;"	f
vimfiler#util#sort_by	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#sort_by(...)$/;"	f
vimfiler#util#substitute_path_separator	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#substitute_path_separator(...)$/;"	f
vimfiler#util#system	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#system(...)$/;"	f
vimfiler#util#truncate	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#truncate(...)$/;"	f
vimfiler#util#truncate_smart	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#truncate_smart(...)$/;"	f
vimfiler#util#winclose	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#winclose(winnr, context) "{{{$/;"	f
vimfiler#util#winmove	.vim/bundle/vimfiler/autoload/vimfiler/util.vim	/^function! vimfiler#util#winmove(winnr) "{{{$/;"	f
vimfiler#variables#default_context	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#default_context() "{{{$/;"	f
vimfiler#variables#get_clipboard	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#get_clipboard() "{{{$/;"	f
vimfiler#variables#get_data_directory	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#get_data_directory() "{{{$/;"	f
vimfiler#variables#options	.vim/bundle/vimfiler/autoload/vimfiler/variables.vim	/^function! vimfiler#variables#options() "{{{$/;"	f
vimfiler#view#_define_syntax	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_define_syntax() "{{{$/;"	f
vimfiler#view#_force_redraw_all_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_force_redraw_all_vimfiler(...) "{{{$/;"	f
vimfiler#view#_force_redraw_screen	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_force_redraw_screen(...) "{{{$/;"	f
vimfiler#view#_get_max_len	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_get_max_len(files) "{{{$/;"	f
vimfiler#view#_get_print_lines	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_get_print_lines(files) "{{{$/;"	f
vimfiler#view#_redraw_all_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_redraw_all_vimfiler() "{{{$/;"	f
vimfiler#view#_redraw_screen	.vim/bundle/vimfiler/autoload/vimfiler/view.vim	/^function! vimfiler#view#_redraw_screen(...) "{{{$/;"	f
vimfiler#winnr_another_vimfiler	.vim/bundle/vimfiler/autoload/vimfiler.vim	/^function! vimfiler#winnr_another_vimfiler() "{{{$/;"	f
VimFilerBufferDir	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerBufferDir$/;"	c
VimFilerClose	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=1 VimFilerClose call vimfiler#mappings#close(<q-args>)$/;"	c
VimFilerCreate	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerCreate$/;"	c
VimFilerCurrentDir	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerCurrentDir$/;"	c
VimFilerDouble	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerDouble$/;"	c
VimFilerEdit	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^        \\ VimFilerEdit  edit<bang> <args>$/;"	c
VimFilerExplorer	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerExplorer$/;"	c
VimFilerMyExplorer	.vim/conf.d/plugins/vimfiler.vim	/^command! VimFilerMyExplorer VimFiler -buffer-name=explorer -split -simple -winwidth=30 -no-quit$/;"	c
VimFilerRead	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^        \\ VimFilerRead  read<bang> <args>$/;"	c
VimFilerSimple	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerSimple$/;"	c
VimFilerSource	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^        \\ VimFilerSource  source<bang> <args>$/;"	c
VimFilerSplit	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerSplit$/;"	c
VimFilerTab	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^command! -nargs=? -complete=customlist,vimfiler#complete VimFilerTab$/;"	c
VimFilerWrite	.vim/bundle/vimfiler/plugin/vimfiler.vim	/^        \\ VimFilerWrite  <line1>,<line2>write<bang> <args>$/;"	c
VIMFILES	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^:VIMFILES$/;"	l
VIMFILES	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^:VIMFILES$/;"	l
vimlintOutput	.vim/bundle/syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vimproc	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^augroup vimproc$/;"	a
vimproc	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^augroup vimproc$/;"	a
VIMPROC	.vim/bundle/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win32$/;"	m
VIMPROC	.vim/bundle/vimproc.vim/make_msvc.mak	/^VIMPROC=vimproc_win64$/;"	m
vimproc#analyze_shebang	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#analyze_shebang(filename) "{{{$/;"	f
vimproc#cmd#system	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^  function! vimproc#cmd#system(expr)$/;"	f
vimproc#cmd#system	.vim/bundle/vimproc.vim/autoload/vimproc/cmd.vim	/^function! vimproc#cmd#system(expr)$/;"	f
vimproc#decode_signal	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#decode_signal(signal) "{{{$/;"	f
vimproc#delete_trash	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#delete_trash(filename) "{{{$/;"	f
vimproc#dll_version	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#dll_version() "{{{$/;"	f
vimproc#filepath#which	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! vimproc#filepath#which(command, path, maxcount)$/;"	f
vimproc#fopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#fopen(path, ...) "{{{$/;"	f
vimproc#get_command_name	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_command_name(command, ...) "{{{$/;"	f
vimproc#get_last_errmsg	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_errmsg()$/;"	f
vimproc#get_last_errmsg	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_errmsg() "{{{$/;"	f
vimproc#get_last_status	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#get_last_status()$/;"	f
vimproc#get_last_status	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#get_last_status() "{{{$/;"	f
vimproc#host_exists	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#host_exists(host) "{{{$/;"	f
vimproc#kill	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#kill(pid, sig) "{{{$/;"	f
vimproc#lexer#init_lexer	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_lexer(text)$/;"	f
vimproc#lexer#init_reader	.vim/bundle/vimproc.vim/autoload/vimproc/lexer.vim	/^function! vimproc#lexer#init_reader(text)$/;"	f
vimproc#open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#open(filename) "{{{$/;"	f
vimproc#parser#expand_wildcard	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#expand_wildcard(wildcard) "{{{$/;"	f
vimproc#parser#parse_pipe	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_pipe(statement) "{{{$/;"	f
vimproc#parser#parse_statements	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#parse_statements(script) "{{{$/;"	f
vimproc#parser#split_args	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args(script) "{{{$/;"	f
vimproc#parser#split_args_through	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_args_through(script) "{{{$/;"	f
vimproc#parser#split_commands	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_commands(script) "{{{$/;"	f
vimproc#parser#split_pipe	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_pipe(script) "{{{$/;"	f
vimproc#parser#split_statements	.vim/bundle/vimproc.vim/autoload/vimproc/parser.vim	/^function! vimproc#parser#split_statements(script) "{{{$/;"	f
vimproc#pgroup_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#pgroup_open(statements, ...) "{{{$/;"	f
vimproc#plineopen2	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen2(commands, ...) "{{{$/;"	f
vimproc#plineopen3	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#plineopen3(commands, ...) "{{{$/;"	f
vimproc#popen2	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen2(args, ...) "{{{$/;"	f
vimproc#popen3	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#popen3(args, ...) "{{{$/;"	f
vimproc#ptyopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#ptyopen(commands, ...) "{{{$/;"	f
vimproc#readdir	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#readdir(dirname) "{{{$/;"	f
vimproc#shellescape	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#shellescape(string) "{{{$/;"	f
vimproc#socket_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#socket_open(host, port) "{{{$/;"	f
vimproc#system	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^  function! vimproc#system(...)$/;"	f
vimproc#system	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system(cmdline, ...) "{{{$/;"	f
vimproc#system2	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system2(...) "{{{$/;"	f
vimproc#system_bg	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_bg(cmdline) "{{{$/;"	f
vimproc#system_gui	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_gui(cmdline) "{{{$/;"	f
vimproc#system_passwd	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#system_passwd(cmdline, ...) "{{{$/;"	f
vimproc#test_readdir	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#test_readdir(dirname) "{{{$/;"	f
vimproc#util#cd	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#cd(path)  "{{{$/;"	f
vimproc#util#expand	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#expand(path) "{{{$/;"	f
vimproc#util#has_iconv	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_iconv() "{{{$/;"	f
vimproc#util#has_lua	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#has_lua() "{{{$/;"	f
vimproc#util#iconv	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#iconv(expr, from, to) "{{{$/;"	f
vimproc#util#is_cygwin	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_cygwin() "{{{$/;"	f
vimproc#util#is_mac	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_mac() "{{{$/;"	f
vimproc#util#is_windows	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#is_windows() "{{{$/;"	f
vimproc#util#set_default	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#set_default(var, val, ...)  "{{{$/;"	f
vimproc#util#stderrencoding	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stderrencoding() "{{{$/;"	f
vimproc#util#stdinencoding	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdinencoding() "{{{$/;"	f
vimproc#util#stdoutencoding	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#stdoutencoding() "{{{$/;"	f
vimproc#util#substitute_path_separator	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#substitute_path_separator(path) "{{{$/;"	f
vimproc#util#systemencoding	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#systemencoding() "{{{$/;"	f
vimproc#util#termencoding	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#termencoding() "{{{$/;"	f
vimproc#util#uniq	.vim/bundle/vimproc.vim/autoload/vimproc/util.vim	/^function! vimproc#util#uniq(list, ...) "{{{$/;"	f
vimproc#version	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#version() "{{{$/;"	f
vimproc#write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#write(filename, string, ...) "{{{$/;"	f
vimproc#_get_bg_processes	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! vimproc#_get_bg_processes() "{{{$/;"	f
VimProcBang	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcBang call s:bang(<q-args>)$/;"	c
VimProcInstall	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=* VimProcInstall call s:install(<q-args>)$/;"	c
VimProcRead	.vim/bundle/vimproc.vim/plugin/vimproc.vim	/^command! -nargs=+ -complete=shellcmd VimProcRead call s:read(<q-args>)$/;"	c
vimproc_arch	.vim/bundle/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=32$/;"	v
vimproc_arch	.vim/bundle/vimproc.vim/tools/update-dll-mingw.bat	/^    set vimproc_arch=64$/;"	v
vimproc_arch	.vim/bundle/vimproc.vim/tools/update-dll-mingw.bat	/^  set vimproc_arch=%1$/;"	v
vimproc_dllname	.vim/bundle/vimproc.vim/tools/update-dll-mingw.bat	/^set vimproc_dllname=vimproc_win%vimproc_arch%.dll$/;"	v
vimrc	.vim/bundle/auto-ctags.vim/spec/auto_ctags_spec.rb	/^def vimrc(string)$/;"	f
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^set VIMRC=%HOME%\\.vimrc$/;"	v
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^set VIMRC=%HOME%\\vimfiles\\vimrc$/;"	v
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^set VIMRC=%VIM%\\_vimrc$/;"	v
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^set VIMRC=%HOME%\\.vimrc$/;"	v
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^set VIMRC=%HOME%\\vimfiles\\vimrc$/;"	v
VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^set VIMRC=%VIM%\\_vimrc$/;"	v
VIMRUNTIME	.vim/bundle/html5.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
VIMRUNTIME	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
vimtex#change#close_environment	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#close_environment() " {{{1$/;"	f
vimtex#change#command	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#command() " {{{1$/;"	f
vimtex#change#command_delete	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#command_delete() " {{{1$/;"	f
vimtex#change#delim	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#delim(open, close) " {{{1$/;"	f
vimtex#change#env	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#env(new) " {{{1$/;"	f
vimtex#change#env_prompt	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#env_prompt() " {{{1$/;"	f
vimtex#change#format	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#format() " {{{1$/;"	f
vimtex#change#get_command	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#get_command(...) " {{{1$/;"	f
vimtex#change#init_buffer	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#init_buffer() " {{{1$/;"	f
vimtex#change#init_options	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#init_options() " {{{1$/;"	f
vimtex#change#init_script	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#init_script() " {{{1$/;"	f
vimtex#change#toggle_delim	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#toggle_delim() " {{{1$/;"	f
vimtex#change#toggle_env_star	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#toggle_env_star() " {{{1$/;"	f
vimtex#change#to_command	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#to_command() " {{{1$/;"	f
vimtex#change#wrap_selection	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#wrap_selection(wrapper) " {{{1$/;"	f
vimtex#change#wrap_selection_prompt	.vim/bundle/vimtex/autoload/vimtex/change.vim	/^function! vimtex#change#wrap_selection_prompt(...) " {{{1$/;"	f
vimtex#complete#bibtex	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#bibtex(regexp) " {{{1$/;"	f
vimtex#complete#init_buffer	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#init_buffer() " {{{1$/;"	f
vimtex#complete#init_options	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#init_options() " {{{1$/;"	f
vimtex#complete#init_script	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#init_script() " {{{1$/;"	f
vimtex#complete#labels	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#labels(regex) " {{{1$/;"	f
vimtex#complete#omnifunc	.vim/bundle/vimtex/autoload/vimtex/complete.vim	/^function! vimtex#complete#omnifunc(findstart, base) " {{{1$/;"	f
vimtex#echo#echo	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#echo(message, ...) " {{{1$/;"	f
vimtex#echo#formatted	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#formatted(parts) " {{{1$/;"	f
vimtex#echo#init_buffer	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#init_buffer() " {{{1$/;"	f
vimtex#echo#init_options	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#init_options() " {{{1$/;"	f
vimtex#echo#init_script	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#init_script() " {{{1$/;"	f
vimtex#echo#status	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#status(parts) " {{{1$/;"	f
vimtex#echo#warning	.vim/bundle/vimtex/autoload/vimtex/echo.vim	/^function! vimtex#echo#warning(message, ...) " {{{1$/;"	f
vimtex#fold#init_buffer	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#init_buffer() " {{{1$/;"	f
vimtex#fold#init_options	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#init_options() " {{{1$/;"	f
vimtex#fold#init_script	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#init_script() " {{{1$/;"	f
vimtex#fold#level	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#level(lnum) " {{{1$/;"	f
vimtex#fold#refresh	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#refresh(map) " {{{1$/;"	f
vimtex#fold#text	.vim/bundle/vimtex/autoload/vimtex/fold.vim	/^function! vimtex#fold#text() " {{{1$/;"	f
vimtex#imaps#add_map	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! vimtex#imaps#add_map(map) " {{{1$/;"	f
vimtex#imaps#init_buffer	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! vimtex#imaps#init_buffer() " {{{1$/;"	f
vimtex#imaps#init_options	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! vimtex#imaps#init_options() " {{{1$/;"	f
vimtex#imaps#init_script	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! vimtex#imaps#init_script() " {{{1$/;"	f
vimtex#index#close	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#close(bufname) " {{{1$/;"	f
vimtex#index#create	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#create(index) " {{{1$/;"	f
vimtex#index#init_buffer	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#init_buffer() " {{{1$/;"	f
vimtex#index#init_options	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#init_options() " {{{1$/;"	f
vimtex#index#init_script	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#init_script() " {{{1$/;"	f
vimtex#index#open	.vim/bundle/vimtex/autoload/vimtex/index.vim	/^function! vimtex#index#open(bufname) " {{{1$/;"	f
vimtex#info	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! vimtex#info(global) " {{{1$/;"	f
vimtex#init	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! vimtex#init() " {{{1$/;"	f
vimtex#labels#init_buffer	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! vimtex#labels#init_buffer() " {{{1$/;"	f
vimtex#labels#init_options	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! vimtex#labels#init_options() " {{{1$/;"	f
vimtex#labels#init_script	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! vimtex#labels#init_script() " {{{1$/;"	f
vimtex#labels#open	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! vimtex#labels#open() " {{{1$/;"	f
vimtex#labels#toggle	.vim/bundle/vimtex/autoload/vimtex/labels.vim	/^function! vimtex#labels#toggle() " {{{1$/;"	f
vimtex#latexmk#add_option	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#add_option(name, value) " {{{1$/;"	f
vimtex#latexmk#callback	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#callback(status) " {{{1$/;"	f
vimtex#latexmk#clean	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#clean(full) " {{{1$/;"	f
vimtex#latexmk#compile	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#compile() " {{{1$/;"	f
vimtex#latexmk#compile_ss	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#compile_ss(verbose) " {{{1$/;"	f
vimtex#latexmk#errors	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#errors() " {{{1$/;"	f
vimtex#latexmk#errors_open	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#errors_open(force) " {{{1$/;"	f
vimtex#latexmk#init_buffer	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#init_buffer() " {{{1$/;"	f
vimtex#latexmk#init_options	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#init_options() " {{{1$/;"	f
vimtex#latexmk#init_script	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#init_script() " {{{1$/;"	f
vimtex#latexmk#lacheck	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#lacheck() " {{{1$/;"	f
vimtex#latexmk#output	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#output() " {{{1$/;"	f
vimtex#latexmk#status	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#status(detailed) " {{{1$/;"	f
vimtex#latexmk#stop	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#stop() " {{{1$/;"	f
vimtex#latexmk#stop_all	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#stop_all() " {{{1$/;"	f
vimtex#latexmk#toggle	.vim/bundle/vimtex/autoload/vimtex/latexmk.vim	/^function! vimtex#latexmk#toggle() " {{{1$/;"	f
vimtex#motion#find_matching_pair	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#find_matching_pair(...) " {{{1$/;"	f
vimtex#motion#init_buffer	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#init_buffer() " {{{1$/;"	f
vimtex#motion#init_options	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#init_options() " {{{1$/;"	f
vimtex#motion#init_script	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#init_script() " {{{1$/;"	f
vimtex#motion#next_paragraph	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#next_paragraph(backwards, visual) " {{{1$/;"	f
vimtex#motion#next_section	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#next_section(type, backwards, visual) " {{{1$/;"	f
vimtex#motion#sel_delimiter	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#sel_delimiter(...) " {{{1$/;"	f
vimtex#motion#sel_environment	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#sel_environment(...) " {{{1$/;"	f
vimtex#motion#sel_inline_math	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#sel_inline_math(...) " {{{1$/;"	f
vimtex#motion#sel_paragraph	.vim/bundle/vimtex/autoload/vimtex/motion.vim	/^function! vimtex#motion#sel_paragraph(...) " {{{1$/;"	f
vimtex#parser#aux	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! vimtex#parser#aux(file, ...) " {{{1$/;"	f
vimtex#parser#init_buffer	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! vimtex#parser#init_buffer() " {{{1$/;"	f
vimtex#parser#init_options	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! vimtex#parser#init_options() " {{{1$/;"	f
vimtex#parser#init_script	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! vimtex#parser#init_script() " {{{1$/;"	f
vimtex#parser#tex	.vim/bundle/vimtex/autoload/vimtex/parser.vim	/^function! vimtex#parser#tex(file, ...) " {{{1$/;"	f
vimtex#reload	.vim/bundle/vimtex/autoload/vimtex.vim	/^  function! vimtex#reload()$/;"	f
vimtex#toc#init_buffer	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! vimtex#toc#init_buffer() " {{{1$/;"	f
vimtex#toc#init_options	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! vimtex#toc#init_options() " {{{1$/;"	f
vimtex#toc#init_script	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! vimtex#toc#init_script() " {{{1$/;"	f
vimtex#toc#open	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! vimtex#toc#open() " {{{1$/;"	f
vimtex#toc#toggle	.vim/bundle/vimtex/autoload/vimtex/toc.vim	/^function! vimtex#toc#toggle() " {{{1$/;"	f
vimtex#util#execute	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#execute(exe) " {{{1$/;"	f
vimtex#util#get_delim	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#get_delim() " {{{1$/;"	f
vimtex#util#get_env	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#get_env(...) " {{{1$/;"	f
vimtex#util#get_os	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#get_os() " {{{1$/;"	f
vimtex#util#has_syntax	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#has_syntax(name, ...) " {{{1$/;"	f
vimtex#util#init_buffer	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#init_buffer() " {{{1$/;"	f
vimtex#util#init_options	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#init_options() " {{{1$/;"	f
vimtex#util#init_script	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#init_script() " {{{1$/;"	f
vimtex#util#in_comment	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#in_comment(...) " {{{1$/;"	f
vimtex#util#kpsewhich	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#kpsewhich(file, ...) " {{{1$/;"	f
vimtex#util#set_default	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#set_default(variable, default) " {{{1$/;"	f
vimtex#util#set_default_os_specific	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#set_default_os_specific(variable, default) " {{{1$/;"	f
vimtex#util#shellescape	.vim/bundle/vimtex/autoload/vimtex/util.vim	/^function! vimtex#util#shellescape(cmd) " {{{1$/;"	f
vimtex#view#init_buffer	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! vimtex#view#init_buffer() " {{{1$/;"	f
vimtex#view#init_options	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! vimtex#view#init_options() " {{{1$/;"	f
vimtex#view#init_script	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! vimtex#view#init_script() " {{{1$/;"	f
vimtex#wordcount	.vim/bundle/vimtex/autoload/vimtex.vim	/^function! vimtex#wordcount(detailed) " {{{1$/;"	f
VimtexIndent	.vim/bundle/vimtex/indent/tex.vim	/^function! VimtexIndent() " {{{1$/;"	f
VimtexIndentBib	.vim/bundle/vimtex/indent/bib.vim	/^function! VimtexIndentBib() " {{{1$/;"	f
VimtexInfo	.vim/bundle/vimtex/autoload/vimtex.vim	/^  command! -buffer -bang VimtexInfo      call vimtex#info(<q-bang> == "!")$/;"	c
VimtexReload	.vim/bundle/vimtex/autoload/vimtex.vim	/^  command! -buffer       VimtexReload    call vimtex#reload()$/;"	c
VimtexWordCount	.vim/bundle/vimtex/autoload/vimtex.vim	/^  command! -buffer -bang VimtexWordCount call vimtex#wordcount(<q-bang> == "!")$/;"	c
vimtex_buffers	.vim/bundle/vimtex/autoload/vimtex.vim	/^  augroup vimtex_buffers$/;"	a
vim_snippets#Filename	.vim/bundle/neosnippet.vim/autoload/vim_snippets.vim	/^function! vim_snippets#Filename(...)$/;"	f
vital#	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! vital#{s:self_version}#new()$/;"	f
vital#	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	.vim/bundle/lexima.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	.vim/bundle/neocomplcache/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	.vim/bundle/neosnippet.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	.vim/bundle/unite-quickfix/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	.vim/bundle/unite.vim/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	.vim/bundle/vim-marching/autoload/vital.vim	/^function! vital#of(name)$/;"	f
vital#of	.vim/bundle/vim-quickrun/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	.vim/bundle/vimfiler/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
VjjV	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^            normal! VjjV$/;"	m
void	.vim/bundle/unite.vim/autoload/unite/exrename.vim	/^function! s:void(exrename)$/;"	f
VP_BUFSIZE	.vim/bundle/vimproc.vim/src/proc.c	129;"	d	file:
VP_BUFSIZE	.vim/bundle/vimproc.vim/src/proc_w32.c	123;"	d	file:
vp_checkpid	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_checkpid() dict$/;"	f
VP_CHR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc.c	189;"	d	file:
VP_CHR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc.c	212;"	d	file:
VP_CHR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc_w32.c	249;"	d	file:
VP_CHR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc_w32.c	272;"	d	file:
vp_close_handle	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_close_handle(char *args)$/;"	f
vp_decode	.vim/bundle/vimproc.vim/src/proc.c	/^vp_decode(char *args)$/;"	f
vp_decode	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_decode(char *args)$/;"	f
vp_decode_size	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_decode_size(const char *buf)$/;"	f
vp_delete_trash	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_delete_trash(char *args)$/;"	f
vp_dlclose	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlclose(handle)$/;"	f
vp_dlclose	.vim/bundle/vimproc.vim/src/proc.c	/^vp_dlclose(char *args)$/;"	f
vp_dlclose	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_dlclose(char *args)$/;"	f
vp_dlopen	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_dlopen(path)$/;"	f
vp_dlopen	.vim/bundle/vimproc.vim/src/proc.c	/^vp_dlopen(char *args)$/;"	f
vp_dlopen	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_dlopen(char *args)$/;"	f
vp_dlversion	.vim/bundle/vimproc.vim/src/proc.c	/^vp_dlversion(char *args)$/;"	f
vp_dlversion	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_dlversion(char *args)$/;"	f
VP_DUP_HANDLE	.vim/bundle/vimproc.vim/src/proc_w32.c	505;"	d	file:
VP_DUP_HANDLE	.vim/bundle/vimproc.vim/src/proc_w32.c	630;"	d	file:
vp_encode_size	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_encode_size(unsigned int size, char *buf)$/;"	f	file:
VP_EOV	.vim/bundle/vimproc.vim/src/vimstack.c	29;"	d	file:
VP_EOV_STR	.vim/bundle/vimproc.vim/src/vimstack.c	30;"	d	file:
VP_ERRMSG_SIZE	.vim/bundle/vimproc.vim/src/vimstack.c	35;"	d	file:
vp_fd_read	.vim/bundle/vimproc.vim/src/proc.c	/^vp_fd_read(char *args, int is_pty_pipe)$/;"	f
vp_file_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_close() dict$/;"	f
vp_file_close	.vim/bundle/vimproc.vim/src/proc.c	/^vp_file_close(char *args)$/;"	f
vp_file_close	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_file_close(char *args)$/;"	f
vp_file_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_open(path, flags, mode)$/;"	f
vp_file_open	.vim/bundle/vimproc.vim/src/proc.c	/^vp_file_open(char *args)$/;"	f
vp_file_open	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_file_open(char *args)$/;"	f
vp_file_read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_read(number, timeout) dict$/;"	f
vp_file_read	.vim/bundle/vimproc.vim/src/proc.c	/^vp_file_read(char *args)$/;"	f
vp_file_read	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_file_read(char *args)$/;"	f
vp_file_write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_file_write(hd, timeout) dict$/;"	f
vp_file_write	.vim/bundle/vimproc.vim/src/proc.c	/^vp_file_write(char *args)$/;"	f
vp_file_write	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_file_write(char *args)$/;"	f
vp_get_signals	.vim/bundle/vimproc.vim/src/proc.c	/^vp_get_signals(char *args)$/;"	f
vp_get_signals	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_get_signals(char *args)$/;"	f
vp_get_winsize	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_get_winsize() dict$/;"	f
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc.c	511;"	d	file:
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc.c	659;"	d	file:
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc.c	683;"	d	file:
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc.c	823;"	d	file:
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc_w32.c	504;"	d	file:
VP_GOTO_ERROR	.vim/bundle/vimproc.vim/src/proc_w32.c	631;"	d	file:
VP_HEADER_SIZE	.vim/bundle/vimproc.vim/src/vimstack.c	36;"	d	file:
vp_host_exists	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_host_exists(host)$/;"	f
vp_host_exists	.vim/bundle/vimproc.vim/src/proc.c	/^vp_host_exists(char *args)$/;"	f
vp_host_exists	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_host_exists(char *args)$/;"	f
VP_INITIAL_BUFSIZE	.vim/bundle/vimproc.vim/src/vimstack.c	34;"	d	file:
vp_kill	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_kill(...) dict$/;"	f
vp_kill	.vim/bundle/vimproc.vim/src/proc.c	/^vp_kill(char *args)$/;"	f
vp_kill	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_kill(char *args)$/;"	f
VP_NUMFMT_BUFSIZE	.vim/bundle/vimproc.vim/src/vimstack.c	33;"	d	file:
VP_NUM_BUFSIZE	.vim/bundle/vimproc.vim/src/vimstack.c	32;"	d	file:
vp_open	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_open(char *args)$/;"	f
vp_pgroup_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_close() dict$/;"	f
vp_pgroup_kill	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_kill(...) dict$/;"	f
vp_pgroup_waitpid	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pgroup_waitpid() dict$/;"	f
vp_pipes_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipes_close() dict$/;"	f
vp_pipe_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_close() dict$/;"	f
vp_pipe_close	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_close	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pipe_close(char *args)$/;"	f
vp_pipe_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_open(npipe, hstdin, hstdout, hstderr, argv) "{{{$/;"	f
vp_pipe_open	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_open	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pipe_open(char *args)$/;"	f
vp_pipe_read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_read(number, timeout) dict$/;"	f
vp_pipe_read	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_read	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pipe_read(char *args)$/;"	f
vp_pipe_write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pipe_write(hd, timeout) dict$/;"	f
vp_pipe_write	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pipe_write(char *args)$/;"	f
vp_pipe_write	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pipe_write(char *args)$/;"	f
VP_POLLIN	.vim/bundle/vimproc.vim/src/proc.c	302;"	d	file:
VP_POLLIN	.vim/bundle/vimproc.vim/src/proc.c	388;"	d	file:
VP_PTYTTY_H_	.vim/bundle/vimproc.vim/src/ptytty.h	2;"	d
vp_pty_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_close() dict$/;"	f
vp_pty_close	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_close	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_close(char *args)$/;"	f
vp_pty_get_winsize	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_get_winsize	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_get_winsize(char *args)$/;"	f
vp_pty_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_open(npipe, width, height, hstdin, hstdout, hstderr, argv)$/;"	f
vp_pty_open	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_open	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_open(char *args)$/;"	f
vp_pty_read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_read(number, timeout) dict$/;"	f
vp_pty_read	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_read	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_read(char *args)$/;"	f
vp_pty_set_winsize	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_set_winsize	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_set_winsize(char *args)$/;"	f
vp_pty_write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_pty_write(hd, timeout) dict$/;"	f
vp_pty_write	.vim/bundle/vimproc.vim/src/proc.c	/^vp_pty_write(char *args)$/;"	f
vp_pty_write	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_pty_write(char *args)$/;"	f
vp_readdir	.vim/bundle/vimproc.vim/src/proc.c	/^vp_readdir(char *args)$/;"	f
vp_readdir	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_readdir(char *args)$/;"	f
VP_READ_BUFSIZE	.vim/bundle/vimproc.vim/src/proc.c	130;"	d	file:
VP_READ_BUFSIZE	.vim/bundle/vimproc.vim/src/proc_w32.c	124;"	d	file:
VP_RETURN_IF_FAIL	.vim/bundle/vimproc.vim/src/vimstack.c	38;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	.vim/bundle/vimproc.vim/src/proc.c	293;"	d	file:
VP_SET_NONBLOCK_IF_NEEDED	.vim/bundle/vimproc.vim/src/proc.c	295;"	d	file:
vp_set_winsize	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_set_winsize(width, height) dict$/;"	f
vp_socket_close	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_close() dict$/;"	f
vp_socket_close	.vim/bundle/vimproc.vim/src/proc.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_close	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_socket_close(char *args)$/;"	f
vp_socket_open	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_open(host, port)$/;"	f
vp_socket_open	.vim/bundle/vimproc.vim/src/proc.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_open	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_socket_open(char *args)$/;"	f
vp_socket_read	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_read(number, timeout) dict$/;"	f
vp_socket_read	.vim/bundle/vimproc.vim/src/proc.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_read	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_socket_read(char *args)$/;"	f
vp_socket_write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_socket_write(hd, timeout) dict$/;"	f
vp_socket_write	.vim/bundle/vimproc.vim/src/proc.c	/^vp_socket_write(char *args)$/;"	f
vp_socket_write	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_socket_write(char *args)$/;"	f
vp_stack_free	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_free(vp_stack_t *stack)$/;"	f	file:
vp_stack_from_args	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_from_args(vp_stack_t *stack, char *args)$/;"	f	file:
VP_STACK_NULL	.vim/bundle/vimproc.vim/src/vimstack.c	52;"	d	file:
vp_stack_pop_num	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_pop_num(vp_stack_t *stack, const char *fmt, void *ptr)$/;"	f	file:
vp_stack_pop_str	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_pop_str(vp_stack_t *stack, char **str)$/;"	f	file:
VP_STACK_PUSH_ALTSIGNAME	.vim/bundle/vimproc.vim/src/proc.c	1112;"	d	file:
VP_STACK_PUSH_ALTSIGNAME	.vim/bundle/vimproc.vim/src/proc.c	1268;"	d	file:
vp_stack_push_num	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_push_num(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
VP_STACK_PUSH_SIGNAME	.vim/bundle/vimproc.vim/src/proc.c	1110;"	d	file:
VP_STACK_PUSH_SIGNAME	.vim/bundle/vimproc.vim/src/proc.c	1267;"	d	file:
vp_stack_push_str	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_push_str(vp_stack_t *stack, const char *str)$/;"	f	file:
vp_stack_reserve	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_reserve(vp_stack_t *stack, size_t needsize)$/;"	f	file:
vp_stack_return	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_return(vp_stack_t *stack)$/;"	f	file:
vp_stack_return_error	.vim/bundle/vimproc.vim/src/vimstack.c	/^vp_stack_return_error(vp_stack_t *stack, const char *fmt, ...)$/;"	f	file:
vp_stack_t	.vim/bundle/vimproc.vim/src/vimstack.c	/^typedef struct vp_stack_t {$/;"	s	file:
vp_stack_t	.vim/bundle/vimproc.vim/src/vimstack.c	/^} vp_stack_t;$/;"	t	typeref:struct:vp_stack_t	file:
vp_stack_used	.vim/bundle/vimproc.vim/src/vimstack.c	103;"	d	file:
VP_STR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc.c	223;"	d	file:
VP_STR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc.c	273;"	d	file:
VP_STR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc_w32.c	283;"	d	file:
VP_STR_TO_OFLAG	.vim/bundle/vimproc.vim/src/proc_w32.c	333;"	d	file:
vp_waitpid	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:vp_waitpid() dict$/;"	f
vp_waitpid	.vim/bundle/vimproc.vim/src/proc.c	/^vp_waitpid(char *args)$/;"	f
vp_waitpid	.vim/bundle/vimproc.vim/src/proc_w32.c	/^vp_waitpid(char *args)$/;"	f
vsnprintf	.vim/bundle/vimproc.vim/src/proc_w32.c	66;"	d	file:
waitpid	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:waitpid(pid)$/;"	f
wandbox_completion	.vim/bundle/vim-marching/autoload/marching/sync_wandbox.vim	/^function! s:wandbox_completion(source, line, col, option, filename)$/;"	f
warn	.vim/bundle/unite.vim/autoload/vital/_unite/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warning	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
warning	.vim/bundle/vimtex/compiler/latexmk.vim	/^    let warning = escape(substitute(w, '[\\,]', '%\\\\\\\\&', 'g'), ' ')$/;"	v
wbr	.vim/bundle/vim-css3-syntax/test/test.css	/^wbr,$/;"	s
wcswidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcswidth(str) "{{{$/;"	f
wcswidth	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcswidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^  function! s:wcswidth(str)$/;"	f
wcswidth	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcwidth	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(str) "{{{$/;"	f
wcwidth	.vim/bundle/neocomplcache/autoload/neocomplcache/async_cache.vim	/^  function! s:wcwidth(ucs) "{{{$/;"	f
WGET_OPT	.vim/bundle/html5.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
WGET_OPT	.vim/bundle/javascript-libraries-syntax.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
which	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^  function! s:which(command, ...) abort$/;"	f
which	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/Filepath.vim	/^  function! s:which(str) abort$/;"	f
which	.vim/bundle/vimproc.vim/autoload/vimproc/filepath.vim	/^function! s:which(command, ...)$/;"	f
widget_attributes	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let widget_attributes = {'aria-autocomplete': ['inline', 'list', 'both', 'none'], 'aria-checked': ['true', 'false', 'mixed', 'undefined'], 'aria-disabled': ['true', 'false'], 'aria-expanded': ['true', 'false', 'undefined'], 'aria-haspopup': ['true', 'false'], 'aria-hidden': ['true', 'false'], 'aria-invalid': ['grammar', 'spelling', 'true', 'false'], 'aria-label': [], 'aria-level': [], 'aria-multiline': ['true', 'false'], 'aria-multiselectable': ['true', 'false'], 'aria-orientation': ['horizontal', 'vertical'], 'aria-pressed': ['true', 'false', 'mixed', 'undefined'], 'aria-readonly': ['true', 'false'], 'aria-required': ['true', 'false'], 'aria-selected': ['true', 'false', 'undefined'], 'aria-sort': ['ascending', 'descending', 'none', 'other'], 'aria-valuemax': [], 'aria-valuemin': [], 'aria-valuenow': [], 'aria-valuetext': []}$/;"	v
widget_role	.vim/bundle/html5.vim/autoload/xml/aria.vim	/^let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
widget_role	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'slider', 'spinbutton', 'status', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
WIFCONTINUED	.vim/bundle/vimproc.vim/src/proc.c	65;"	d	file:
WIFCONTINUED	.vim/bundle/vimproc.vim/src/proc.c	67;"	d	file:
WINVER	.vim/bundle/vimproc.vim/make_msvc.mak	/^WINVER = 0x0500$/;"	m
WINVER	.vim/bundle/vimproc.vim/src/proc_w32.c	37;"	d	file:
with_index	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
with_index	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:with_index(list, ...)$/;"	f
with_index	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
word_caching	.vim/bundle/neocomplcache/autoload/neocomplcache/sources/buffer_complete.vim	/^function! s:word_caching(srcname) "{{{$/;"	f
wrap	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:wrap(str,...)$/;"	f
wrap	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
WrapForTmux	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^function! WrapForTmux(s)$/;"	f
wrap_math	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:wrap_math(lhs, rhs) " {{{1$/;"	f
wrap_math_snippet	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:wrap_math_snippet(lhs, rhs) " {{{1$/;"	f
wrap_snippet	.vim/bundle/vimtex/autoload/vimtex/imaps.vim	/^function! s:wrap_snippet(lhs, rhs) " {{{1$/;"	f
write	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:write(i, str) abort$/;"	f
write	.vim/bundle/vimfiler/autoload/vimfiler/handler.vim	/^function! s:write(source_name, source_args, line1, line2, event_name)  "{{{$/;"	f
write	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:write(str, ...) dict "{{{$/;"	f
write	.vim/bundle/vimproc.vim/src/proc_w32.c	185;"	d	file:
writefile	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list)$/;"	f
writefile	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writefile	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writefile	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
writeln	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:writeln(i, str) abort$/;"	f
write_cache	.vim/bundle/unite.vim/autoload/unite/sources/rec.vim	/^function! s:write_cache(context, directory, files) "{{{$/;"	f
write_pgroup	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pgroup(str, ...) dict "{{{$/;"	f
write_pipes	.vim/bundle/vimproc.vim/autoload/vimproc.vim	/^function! s:write_pipes(str, ...) dict "{{{$/;"	f
x	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        map x <Plug>(operator-clang-format)$/;"	m
xa{	.vim/bundle/vim-clang-format/t/clang_format_spec.vim	/^        normal xa{$/;"	m
xml_attributes	.vim/bundle/html5.vim/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
XTermPasteBegin	.vim/bundle/vim-bracketed-paste/plugin/bracketed-paste.vim	/^function! XTermPasteBegin(ret)$/;"	f
xwin_exists	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:xwin_exists() dict " {{{1$/;"	f
xwin_get_id	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:xwin_get_id() dict " {{{1$/;"	f
xwin_send_keys	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:xwin_send_keys(keys) dict " {{{1$/;"	f
yank_full_path	.vim/bundle/vimfiler/autoload/vimfiler/mappings.vim	/^function! s:yank_full_path() "{{{$/;"	f
zathura.forward_search	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.forward_search(outfile) dict " {{{2$/;"	f
zathura.init	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.init() dict " {{{2$/;"	f
zathura.latexmk_append_argument	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.latexmk_append_argument() dict " {{{2$/;"	f
zathura.latexmk_callback	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.latexmk_callback() dict " {{{2$/;"	f
zathura.start	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.start(outfile) dict " {{{2$/;"	f
zathura.view	.vim/bundle/vimtex/autoload/vimtex/view.vim	/^function! s:zathura.view(file) dict " {{{2$/;"	f
ZenkakuSpace	.vim/conf.d/basic/display.basic.vim	/^  augroup ZenkakuSpace$/;"	a
ZenkakuSpace	.vim/conf.d/basic/display.basic.vim	/^function! ZenkakuSpace()$/;"	f
zip	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip(...)$/;"	f
zip	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:zip(...)$/;"	f
zip	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
zip_fill	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:zip_fill(xs, ys, filler)$/;"	f
zip_fill	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
ZoomWindow	.vim/bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
_add_to_errors	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_array	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_array(input)$/;"	f
_array_of_tables	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_array_of_tables(input)$/;"	f
_basic_string	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_basic_string(input)$/;"	f
_boolean	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_boolean(input)$/;"	f
_build_module	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:_build_module(sid)$/;"	f
_build_module	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_build_module(sid)$/;"	f
_build_module	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_build_module(sid)$/;"	f
_build_module	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_response	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_build_response(header, content)$/;"	f
_checkPackage	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_compare	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	.vim/bundle/neobundle.vim/autoload/neobundle/util.vim	/^function! s:_compare(a, b)$/;"	f
_compare	.vim/bundle/neobundle.vim/autoload/unite/sources/neobundle_search.vim	/^function! s:_compare(a, b)$/;"	f
_compare	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_compare	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	.vim/bundle/vim-marching/autoload/vital/_marching/Data/List.vim	/^function! s:_compare(a, b)$/;"	f
_compare	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_concat	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_concat(lists)$/;"	f
_concat	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_concat(lists)$/;"	f
_concat	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_concat(lists) abort$/;"	f
_consume	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_consume(input, pattern)$/;"	f
_create_hash	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_create_hash	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_create_hash(dir, str)$/;"	f
_create_hash	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_hash	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_create_hash	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_datetime	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_datetime(input)$/;"	f
_decode_JSON	.vim/bundle/syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
_default_compare	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	.vim/bundle/unite.vim/autoload/vital/_unite/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_deprecated2	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_deprecated2	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:_deprecated2(fname)$/;"	f
_deprecated2	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_disabled_by_eclim	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_encode_name	.vim/bundle/neobundle.vim/autoload/neobundle/cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_encode_name	.vim/bundle/neocomplcache/autoload/vital/_13055f8/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename)$/;"	f
_encode_name	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_encode_name	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_encode_name	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_eof	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_eof(input)$/;"	f
_equals	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_equals(input)$/;"	f
_error	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_error(input)$/;"	f
_explain_skip	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_exponent	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_exponent(input)$/;"	f
_FAKE_POLL_H	.vim/bundle/vimproc.vim/src/fakepoll.h	17;"	d
_file2module	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_file2module(file)$/;"	f
_file2module	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_file2module(file)$/;"	f
_file2module	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_file2module(file) abort$/;"	f
_find_index	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_float	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_float(input)$/;"	f
_float2str_dumb	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
_float2str_smart	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
_format_variable	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_fractional	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_fractional(input)$/;"	f
_get_cflags	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_client	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_get_client(settings)$/;"	f
_get_functions	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_functions	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^  function! s:_get_functions(sid)$/;"	f
_get_functions	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_include_dirs	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_module_path	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:_get_module_path(name)$/;"	f
_get_module_path	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_get_module_path(name)$/;"	f
_get_module_path	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_get_module_path(name)$/;"	f
_get_module_path	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_get_sid_by_script(path)$/;"	f
_get_sid_by_script	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_GNU_SOURCE	.vim/bundle/vimproc.vim/src/ptytty.c	5;"	d	file:
_has_copy_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f
_has_copy_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:_has_copy_exe() abort$/;"	f
_has_move_exe	.vim/bundle/unite.vim/autoload/vital/_unite/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f
_has_move_exe	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/System/File.vim	/^  function! s:_has_move_exe() abort$/;"	f
_ignore_file	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_import(name) abort$/;"	f
_import	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:_import(name, scripts)$/;"	f
_import	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_import(name) abort$/;"	f
_import	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_import(name)$/;"	f
_import	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_import(name) abort$/;"	f
_import	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_import(name)$/;"	f
_import	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_import(name) abort$/;"	f
_import	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_import(name) abort$/;"	f
_init	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_integer	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_integer(input)$/;"	f
_internal_get_pty	.vim/bundle/vimproc.vim/src/ptytty.c	/^_internal_get_pty(int *master, char **path)$/;"	f	file:
_internal_get_tty	.vim/bundle/vimproc.vim/src/ptytty.c	/^_internal_get_tty(int *slave, const char *path,$/;"	f	file:
_internal_login_tty	.vim/bundle/vimproc.vim/src/ptytty.c	/^_internal_login_tty(int fd, const char *path,$/;"	f	file:
_isAvailableDefault	.vim/bundle/syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_is_absolute_path	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_is_absolute_path	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^  function! s:_is_absolute_path(path)$/;"	f
_is_absolute_path	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_cmdwin	.vim/bundle/vim-quickrun/autoload/quickrun/runner/concurrent_process.vim	/^function! s:_is_cmdwin() abort$/;"	f
_is_cmdwin	.vim/bundle/vim-quickrun/autoload/quickrun/runner/process_manager.vim	/^function! s:_is_cmdwin() abort$/;"	f
_is_equal	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix/Coaster/Highlight.vim	/^function! s:_is_equal(__expr, __hl)$/;"	f
_is_modified	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
_is_quitting	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_is_quitting(buf) abort " {{{2$/;"	f
_is_same_index	.vim/bundle/syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_key	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_key(input)$/;"	f
_literal	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_literal(input)$/;"	f
_logRedirect	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp	.vim/bundle/syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp() abort " {{{2$/;"	f
_make_header_args	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_make_header_args(headdata, option, quote)$/;"	f
_make_postfile	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_make_postfile(data)$/;"	f
_match	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_match(input, pattern)$/;"	f
_multiline_basic_string	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_multiline_basic_string(input)$/;"	f
_multiline_literal	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_multiline_literal(input)$/;"	f
_normalise_filetype	.vim/bundle/syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_nr2char	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_nr2char(nr)$/;"	f
_os_name	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_pad_with_char	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char)$/;"	f
_pad_with_char	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_pad_with_char	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_parse	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_parse(input)$/;"	f
_path2project_directory_git	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:_path2project_directory_git(path)$/;"	f
_path2project_directory_git	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_git	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path)$/;"	f
_path2project_directory_others	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_others	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^function! s:_path2project_directory_svn(path)$/;"	f
_path2project_directory_svn	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_path2project_directory_svn	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_POSIX_	.vim/bundle/vimproc.vim/src/proc_w32.c	49;"	d	file:
_postdata	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_postdata(data)$/;"	f
_put_array	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_put_array(dict, key, value)$/;"	f
_put_dict	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_put_dict(dict, key, value)$/;"	f
_quote	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_quote()$/;"	f
_read	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:_read(pi, rname) abort$/;"	f
_readfile	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_readfile(file)$/;"	f
_redir	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:_redir(cmd)$/;"	f
_redir	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_redir(cmd)$/;"	f
_redir	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_redir(cmd)$/;"	f
_redir	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_redir(cmd) abort$/;"	f
_registerHandler	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_shadowed_items	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_repeat_cursorhold	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:_repeat_cursorhold()$/;"	f
_repeat_cursorhold	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task/Group.vim	/^function! s:_repeat_cursorhold()$/;"	f
_replace	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_replace	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_replace(str, from, to, flags)$/;"	f
_replace	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_resolve_filetypes	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_result	.vim/bundle/vimproc.vim/src/proc.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_result	.vim/bundle/vimproc.vim/src/proc_w32.c	/^static vp_stack_t _result = VP_STACK_NULL;$/;"	v	file:
_rmrf	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_runtime_files	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  function! s:_runtime_files(path)$/;"	f
_runtime_files	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^  function! s:_runtime_files(path)$/;"	f
_runtime_files	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_scripts	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^function! s:_scripts()$/;"	f
_scripts	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^function! s:_scripts()$/;"	f
_search_headers	.vim/bundle/syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_set_screen_column	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_skip	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_skip(input)$/;"	f
_skip_file	.vim/bundle/syntastic/plugin/syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_split_at_last_newline	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:_split_at_last_newline(str) abort$/;"	f
_split_by_wcswidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_split_by_wcswidth(body, x)$/;"	f
_split_by_wcswidth	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_split_by_wcswidth_once	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x)$/;"	f
_split_by_wcswidth_once	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_by_wcswidth_once	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_stop	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:_stop(i, ...) abort$/;"	f
_table	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_table(input)$/;"	f
_target	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^  set _target=$/;"	v
_target	.vim/bundle/vimproc.vim/tools/appveyor.bat	/^  set _target=_test$/;"	v
_translate	.vim/bundle/syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	.vim/bundle/syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_unescape	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_unescape(text)$/;"	f
_unify_path	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	.vim/bundle/neocomplcache/autoload/vital/_13055f8.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^  function! s:_unify_path(path)$/;"	f
_unify_path	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^  function! s:_uniq(list)$/;"	f
_uniq	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	.vim/bundle/vim-marching/autoload/vital/_marching.vim	/^  function! s:_uniq(list)$/;"	f
_uniq	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^  function! s:_uniq(list) abort$/;"	f
_value	.vim/bundle/neobundle.vim/autoload/neobundle/TOML.vim	/^function! s:_value(input)$/;"	f
_VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall.bat	/^set _VIMRC=%HOME%\\_vimrc$/;"	v
_VIMRC	.vim/bundle/neobundle.vim/bin/neoinstall_novimproc.bat	/^set _VIMRC=%HOME%\\_vimrc$/;"	v
_vital_depends	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-marching/autoload/vital/_marching/Web/JSON.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	.vim/bundle/lexima.vim/autoload/vital/_lexima.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	.vim/bundle/unite-quickfix/autoload/vital/_unite_quickfix.vim	/^function! s:_vital_files(pattern)$/;"	f
_vital_files	.vim/bundle/unite.vim/autoload/vital/_unite.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	.vim/bundle/vim-quickrun/autoload/vital/_quickrun.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	.vim/bundle/vimfiler/autoload/vital/_vimfiler.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/lexima.vim/autoload/vital/_lexima/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/unite.vim/autoload/vital/_unite/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Data/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Process/Interactive.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Task.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Reunions/Web.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-marching/autoload/vital/_marching/Web/JSON.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ConcurrentProcess.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/ProcessManager.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vimfiler/autoload/vital/_vimfiler/System/Cache/Deprecated.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_warn_deprecated	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_warn_deprecated	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/lexima.vim/autoload/vital/_lexima/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/neocomplcache/autoload/vital/_13055f8/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_wcwidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/neosnippet.vim/autoload/vital/_neosnippet/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/unite.vim/autoload/vital/_unite/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/unite.vim/autoload/vital/_unite/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/vim-marching/autoload/vital/_marching/Prelude.vim	/^  function! s:_wcwidth(ucs)$/;"	f
_wcwidth	.vim/bundle/vim-quickrun/autoload/vital/_quickrun/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	.vim/bundle/vimfiler/autoload/vital/_vimfiler/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_WIN32_IE	.vim/bundle/vimproc.vim/make_msvc.mak	/^_WIN32_IE = 0x0500$/;"	m
_WIN32_WINNT	.vim/bundle/vimproc.vim/src/proc_w32.c	40;"	d	file:
_XOPEN_SOURCE	.vim/bundle/vimproc.vim/src/proc.c	8;"	d	file:
__BSD_VISIBLE	.vim/bundle/vimproc.vim/src/proc.c	72;"	d	file:
__init__	.vim/bundle/neosnippet.vim/rplugin/python3/deoplete/sources/neosnippet.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	.vim/bundle/unite.vim/rplugin/python3/unite.py	/^    def __init__(self, vim):$/;"	m	class:UniteHandlers
__urlencode_char	.vim/bundle/vim-marching/autoload/vital/_marching/Web/HTTP.vim	/^function! s:__urlencode_char(c)$/;"	f
