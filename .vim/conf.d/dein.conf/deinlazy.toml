


[[plugins]]
repo = 'Shougo/unite.vim'
depends = 'neomru.vim'
# TODO settings

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
on_event = 'BufEnter'
hook_source = '''
"source ~/dotfiles/newvimfiles/conf.d/dein.conf/plugins/vimfiler.vim
call g:myconf.source_plugin_conf('vimfiler.vim')
'''


[[plugins]]
repo = 'Shougo/vimshell.vim'
on_map = {n = '<Plug>'}
on_if = "!has('nvim')"
hook_add = 'nmap [Space]s  <Plug>(vimshell_switch)'
hook_source = '''
"source ~/dotfiles/newvimfiles/conf.d/dein.conf/plugins/vimshell.vim
call g:myconf.source_plugin_conf('vimshell.vim')
'''

[[plugins]]
repo = 'ujihisa/vimshell-ssh'






[[plugins]]
repo = 'Shougo/neocomplcache.vim'
depends = 'context_filetype.vim'
if = "!has('nvim') && !has('lua')"
on_event = 'InsertEnter'
hook_source = '''
let g:neocomplcache#enable_at_startup = 1
call g:myconf.source_plugin_conf('neocomplcache.vim')
"  source ~/.vim/rc/plugins/neocomplcache.rc.vim
'''

[[plugins]]
repo = 'Shougo/neocomplete.vim'
depends = 'context_filetype.vim'
if = "!has('nvim') && has('lua')"
on_event = 'InsertEnter'
hook_source = '''
call g:myconf.source_plugin_conf('neocomplete.vim')
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_if = 1



[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'
hook_source = '''
call g:myconf.source_plugin_conf('neosnippet.vim')
'''




[[plugins]] # カーソル位置のコンテキストに合わせてftを切り替える
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_event = 'BufEnter'





[[plugins]]
repo = 'cohama/lexima.vim'
on_event = 'InsertEnter'
hook_source = '''
call g:myconf.source_plugin_conf('lexima.vim')
'''

[[plugins]]
repo = 'thinca/vim-quickrun'
on_event = 'InsertEnter'
hook_source = '''
call g:myconf.source_plugin_conf('vim-quickrun.vim')
'''

[[plugins]]
repo = 'scrooloose/syntastic'
on_event = ['InsertEnter', 'BufWrite']
hook_source = '''
call g:myconf.source_plugin_conf('syntastic.vim')
'''

# set paste and nopaste automatically
[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'
on_event = 'InsertEnter'


[[plugins]]
repo = 'majutsushi/tagbar'
on_event = 'BufEnter'
hook_source = '''
call g:myconf.source_plugin_conf('tagbar.vim')
'''

# 連続したコマンドの入力補助
[[plugins]]
repo = 'kana/vim-submode'
on_event = 'BufEnter'
hook_source = '''
call g:myconf.source_plugin_conf('vim-submode.vim')
'''








[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'
on_ft = 'javascript'

# JS libraries syntax
[[plugins]]
repo = 'othree/javascript-libraries-syntax.vim'
#on_ft = ['javascript', 'typescript']
on_ft = ['javascript']
hook_add = '''
let g:used_javascript_libs = 'jquery'
'''

[[plugins]]
repo = 'jason0x43/vim-js-indent'
#on_ft = ['javascript', 'typescript']
on_ft = ['javascript']
hook_add = '''
let g:js_indent_typescript = 1
'''

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'
hook_add = '''
"let g:typescript_indent_disable = 1
'''

[[plugins]]
repo = 'Quramy/tsuquyomi'
on_ft = 'typescript'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # cpp syntax
repo = 'vim-jp/cpp-vim'
on_ft = ['c', 'cpp']

[[plugins]] # nginx syntax
repo = 'evanmiller/nginx-vim-syntax'
on_ft = 'nginx'

#[[plugins]] # tex syntax
#repo = 'lervag/vimtex'
#on_ft = 'tex'

[[plugins]]
repo = 'PProvost/vim-ps1'
on_ft = 'ps1'









# cpp

[[plugins]]
repo = 'osyo-manga/vim-marching'
if = "!has('nvim')"
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c', 'cpp']

#[[plugins]]
#repo = 'OmniSharp/omnisharp-vim'
#on_ft = 'cs'
#hook_post_update = '''
#  if dein#util#_is_windows()
#    let cmd = 'MSBuild.exe server/OmniSharp.sln /p:Platform="Any CPU'
#  else
#    let cmd = 'xbuild server/OmniSharp.sln'
#  endif
#  let g:dein#plugin.build = cmd
#'''
#hook_source = '''
#let g:OmniSharp_selector_ui = 'unite'  " Use unite.vim
#'''
#
#[[plugins]]
#repo = 'OrangeT/vim-csharp'
#on_ft = 'cs'


# go
[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'

# html
[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = 'html'

# javascript




# TeX
[[plugins]]
repo = 'vim-latex/vim-latex'
on_ft = 'tex'
on_cmd = 'RemoteOpen'
hook_source = '''
let g:tex_conceal = ''
let g:tex_flavor='latex'

let g:Imap_UsePlaceHolders = 1
let g:Imap_DeleteEmptyPlaceHolders = 1
let g:Imap_StickyPlaceHolders = 0

let g:Tex_DefaultTargetFormat = 'pdf'
let g:Tex_MultipleCompileFormats='dvi,pdf'
let g:Tex_FormatDependency_pdf = 'dvi,pdf'

let g:Tex_CompileRule_dvi = 'uplatex -kanji=utf8 -no-guess-input-enc -synctex=1 -interaction=nonstopmode -file-line-error-style $*'
let g:Tex_CompileRule_pdf = 'ptex2pdf -u -l -ot "-kanji=utf8 -no-guess-input-enc -synctex=1 -interaction=nonstopmode -file-line-error-style" $*'
let g:Tex_BibtexFlavor = 'upbibtex'
let g:Tex_MakeIndexFlavor = 'upmendex $*.idx'

let g:Tex_ViewRuleComplete_pdf = ' start sumatrapdf -reuse-instance -inverse-search "\"' . $VIM . '\gvim.exe\" -n -c \":RemoteOpen +\%l \%f\"" $*.pdf'

" 指定行数を無視有効化
let g:Tex_IgnoreLevel = 9
let g:Tex_IgnoredWarnings = 
    \"Underfull\n".
    \"Overfull\n".
    \"specifier changed to\n".
    \"You have requested\n".
    \"Missing number, treated as zero.\n".
    \"There were undefined references\n".
    \"Citation %.%# undefined\n".
    \"LaTeX Font Warning: Font shape `%s' undefined\n".
    \"LaTeX Font Warning: Some font shapes were not available, defaults substituted."

'''







# dependence


[[plugins]] # for neosnippet
repo = 'Shougo/neosnippet-snippets'
on_if = 1

[[plugins]] # detect filetype in context
repo = 'Shougo/context_filetype.vim'
on_if = 1

[[plugins]] # file history those of opened by vim
repo = 'Shougo/neomru.vim'
on_if = 1

[[plugins]] # for tabpage buffer
repo = 'Shougo/tabpagebuffer.vim'
on_if = 1

#[[plugins]]
#repo = 'nsf/gocode'
#on_ft = 'go'
#hook_source = '''
#  if has('nvim')
#    let path = 'nvim'
#  else
#    let path = 'vim'
#  endif
#  let g:dein#plugin.rtp = path
#'''



# mario
[[plugins]]
repo = 'rbtnn/mario.vim'
depends = 'game_engine.vim'
on_cmd = 'Mario'

[[plugins]] # for mario
repo = 'rbtnn/game_engine.vim'
on_if = 1








